                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Wed Dec  4 23:27:38 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc152500
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _checkcollisions2
                             13 	.globl _checkcollisions
                             14 	.globl _fadein
                             15 	.globl _fadeout
                             16 	.globl _performantdelay
                             17 	.globl _printGV
                             18 	.globl _printscore
                             19 	.globl _setuparrow
                             20 	.globl _rotatearrow
                             21 	.globl _rotatesprite
                             22 	.globl _setupshield
                             23 	.globl _setupship
                             24 	.globl _moveshield
                             25 	.globl _movearrowcharacter
                             26 	.globl _movegamecharacter
                             27 	.globl _shield
                             28 	.globl _score
                             29 	.globl _speed
                             30 	.globl _arrow
                             31 	.globl _ship
                             32 	.globl _GV
                             33 	.globl _Num
                             34 	.globl _ArrowSprite
                             35 	.globl _ShieldSprite
                             36 	.globl _ShipSprite
                             37 	.globl _mymap
                             38 	.globl _mymaptile
                             39 ;--------------------------------------------------------
                             40 ; special function registers
                             41 ;--------------------------------------------------------
                             42 ;--------------------------------------------------------
                             43 ; special function bits 
                             44 ;--------------------------------------------------------
                             45 ;--------------------------------------------------------
                             46 ; internal ram data
                             47 ;--------------------------------------------------------
                             48 	.area _DATA
   0000                      49 _mymaptile::
   0000                      50 	.ds 144
   0090                      51 _mymap::
   0090                      52 	.ds 360
   01F8                      53 _ShipSprite::
   01F8                      54 	.ds 256
   02F8                      55 _ShieldSprite::
   02F8                      56 	.ds 64
   0338                      57 _ArrowSprite::
   0338                      58 	.ds 192
   03F8                      59 _Num::
   03F8                      60 	.ds 160
   0498                      61 _GV::
   0498                      62 	.ds 160
   0538                      63 _ship::
   0538                      64 	.ds 8
   0540                      65 _arrow::
   0540                      66 	.ds 9
   0549                      67 _speed::
   0549                      68 	.ds 1
   054A                      69 _score::
   054A                      70 	.ds 2
   054C                      71 _shield::
   054C                      72 	.ds 8
                             73 ;--------------------------------------------------------
                             74 ; overlayable items in internal ram 
                             75 ;--------------------------------------------------------
                             76 	.area _OVERLAY
                             77 ;--------------------------------------------------------
                             78 ; indirectly addressable internal ram data
                             79 ;--------------------------------------------------------
                             80 	.area _ISEG
                             81 ;--------------------------------------------------------
                             82 ; bit data
                             83 ;--------------------------------------------------------
                             84 	.area _BSEG
                             85 ;--------------------------------------------------------
                             86 ; external ram data
                             87 ;--------------------------------------------------------
                             88 	.area _XSEG
                             89 ;--------------------------------------------------------
                             90 ; global & static initialisations
                             91 ;--------------------------------------------------------
                             92 	.area _GSINIT
                             93 	.area _GSFINAL
                             94 	.area _GSINIT
                             95 ;	main.c 18
                             96 ;	main.c 602
                             97 ;	genArrayInit
                             98 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00             99 	ld	hl,#_mymaptile
   0003 CD 00 00            100 	call	__initrleblock
   0006 EF 00               101 	.db	-17,0x00
   0008 0F                  102 	.db	15
   0009 04 00 04 00 04 00   103 	.db	0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00
        04 00
   0011 04 00 04 00 04 00   104 	.db	0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04
        04
   0018 FB 00               105 	.db	-5,0x00
   001A 01                  106 	.db	1
   001B FF                  107 	.db	0xFF
   001C F5 00               108 	.db	-11,0x00
   001E 0F                  109 	.db	15
   001F 20 00 20 00 20 00   110 	.db	0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00
        20 00
   0027 20 00 20 00 20 00   111 	.db	0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20
        20
   002E F5 00               112 	.db	-11,0x00
   0030 01                  113 	.db	1
   0031 FF                  114 	.db	0xFF
   0032 F1 00               115 	.db	-15,0x00
   0034 05                  116 	.db	5
   0035 07 00 04 00 04      117 	.db	0x07, 0x00, 0x04, 0x00, 0x04
   003A F5 00               118 	.db	-11,0x00
   003C 0B                  119 	.db	11
   003D E0 00 20 00 20 00   120 	.db	0xE0, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00
        20 00
   0045 20 00 E0            121 	.db	0x20, 0x00, 0xE0
   0048 F5 00               122 	.db	-11,0x00
   004A 05                  123 	.db	5
   004B 04 00 04 00 07      124 	.db	0x04, 0x00, 0x04, 0x00, 0x07
   0050 F6 00               125 	.db	-10,0x00
   0052 00                  126 	.db	0
                            127 ;	main.c 40
                            128 ;	main.c 602
                            129 ;	genArrayInit
                            130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0053 21 90 00            131 	ld	hl,#_mymap
   0056 CD 00 00            132 	call	__initrleblock
   0059 81 00               133 	.db	-127,0x00
   005B EB 00               134 	.db	-21,0x00
   005D 04                  135 	.db	4
   005E 05 04 04 06         136 	.db	0x05, 0x04, 0x04, 0x06
   0062 F0 00               137 	.db	-16,0x00
   0064 04                  138 	.db	4
   0065 01 00 00 03         139 	.db	0x01, 0x00, 0x00, 0x03
   0069 F0 00               140 	.db	-16,0x00
   006B 04                  141 	.db	4
   006C 01 00 00 03         142 	.db	0x01, 0x00, 0x00, 0x03
   0070 F0 00               143 	.db	-16,0x00
   0072 04                  144 	.db	4
   0073 08 02 02 07         145 	.db	0x08, 0x02, 0x02, 0x07
   0077 81 00               146 	.db	-127,0x00
   0079 EB 00               147 	.db	-21,0x00
   007B 00                  148 	.db	0
                            149 ;	main.c 80
                            150 ;	main.c 602
                            151 ;	genArrayInit
                            152 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   007C 21 F8 01            153 	ld	hl,#_ShipSprite
   007F CD 00 00            154 	call	__initrleblock
   0082 7F                  155 	.db	127
   0083 01 00 01 01 01 01   156 	.db	0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x81, 0x01
        81 01
   008B 81 81 81 82 03 E4   157 	.db	0x81, 0x81, 0x81, 0x82, 0x03, 0xE4, 0x67, 0x99
        67 99
   0093 80 00 80 80 80 80   158 	.db	0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x81, 0x80
        81 80
   009B 81 81 81 41 C0 27   159 	.db	0x81, 0x81, 0x81, 0x41, 0xC0, 0x27, 0xE6, 0x99
        E6 99
   00A3 7F 81 3F 41 0F 30   160 	.db	0x7F, 0x81, 0x3F, 0x41, 0x0F, 0x30, 0x01, 0x0E
        01 0E
   00AB 08 01 1C 00 2A 00   161 	.db	0x08, 0x01, 0x1C, 0x00, 0x2A, 0x00, 0x00, 0x00
        00 00
   00B3 FE 81 FC 82 F0 0C   162 	.db	0xFE, 0x81, 0xFC, 0x82, 0xF0, 0x0C, 0x80, 0x70
        80 70
   00BB 10 80 38 00 54 00   163 	.db	0x10, 0x80, 0x38, 0x00, 0x54, 0x00, 0x00, 0x00
        00 00
   00C3 38 F0 80 40 80 40   164 	.db	0x38, 0xF0, 0x80, 0x40, 0x80, 0x40, 0x00, 0x80
        00 80
   00CB 00 80 80 40 C0 20   165 	.db	0x00, 0x80, 0x80, 0x40, 0xC0, 0x20, 0xFF, 0x9E
        FF 9E
   00D3 FF 9E C0 20 80 40   166 	.db	0xFF, 0x9E, 0xC0, 0x20, 0x80, 0x40, 0x00, 0x80
        00 80
   00DB 00 80 80 40 80 40   167 	.db	0x00, 0x80, 0x80, 0x40, 0x80, 0x40, 0x38, 0xF0
        38 F0
   00E3 00 01 01 02 43 04   168 	.db	0x00, 0x01, 0x01, 0x02, 0x43, 0x04, 0x23, 0x04
        23 04
   00EB 77 08 27 08 47 08   169 	.db	0x77, 0x08, 0x27, 0x08, 0x47, 0x08, 0x0F, 0x13
        0F 13
   00F3 0F 13 47 08 27 08   170 	.db	0x0F, 0x13, 0x47, 0x08, 0x27, 0x08, 0x77, 0x08
        77 08
   00FB 23 04 43 04 01 02   171 	.db	0x23, 0x04, 0x43, 0x04, 0x01, 0x02, 0x00
        00
   0102 0A                  172 	.db	10
   0103 01 E6 99 C0 27 81   173 	.db	0x01, 0xE6, 0x99, 0xC0, 0x27, 0x81, 0x41, 0x81
        41 81
   010B 81 81               174 	.db	0x81, 0x81
   010D FA 80               175 	.db	-6,0x80
   010F 0A                  176 	.db	10
   0110 00 67 99 03 E4 81   177 	.db	0x00, 0x67, 0x99, 0x03, 0xE4, 0x81, 0x82, 0x81
        82 81
   0118 81 81               178 	.db	0x81, 0x81
   011A FA 01               179 	.db	-6,0x01
   011C 61                  180 	.db	97
   011D 00 00 00 54 00 38   181 	.db	0x00, 0x00, 0x00, 0x54, 0x00, 0x38, 0x00, 0x10
        00 10
   0125 80 80 70 F0 0C FC   182 	.db	0x80, 0x80, 0x70, 0xF0, 0x0C, 0xFC, 0x82, 0xFE
        82 FE
   012D 81 00 00 2A 00 1C   183 	.db	0x81, 0x00, 0x00, 0x2A, 0x00, 0x1C, 0x00, 0x08
        00 08
   0135 01 01 0E 0F 30 3F   184 	.db	0x01, 0x01, 0x0E, 0x0F, 0x30, 0x3F, 0x41, 0x7F
        41 7F
   013D 81 FF 79 03 04 01   185 	.db	0x81, 0xFF, 0x79, 0x03, 0x04, 0x01, 0x02, 0x00
        02 00
   0145 01 00 01 01 02 01   186 	.db	0x01, 0x00, 0x01, 0x01, 0x02, 0x01, 0x02, 0x1C
        02 1C
   014D 0F 1C 0F 01 02 01   187 	.db	0x0F, 0x1C, 0x0F, 0x01, 0x02, 0x01, 0x02, 0x00
        02 00
   0155 01 00 01 01 02 03   188 	.db	0x01, 0x00, 0x01, 0x01, 0x02, 0x03, 0x04, 0xFF
        04 FF
   015D 79 F0 C8 E2 10 E4   189 	.db	0x79, 0xF0, 0xC8, 0xE2, 0x10, 0xE4, 0x10, 0xEE
        10 EE
   0165 10 C4 20 C2 20 80   190 	.db	0x10, 0xC4, 0x20, 0xC2, 0x20, 0x80, 0x40, 0x00
        40 00
   016D 80 00 80 80 40 C2   191 	.db	0x80, 0x00, 0x80, 0x80, 0x40, 0xC2, 0x20, 0xC4
        20 C4
   0175 20 EE 10 E4 10 E2   192 	.db	0x20, 0xEE, 0x10, 0xE4, 0x10, 0xE2, 0x10, 0xF0
        10 F0
   017D C8                  193 	.db	0xC8
   017E 00                  194 	.db	0
                            195 ;	main.c 116
                            196 ;	main.c 602
                            197 ;	genArrayInit
                            198 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   017F 21 F8 02            199 	ld	hl,#_ShieldSprite
   0182 CD 00 00            200 	call	__initrleblock
   0185 F4 00               201 	.db	-12,0x00
   0187 04                  202 	.db	4
   0188 FF FF FF FF         203 	.db	0xFF, 0xFF, 0xFF, 0xFF
   018C F0 03               204 	.db	-16,0x03
   018E 04                  205 	.db	4
   018F FF FF FF FF         206 	.db	0xFF, 0xFF, 0xFF, 0xFF
   0193 F4 00               207 	.db	-12,0x00
   0195 F0 C0               208 	.db	-16,0xC0
   0197 00                  209 	.db	0
                            210 ;	main.c 128
                            211 ;	main.c 602
                            212 ;	genArrayInit
                            213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0198 21 38 03            214 	ld	hl,#_ArrowSprite
   019B CD 00 00            215 	call	__initrleblock
   019E 20                  216 	.db	32
   019F E0 E0 E0 E0 FC FC   217 	.db	0xE0, 0xE0, 0xE0, 0xE0, 0xFC, 0xFC, 0xF8, 0xF8
        F8 F8
   01A7 F0 F0 E0 E0 C0 C0   218 	.db	0xF0, 0xF0, 0xE0, 0xE0, 0xC0, 0xC0, 0x80, 0x80
        80 80
   01AF 07 07 07 07 3F 3F   219 	.db	0x07, 0x07, 0x07, 0x07, 0x3F, 0x3F, 0x1F, 0x1F
        1F 1F
   01B7 0F 0F 07 07 03 03   220 	.db	0x0F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x01, 0x01
        01 01
   01BF F0 E0               221 	.db	-16,0xE0
   01C1 F0 07               222 	.db	-16,0x07
   01C3 0C                  223 	.db	12
   01C4 FF FF 7F 7F 3F 3F   224 	.db	0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0x1C, 0x1C
        1C 1C
   01CC 0C 0C 04 04         225 	.db	0x0C, 0x0C, 0x04, 0x04
   01D0 F8 00               226 	.db	-8,0x00
   01D2 0A                  227 	.db	10
   01D3 04 04 0C 0C 1C 1C   228 	.db	0x04, 0x04, 0x0C, 0x0C, 0x1C, 0x1C, 0x3F, 0x3F
        3F 3F
   01DB 7F 7F               229 	.db	0x7F, 0x7F
   01DD F8 FF               230 	.db	-8,0xFF
   01DF EC 00               231 	.db	-20,0x00
   01E1 FA FF               232 	.db	-6,0xFF
   01E3 40                  233 	.db	64
   01E4 01 01 03 03 07 07   234 	.db	0x01, 0x01, 0x03, 0x03, 0x07, 0x07, 0x0F, 0x0F
        0F 0F
   01EC 1F 1F 3F 3F 07 07   235 	.db	0x1F, 0x1F, 0x3F, 0x3F, 0x07, 0x07, 0x07, 0x07
        07 07
   01F4 80 80 C0 C0 E0 E0   236 	.db	0x80, 0x80, 0xC0, 0xC0, 0xE0, 0xE0, 0xF0, 0xF0
        F0 F0
   01FC F8 F8 FC FC E0 E0   237 	.db	0xF8, 0xF8, 0xFC, 0xFC, 0xE0, 0xE0, 0xE0, 0xE0
        E0 E0
   0204 00 00 00 00 20 20   238 	.db	0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x30, 0x30
        30 30
   020C 38 38 FC FC FE FE   239 	.db	0x38, 0x38, 0xFC, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF
        FF FF
   0214 FF FF FE FE FC FC   240 	.db	0xFF, 0xFF, 0xFE, 0xFE, 0xFC, 0xFC, 0x38, 0x38
        38 38
   021C 30 30 20 20 00 00   241 	.db	0x30, 0x30, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00
        00 00
   0224 00                  242 	.db	0
                            243 ;	main.c 156
                            244 ;	main.c 602
                            245 ;	genArrayInit
                            246 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0225 21 F8 03            247 	ld	hl,#_Num
   0228 CD 00 00            248 	call	__initrleblock
   022B 10                  249 	.db	16
   022C 7C 7C C6 C6 C6 C6   250 	.db	0x7C, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00
        00 00
   0234 C6 C6 C6 C6 7C 7C   251 	.db	0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x7C, 0x00, 0x00
        00 00
   023C FA 06               252 	.db	-6,0x06
   023E 02                  253 	.db	2
   023F 00 00               254 	.db	0x00, 0x00
   0241 FA 06               255 	.db	-6,0x06
   0243 22                  256 	.db	34
   0244 00 00 7C 7C 06 06   257 	.db	0x00, 0x00, 0x7C, 0x7C, 0x06, 0x06, 0x06, 0x06
        06 06
   024C 7C 7C C0 C0 C0 C0   258 	.db	0x7C, 0x7C, 0xC0, 0xC0, 0xC0, 0xC0, 0x7C, 0x7C
        7C 7C
   0254 00 00 7C 7C 06 06   259 	.db	0x00, 0x00, 0x7C, 0x7C, 0x06, 0x06, 0x06, 0x06
        06 06
   025C 7C 7C 06 06 06 06   260 	.db	0x7C, 0x7C, 0x06, 0x06, 0x06, 0x06, 0x7C, 0x7C
        7C 7C
   0264 00 00               261 	.db	0x00, 0x00
   0266 FA C6               262 	.db	-6,0xC6
   0268 02                  263 	.db	2
   0269 7C 7C               264 	.db	0x7C, 0x7C
   026B FA 06               265 	.db	-6,0x06
   026D 2A                  266 	.db	42
   026E 00 00 7C 7C C0 C0   267 	.db	0x00, 0x00, 0x7C, 0x7C, 0xC0, 0xC0, 0xC0, 0xC0
        C0 C0
   0276 7C 7C 06 06 06 06   268 	.db	0x7C, 0x7C, 0x06, 0x06, 0x06, 0x06, 0x7C, 0x7C
        7C 7C
   027E 00 00 7C 7C C0 C0   269 	.db	0x00, 0x00, 0x7C, 0x7C, 0xC0, 0xC0, 0xC0, 0xC0
        C0 C0
   0286 7C 7C C6 C6 C6 C6   270 	.db	0x7C, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x7C
        7C 7C
   028E 00 00 7C 7C 06 06   271 	.db	0x00, 0x00, 0x7C, 0x7C, 0x06, 0x06, 0x06, 0x06
        06 06
   0296 00 00               272 	.db	0x00, 0x00
   0298 FA 06               273 	.db	-6,0x06
   029A 22                  274 	.db	34
   029B 00 00 7C 7C C6 C6   275 	.db	0x00, 0x00, 0x7C, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6
        C6 C6
   02A3 7C 7C C6 C6 C6 C6   276 	.db	0x7C, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x7C
        7C 7C
   02AB 00 00 7C 7C C6 C6   277 	.db	0x00, 0x00, 0x7C, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6
        C6 C6
   02B3 7C 7C 06 06 06 06   278 	.db	0x7C, 0x7C, 0x06, 0x06, 0x06, 0x06, 0x7C, 0x7C
        7C 7C
   02BB 00 00               279 	.db	0x00, 0x00
   02BD 00                  280 	.db	0
                            281 ;	main.c 180
                            282 ;	main.c 602
                            283 ;	genArrayInit
                            284 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02BE 21 98 04            285 	ld	hl,#_GV
   02C1 CD 00 00            286 	call	__initrleblock
   02C4 18                  287 	.db	24
   02C5 3C 3C 62 62 60 60   288 	.db	0x3C, 0x3C, 0x62, 0x62, 0x60, 0x60, 0x6E, 0x6E
        6E 6E
   02CD 66 66 66 66 3E 3E   289 	.db	0x66, 0x66, 0x66, 0x66, 0x3E, 0x3E, 0x00, 0x00
        00 00
   02D5 3C 3C 66 66 66 66   290 	.db	0x3C, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x7E, 0x7E
        7E 7E
   02DD FA 66               291 	.db	-6,0x66
   02DF 04                  292 	.db	4
   02E0 00 00 FC FC         293 	.db	0x00, 0x00, 0xFC, 0xFC
   02E4 F8 D6               294 	.db	-8,0xD6
   02E6 18                  295 	.db	24
   02E7 C6 C6 C6 C6 00 00   296 	.db	0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x7E, 0x7E
        7E 7E
   02EF 60 60 60 60 7C 7C   297 	.db	0x60, 0x60, 0x60, 0x60, 0x7C, 0x7C, 0x60, 0x60
        60 60
   02F7 60 60 7E 7E 00 00   298 	.db	0x60, 0x60, 0x7E, 0x7E, 0x00, 0x00, 0x3C, 0x3C
        3C 3C
   02FF F6 66               299 	.db	-10,0x66
   0301 04                  300 	.db	4
   0302 3C 3C 00 00         301 	.db	0x3C, 0x3C, 0x00, 0x00
   0306 F6 66               302 	.db	-10,0x66
   0308 0E                  303 	.db	14
   0309 64 64 78 78 00 00   304 	.db	0x64, 0x64, 0x78, 0x78, 0x00, 0x00, 0x7C, 0x7C
        7C 7C
   0311 66 66 66 66 7C 7C   305 	.db	0x66, 0x66, 0x66, 0x66, 0x7C, 0x7C
   0317 FA 66               306 	.db	-6,0x66
   0319 CE 00               307 	.db	-50,0x00
   031B 00                  308 	.db	0
                            309 ;	main.c 231
                            310 ;	genAssign
                            311 ;	AOP_HL for _speed
   031C 21 49 05            312 	ld	hl,#_speed
   031F 36 01               313 	ld	(hl),#0x01
                            314 ;	main.c 232
                            315 ;	genAssign
                            316 ;	AOP_HL for _score
   0321 21 4A 05            317 	ld	hl,#_score
   0324 36 00               318 	ld	(hl),#0x00
   0326 23                  319 	inc	hl
   0327 36 00               320 	ld	(hl),#0x00
                            321 ;--------------------------------------------------------
                            322 ; Home
                            323 ;--------------------------------------------------------
                            324 	.area _HOME
                            325 	.area _CODE
                            326 ;--------------------------------------------------------
                            327 ; code
                            328 ;--------------------------------------------------------
                            329 	.area _CODE
                            330 ;	main.c 235
                            331 ;	genLabel
                            332 ;	genFunction
                            333 ;	---------------------------------
                            334 ; Function movegamecharacter
                            335 ; ---------------------------------
   0000                     336 ___movegamecharacter_start:
   0000                     337 _movegamecharacter:
   0000 E8 FB               338 	lda	sp,-5(sp)
                            339 ;	main.c 236
                            340 ;	genAssign
                            341 ;	AOP_STK for 
   0002 F8 07               342 	lda	hl,7(sp)
   0004 4E                  343 	ld	c,(hl)
   0005 23                  344 	inc	hl
   0006 46                  345 	ld	b,(hl)
                            346 ;	genPointerGet
                            347 ;	AOP_STK for _movegamecharacter_sloc0_1_0
   0007 0A                  348 	ld	a,(bc)
   0008 F8 04               349 	lda	hl,4(sp)
   000A 77                  350 	ld	(hl),a
                            351 ;	genIpush
                            352 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   000B C5                  353 	push	bc
                            354 ;	AOP_STK for 
   000C F8 0C               355 	lda	hl,12(sp)
   000E 7E                  356 	ld	a,(hl)
   000F F5                  357 	push	af
   0010 33                  358 	inc	sp
                            359 ;	genIpush
                            360 ;	AOP_STK for 
   0011 2B                  361 	dec	hl
   0012 7E                  362 	ld	a,(hl)
   0013 F5                  363 	push	af
   0014 33                  364 	inc	sp
                            365 ;	genIpush
                            366 ;	AOP_STK for _movegamecharacter_sloc0_1_0
   0015 F8 08               367 	lda	hl,8(sp)
   0017 7E                  368 	ld	a,(hl)
   0018 F5                  369 	push	af
   0019 33                  370 	inc	sp
                            371 ;	genCall
   001A CD 00 00            372 	call	_move_sprite
   001D E8 03               373 	lda	sp,3(sp)
   001F C1                  374 	pop	bc
                            375 ;	main.c 237
                            376 ;	genPlus
                            377 ;	AOP_STK for 
                            378 ;	AOP_STK for _movegamecharacter_sloc0_1_0
                            379 ;	genPlusIncr
                            380 ;	Can't optimise plus by inc, falling back to the normal way
   0020 F8 09               381 	lda	hl,9(sp)
   0022 7E                  382 	ld	a,(hl)
   0023 C6 08               383 	add	a,#0x08
   0025 F8 04               384 	lda	hl,4(sp)
   0027 77                  385 	ld	(hl),a
                            386 ;	genPlus
                            387 ;	AOP_STK for _movegamecharacter_sloc1_1_0
                            388 ;	genPlusIncr
                            389 ;	Can't optimise plus by inc, falling back to the normal way
   0028 21 01 00            390 	ld	hl,#0x0001
   002B 09                  391 	add	hl,bc
   002C 7D                  392 	ld	a,l
   002D 54                  393 	ld	d,h
   002E F8 02               394 	lda	hl,2(sp)
                            395 ;	genPointerGet
                            396 ;	AOP_STK for _movegamecharacter_sloc1_1_0
                            397 ;	AOP_STK for _movegamecharacter_sloc2_1_0
   0030 22                  398 	ld	(hl+),a
   0031 72                  399 	ld	(hl),d
   0032 5F                  400 	ld	e,a
   0033 1A                  401 	ld	a,(de)
   0034 2B                  402 	dec	hl
   0035 2B                  403 	dec	hl
   0036 77                  404 	ld	(hl),a
                            405 ;	genIpush
                            406 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0037 C5                  407 	push	bc
                            408 ;	AOP_STK for 
   0038 F8 0C               409 	lda	hl,12(sp)
   003A 7E                  410 	ld	a,(hl)
   003B F5                  411 	push	af
   003C 33                  412 	inc	sp
                            413 ;	genIpush
                            414 ;	AOP_STK for _movegamecharacter_sloc0_1_0
   003D F8 07               415 	lda	hl,7(sp)
   003F 7E                  416 	ld	a,(hl)
   0040 F5                  417 	push	af
   0041 33                  418 	inc	sp
                            419 ;	genIpush
                            420 ;	AOP_STK for _movegamecharacter_sloc2_1_0
   0042 F8 05               421 	lda	hl,5(sp)
   0044 7E                  422 	ld	a,(hl)
   0045 F5                  423 	push	af
   0046 33                  424 	inc	sp
                            425 ;	genCall
   0047 CD 00 00            426 	call	_move_sprite
   004A E8 03               427 	lda	sp,3(sp)
   004C C1                  428 	pop	bc
                            429 ;	main.c 238
                            430 ;	genPlus
                            431 ;	AOP_STK for 
                            432 ;	AOP_STK for _movegamecharacter_sloc2_1_0
                            433 ;	genPlusIncr
                            434 ;	Can't optimise plus by inc, falling back to the normal way
   004D F8 0A               435 	lda	hl,10(sp)
   004F 7E                  436 	ld	a,(hl)
   0050 C6 08               437 	add	a,#0x08
   0052 F8 01               438 	lda	hl,1(sp)
   0054 77                  439 	ld	(hl),a
                            440 ;	genPlus
                            441 ;	AOP_STK for _movegamecharacter_sloc1_1_0
                            442 ;	genPlusIncr
                            443 ;	Can't optimise plus by inc, falling back to the normal way
   0055 21 02 00            444 	ld	hl,#0x0002
   0058 09                  445 	add	hl,bc
   0059 7D                  446 	ld	a,l
   005A 54                  447 	ld	d,h
   005B F8 02               448 	lda	hl,2(sp)
                            449 ;	genPointerGet
                            450 ;	AOP_STK for _movegamecharacter_sloc1_1_0
                            451 ;	AOP_STK for _movegamecharacter_sloc3_1_0
   005D 22                  452 	ld	(hl+),a
   005E 72                  453 	ld	(hl),d
   005F 5F                  454 	ld	e,a
   0060 1A                  455 	ld	a,(de)
   0061 F8 00               456 	lda	hl,0(sp)
   0063 77                  457 	ld	(hl),a
                            458 ;	genIpush
                            459 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0064 C5                  460 	push	bc
                            461 ;	AOP_STK for _movegamecharacter_sloc2_1_0
   0065 23                  462 	inc	hl
   0066 7E                  463 	ld	a,(hl)
   0067 F5                  464 	push	af
   0068 33                  465 	inc	sp
                            466 ;	genIpush
                            467 ;	AOP_STK for 
   0069 F8 0C               468 	lda	hl,12(sp)
   006B 7E                  469 	ld	a,(hl)
   006C F5                  470 	push	af
   006D 33                  471 	inc	sp
                            472 ;	genIpush
                            473 ;	AOP_STK for _movegamecharacter_sloc3_1_0
   006E F8 04               474 	lda	hl,4(sp)
   0070 7E                  475 	ld	a,(hl)
   0071 F5                  476 	push	af
   0072 33                  477 	inc	sp
                            478 ;	genCall
   0073 CD 00 00            479 	call	_move_sprite
   0076 E8 03               480 	lda	sp,3(sp)
   0078 C1                  481 	pop	bc
                            482 ;	main.c 239
                            483 ;	genPlus
                            484 ;	genPlusIncr
   0079 03                  485 	inc	bc
   007A 03                  486 	inc	bc
   007B 03                  487 	inc	bc
                            488 ;	genPointerGet
   007C 0A                  489 	ld	a,(bc)
   007D 4F                  490 	ld	c,a
                            491 ;	genIpush
                            492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            493 ;	AOP_STK for _movegamecharacter_sloc2_1_0
   007E F8 01               494 	lda	hl,1(sp)
   0080 7E                  495 	ld	a,(hl)
   0081 F5                  496 	push	af
   0082 33                  497 	inc	sp
                            498 ;	genIpush
                            499 ;	AOP_STK for _movegamecharacter_sloc0_1_0
   0083 F8 05               500 	lda	hl,5(sp)
   0085 7E                  501 	ld	a,(hl)
   0086 F5                  502 	push	af
   0087 33                  503 	inc	sp
                            504 ;	genIpush
   0088 79                  505 	ld	a,c
   0089 F5                  506 	push	af
   008A 33                  507 	inc	sp
                            508 ;	genCall
   008B CD 00 00            509 	call	_move_sprite
   008E E8 03               510 	lda	sp,3(sp)
                            511 ;	genLabel
   0090                     512 00101$:
                            513 ;	genEndFunction
   0090 E8 05               514 	lda	sp,5(sp)
   0092 C9                  515 	ret
   0093                     516 ___movegamecharacter_end:
                            517 ;	main.c 242
                            518 ;	genLabel
                            519 ;	genFunction
                            520 ;	---------------------------------
                            521 ; Function movearrowcharacter
                            522 ; ---------------------------------
   0093                     523 ___movearrowcharacter_start:
   0093                     524 _movearrowcharacter:
   0093 E8 FB               525 	lda	sp,-5(sp)
                            526 ;	main.c 243
                            527 ;	genAssign
                            528 ;	AOP_STK for 
   0095 F8 07               529 	lda	hl,7(sp)
   0097 4E                  530 	ld	c,(hl)
   0098 23                  531 	inc	hl
   0099 46                  532 	ld	b,(hl)
                            533 ;	genPointerGet
                            534 ;	AOP_STK for _movearrowcharacter_sloc0_1_0
   009A 0A                  535 	ld	a,(bc)
   009B F8 04               536 	lda	hl,4(sp)
   009D 77                  537 	ld	(hl),a
                            538 ;	genIpush
                            539 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   009E C5                  540 	push	bc
                            541 ;	AOP_STK for 
   009F F8 0C               542 	lda	hl,12(sp)
   00A1 7E                  543 	ld	a,(hl)
   00A2 F5                  544 	push	af
   00A3 33                  545 	inc	sp
                            546 ;	genIpush
                            547 ;	AOP_STK for 
   00A4 2B                  548 	dec	hl
   00A5 7E                  549 	ld	a,(hl)
   00A6 F5                  550 	push	af
   00A7 33                  551 	inc	sp
                            552 ;	genIpush
                            553 ;	AOP_STK for _movearrowcharacter_sloc0_1_0
   00A8 F8 08               554 	lda	hl,8(sp)
   00AA 7E                  555 	ld	a,(hl)
   00AB F5                  556 	push	af
   00AC 33                  557 	inc	sp
                            558 ;	genCall
   00AD CD 00 00            559 	call	_move_sprite
   00B0 E8 03               560 	lda	sp,3(sp)
   00B2 C1                  561 	pop	bc
                            562 ;	main.c 244
                            563 ;	genPlus
                            564 ;	AOP_STK for 
                            565 ;	AOP_STK for _movearrowcharacter_sloc0_1_0
                            566 ;	genPlusIncr
                            567 ;	Can't optimise plus by inc, falling back to the normal way
   00B3 F8 09               568 	lda	hl,9(sp)
   00B5 7E                  569 	ld	a,(hl)
   00B6 C6 08               570 	add	a,#0x08
   00B8 F8 04               571 	lda	hl,4(sp)
   00BA 77                  572 	ld	(hl),a
                            573 ;	genPlus
                            574 ;	AOP_STK for _movearrowcharacter_sloc1_1_0
                            575 ;	genPlusIncr
                            576 ;	Can't optimise plus by inc, falling back to the normal way
   00BB 21 01 00            577 	ld	hl,#0x0001
   00BE 09                  578 	add	hl,bc
   00BF 7D                  579 	ld	a,l
   00C0 54                  580 	ld	d,h
   00C1 F8 02               581 	lda	hl,2(sp)
                            582 ;	genPointerGet
                            583 ;	AOP_STK for _movearrowcharacter_sloc1_1_0
                            584 ;	AOP_STK for _movearrowcharacter_sloc2_1_0
   00C3 22                  585 	ld	(hl+),a
   00C4 72                  586 	ld	(hl),d
   00C5 5F                  587 	ld	e,a
   00C6 1A                  588 	ld	a,(de)
   00C7 2B                  589 	dec	hl
   00C8 2B                  590 	dec	hl
   00C9 77                  591 	ld	(hl),a
                            592 ;	genIpush
                            593 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00CA C5                  594 	push	bc
                            595 ;	AOP_STK for 
   00CB F8 0C               596 	lda	hl,12(sp)
   00CD 7E                  597 	ld	a,(hl)
   00CE F5                  598 	push	af
   00CF 33                  599 	inc	sp
                            600 ;	genIpush
                            601 ;	AOP_STK for _movearrowcharacter_sloc0_1_0
   00D0 F8 07               602 	lda	hl,7(sp)
   00D2 7E                  603 	ld	a,(hl)
   00D3 F5                  604 	push	af
   00D4 33                  605 	inc	sp
                            606 ;	genIpush
                            607 ;	AOP_STK for _movearrowcharacter_sloc2_1_0
   00D5 F8 05               608 	lda	hl,5(sp)
   00D7 7E                  609 	ld	a,(hl)
   00D8 F5                  610 	push	af
   00D9 33                  611 	inc	sp
                            612 ;	genCall
   00DA CD 00 00            613 	call	_move_sprite
   00DD E8 03               614 	lda	sp,3(sp)
   00DF C1                  615 	pop	bc
                            616 ;	main.c 245
                            617 ;	genPlus
                            618 ;	AOP_STK for 
                            619 ;	AOP_STK for _movearrowcharacter_sloc2_1_0
                            620 ;	genPlusIncr
                            621 ;	Can't optimise plus by inc, falling back to the normal way
   00E0 F8 0A               622 	lda	hl,10(sp)
   00E2 7E                  623 	ld	a,(hl)
   00E3 C6 08               624 	add	a,#0x08
   00E5 F8 01               625 	lda	hl,1(sp)
   00E7 77                  626 	ld	(hl),a
                            627 ;	genPlus
                            628 ;	AOP_STK for _movearrowcharacter_sloc1_1_0
                            629 ;	genPlusIncr
                            630 ;	Can't optimise plus by inc, falling back to the normal way
   00E8 21 02 00            631 	ld	hl,#0x0002
   00EB 09                  632 	add	hl,bc
   00EC 7D                  633 	ld	a,l
   00ED 54                  634 	ld	d,h
   00EE F8 02               635 	lda	hl,2(sp)
                            636 ;	genPointerGet
                            637 ;	AOP_STK for _movearrowcharacter_sloc1_1_0
                            638 ;	AOP_STK for _movearrowcharacter_sloc3_1_0
   00F0 22                  639 	ld	(hl+),a
   00F1 72                  640 	ld	(hl),d
   00F2 5F                  641 	ld	e,a
   00F3 1A                  642 	ld	a,(de)
   00F4 F8 00               643 	lda	hl,0(sp)
   00F6 77                  644 	ld	(hl),a
                            645 ;	genIpush
                            646 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00F7 C5                  647 	push	bc
                            648 ;	AOP_STK for _movearrowcharacter_sloc2_1_0
   00F8 23                  649 	inc	hl
   00F9 7E                  650 	ld	a,(hl)
   00FA F5                  651 	push	af
   00FB 33                  652 	inc	sp
                            653 ;	genIpush
                            654 ;	AOP_STK for 
   00FC F8 0C               655 	lda	hl,12(sp)
   00FE 7E                  656 	ld	a,(hl)
   00FF F5                  657 	push	af
   0100 33                  658 	inc	sp
                            659 ;	genIpush
                            660 ;	AOP_STK for _movearrowcharacter_sloc3_1_0
   0101 F8 04               661 	lda	hl,4(sp)
   0103 7E                  662 	ld	a,(hl)
   0104 F5                  663 	push	af
   0105 33                  664 	inc	sp
                            665 ;	genCall
   0106 CD 00 00            666 	call	_move_sprite
   0109 E8 03               667 	lda	sp,3(sp)
   010B C1                  668 	pop	bc
                            669 ;	main.c 246
                            670 ;	genPlus
                            671 ;	genPlusIncr
   010C 03                  672 	inc	bc
   010D 03                  673 	inc	bc
   010E 03                  674 	inc	bc
                            675 ;	genPointerGet
   010F 0A                  676 	ld	a,(bc)
   0110 4F                  677 	ld	c,a
                            678 ;	genIpush
                            679 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            680 ;	AOP_STK for _movearrowcharacter_sloc2_1_0
   0111 F8 01               681 	lda	hl,1(sp)
   0113 7E                  682 	ld	a,(hl)
   0114 F5                  683 	push	af
   0115 33                  684 	inc	sp
                            685 ;	genIpush
                            686 ;	AOP_STK for _movearrowcharacter_sloc0_1_0
   0116 F8 05               687 	lda	hl,5(sp)
   0118 7E                  688 	ld	a,(hl)
   0119 F5                  689 	push	af
   011A 33                  690 	inc	sp
                            691 ;	genIpush
   011B 79                  692 	ld	a,c
   011C F5                  693 	push	af
   011D 33                  694 	inc	sp
                            695 ;	genCall
   011E CD 00 00            696 	call	_move_sprite
   0121 E8 03               697 	lda	sp,3(sp)
                            698 ;	genLabel
   0123                     699 00101$:
                            700 ;	genEndFunction
   0123 E8 05               701 	lda	sp,5(sp)
   0125 C9                  702 	ret
   0126                     703 ___movearrowcharacter_end:
                            704 ;	main.c 249
                            705 ;	genLabel
                            706 ;	genFunction
                            707 ;	---------------------------------
                            708 ; Function moveshield
                            709 ; ---------------------------------
   0126                     710 ___moveshield_start:
   0126                     711 _moveshield:
   0126 E8 FC               712 	lda	sp,-4(sp)
                            713 ;	main.c 250
                            714 ;	genAssign
                            715 ;	AOP_STK for 
   0128 F8 06               716 	lda	hl,6(sp)
   012A 4E                  717 	ld	c,(hl)
   012B 23                  718 	inc	hl
   012C 46                  719 	ld	b,(hl)
                            720 ;	genPlus
                            721 ;	AOP_STK for _moveshield_sloc0_1_0
                            722 ;	genPlusIncr
                            723 ;	Can't optimise plus by inc, falling back to the normal way
   012D 21 04 00            724 	ld	hl,#0x0004
   0130 09                  725 	add	hl,bc
   0131 7D                  726 	ld	a,l
   0132 54                  727 	ld	d,h
   0133 F8 02               728 	lda	hl,2(sp)
                            729 ;	genPointerGet
                            730 ;	AOP_STK for _moveshield_sloc0_1_0
                            731 ;	AOP_STK for _moveshield_sloc1_1_0
   0135 22                  732 	ld	(hl+),a
   0136 72                  733 	ld	(hl),d
   0137 5F                  734 	ld	e,a
   0138 1A                  735 	ld	a,(de)
   0139 2B                  736 	dec	hl
   013A 2B                  737 	dec	hl
   013B 77                  738 	ld	(hl),a
                            739 ;	genPlus
                            740 ;	AOP_STK for _moveshield_sloc0_1_0
                            741 ;	genPlusIncr
                            742 ;	Can't optimise plus by inc, falling back to the normal way
   013C 21 02 00            743 	ld	hl,#0x0002
   013F 09                  744 	add	hl,bc
   0140 7D                  745 	ld	a,l
   0141 54                  746 	ld	d,h
   0142 F8 02               747 	lda	hl,2(sp)
                            748 ;	genPointerGet
                            749 ;	AOP_STK for _moveshield_sloc0_1_0
                            750 ;	AOP_STK for _moveshield_sloc2_1_0
   0144 22                  751 	ld	(hl+),a
   0145 72                  752 	ld	(hl),d
   0146 5F                  753 	ld	e,a
   0147 1A                  754 	ld	a,(de)
   0148 F8 00               755 	lda	hl,0(sp)
   014A 77                  756 	ld	(hl),a
                            757 ;	genPointerGet
                            758 ;	AOP_STK for _moveshield_sloc0_1_0
   014B 0A                  759 	ld	a,(bc)
   014C 23                  760 	inc	hl
   014D 23                  761 	inc	hl
   014E 77                  762 	ld	(hl),a
                            763 ;	genIpush
                            764 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   014F C5                  765 	push	bc
                            766 ;	AOP_STK for _moveshield_sloc1_1_0
   0150 2B                  767 	dec	hl
   0151 7E                  768 	ld	a,(hl)
   0152 F5                  769 	push	af
   0153 33                  770 	inc	sp
                            771 ;	genIpush
                            772 ;	AOP_STK for _moveshield_sloc2_1_0
   0154 2B                  773 	dec	hl
   0155 7E                  774 	ld	a,(hl)
   0156 F5                  775 	push	af
   0157 33                  776 	inc	sp
                            777 ;	genIpush
                            778 ;	AOP_STK for _moveshield_sloc0_1_0
   0158 23                  779 	inc	hl
   0159 23                  780 	inc	hl
   015A 7E                  781 	ld	a,(hl)
   015B F5                  782 	push	af
   015C 33                  783 	inc	sp
                            784 ;	genCall
   015D CD 00 00            785 	call	_move_sprite
   0160 E8 03               786 	lda	sp,3(sp)
   0162 C1                  787 	pop	bc
                            788 ;	main.c 251
                            789 ;	genPlus
                            790 ;	AOP_STK for _moveshield_sloc0_1_0
                            791 ;	genPlusIncr
                            792 ;	Can't optimise plus by inc, falling back to the normal way
   0163 21 05 00            793 	ld	hl,#0x0005
   0166 09                  794 	add	hl,bc
   0167 7D                  795 	ld	a,l
   0168 54                  796 	ld	d,h
   0169 F8 02               797 	lda	hl,2(sp)
                            798 ;	genPointerGet
                            799 ;	AOP_STK for _moveshield_sloc0_1_0
                            800 ;	AOP_STK for _moveshield_sloc2_1_0
   016B 22                  801 	ld	(hl+),a
   016C 72                  802 	ld	(hl),d
   016D 5F                  803 	ld	e,a
   016E 1A                  804 	ld	a,(de)
   016F F8 00               805 	lda	hl,0(sp)
   0171 77                  806 	ld	(hl),a
                            807 ;	genPlus
                            808 ;	AOP_STK for _moveshield_sloc0_1_0
                            809 ;	genPlusIncr
                            810 ;	Can't optimise plus by inc, falling back to the normal way
   0172 21 03 00            811 	ld	hl,#0x0003
   0175 09                  812 	add	hl,bc
   0176 7D                  813 	ld	a,l
   0177 54                  814 	ld	d,h
   0178 F8 02               815 	lda	hl,2(sp)
                            816 ;	genPointerGet
                            817 ;	AOP_STK for _moveshield_sloc0_1_0
                            818 ;	AOP_STK for _moveshield_sloc1_1_0
   017A 22                  819 	ld	(hl+),a
   017B 72                  820 	ld	(hl),d
   017C 5F                  821 	ld	e,a
   017D 1A                  822 	ld	a,(de)
   017E 2B                  823 	dec	hl
   017F 2B                  824 	dec	hl
   0180 77                  825 	ld	(hl),a
                            826 ;	genPlus
                            827 ;	genPlusIncr
   0181 03                  828 	inc	bc
                            829 ;	genPointerGet
   0182 0A                  830 	ld	a,(bc)
   0183 4F                  831 	ld	c,a
                            832 ;	genIpush
                            833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            834 ;	AOP_STK for _moveshield_sloc2_1_0
   0184 2B                  835 	dec	hl
   0185 7E                  836 	ld	a,(hl)
   0186 F5                  837 	push	af
   0187 33                  838 	inc	sp
                            839 ;	genIpush
                            840 ;	AOP_STK for _moveshield_sloc1_1_0
   0188 23                  841 	inc	hl
   0189 7E                  842 	ld	a,(hl)
   018A F5                  843 	push	af
   018B 33                  844 	inc	sp
                            845 ;	genIpush
   018C 79                  846 	ld	a,c
   018D F5                  847 	push	af
   018E 33                  848 	inc	sp
                            849 ;	genCall
   018F CD 00 00            850 	call	_move_sprite
   0192 E8 03               851 	lda	sp,3(sp)
                            852 ;	genLabel
   0194                     853 00101$:
                            854 ;	genEndFunction
   0194 E8 04               855 	lda	sp,4(sp)
   0196 C9                  856 	ret
   0197                     857 ___moveshield_end:
                            858 ;	main.c 254
                            859 ;	genLabel
                            860 ;	genFunction
                            861 ;	---------------------------------
                            862 ; Function setupship
                            863 ; ---------------------------------
   0197                     864 ___setupship_start:
   0197                     865 _setupship:
   0197 E8 FD               866 	lda	sp,-3(sp)
                            867 ;	main.c 255
                            868 ;	genPlus
                            869 ;	genPlusIncr
   0199 01 3C 05            870 	ld	bc,#_ship + 4
                            871 ;	genAssign (pointer)
   019C 3E 50               872 	ld	a,#0x50
   019E 02                  873 	ld	(bc),a
                            874 ;	main.c 256
                            875 ;	genPlus
                            876 ;	AOP_STK for _setupship_sloc0_1_0
                            877 ;	genPlusIncr
                            878 ;	Can't optimise plus by inc, falling back to the normal way
   019F 11 38 05            879 	ld	de,#_ship
   01A2 21 05 00            880 	ld	hl,#0x0005
   01A5 19                  881 	add	hl,de
   01A6 7D                  882 	ld	a,l
   01A7 54                  883 	ld	d,h
   01A8 F8 01               884 	lda	hl,1(sp)
   01AA 22                  885 	ld	(hl+),a
   01AB 72                  886 	ld	(hl),d
                            887 ;	genAssign (pointer)
                            888 ;	AOP_STK for _setupship_sloc0_1_0
   01AC 2B                  889 	dec	hl
   01AD 5E                  890 	ld	e,(hl)
   01AE 23                  891 	inc	hl
   01AF 56                  892 	ld	d,(hl)
   01B0 3E 50               893 	ld	a,#0x50
   01B2 12                  894 	ld	(de),a
                            895 ;	main.c 257
                            896 ;	genPlus
                            897 ;	genPlusIncr
   01B3 21 3E 05            898 	ld	hl,#_ship + 6
                            899 ;	genAssign (pointer)
   01B6 36 10               900 	ld	(hl),#0x10
                            901 ;	main.c 258
                            902 ;	genPlus
                            903 ;	genPlusIncr
   01B8 23                  904 	inc	hl
                            905 ;	genAssign (pointer)
   01B9 36 10               906 	ld	(hl),#0x10
                            907 ;	main.c 261
                            908 ;	genIpush
                            909 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01BB C5                  910 	push	bc
   01BC 21 00 00            911 	ld	hl,#0x0000
   01BF E5                  912 	push	hl
                            913 ;	genCall
   01C0 CD 00 00            914 	call	_set_sprite_tile
   01C3 E8 02               915 	lda	sp,2(sp)
   01C5 C1                  916 	pop	bc
                            917 ;	main.c 262
                            918 ;	genAssign (pointer)
   01C6 11 38 05            919 	ld	de,#_ship
   01C9 3E 00               920 	ld	a,#0x00
   01CB 12                  921 	ld	(de),a
                            922 ;	main.c 263
                            923 ;	genIpush
                            924 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01CC C5                  925 	push	bc
   01CD 21 01 01            926 	ld	hl,#0x0101
   01D0 E5                  927 	push	hl
                            928 ;	genCall
   01D1 CD 00 00            929 	call	_set_sprite_tile
   01D4 E8 02               930 	lda	sp,2(sp)
   01D6 C1                  931 	pop	bc
                            932 ;	main.c 264
                            933 ;	genPlus
                            934 ;	genPlusIncr
   01D7 21 39 05            935 	ld	hl,#_ship + 1
                            936 ;	genAssign (pointer)
   01DA 36 01               937 	ld	(hl),#0x01
                            938 ;	main.c 265
                            939 ;	genIpush
                            940 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01DC C5                  941 	push	bc
   01DD 21 02 02            942 	ld	hl,#0x0202
   01E0 E5                  943 	push	hl
                            944 ;	genCall
   01E1 CD 00 00            945 	call	_set_sprite_tile
   01E4 E8 02               946 	lda	sp,2(sp)
   01E6 C1                  947 	pop	bc
                            948 ;	main.c 266
                            949 ;	genPlus
                            950 ;	genPlusIncr
   01E7 21 3A 05            951 	ld	hl,#_ship + 2
                            952 ;	genAssign (pointer)
   01EA 36 02               953 	ld	(hl),#0x02
                            954 ;	main.c 267
                            955 ;	genIpush
                            956 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   01EC C5                  957 	push	bc
   01ED 21 03 03            958 	ld	hl,#0x0303
   01F0 E5                  959 	push	hl
                            960 ;	genCall
   01F1 CD 00 00            961 	call	_set_sprite_tile
   01F4 E8 02               962 	lda	sp,2(sp)
   01F6 C1                  963 	pop	bc
                            964 ;	main.c 268
                            965 ;	genPlus
                            966 ;	genPlusIncr
   01F7 21 3B 05            967 	ld	hl,#_ship + 3
                            968 ;	genAssign (pointer)
   01FA 36 03               969 	ld	(hl),#0x03
                            970 ;	main.c 270
                            971 ;	genPointerGet
                            972 ;	AOP_STK for _setupship_sloc0_1_0
                            973 ;	AOP_STK for _setupship_sloc1_1_0
   01FC F8 01               974 	lda	hl,1(sp)
   01FE 5E                  975 	ld	e,(hl)
   01FF 23                  976 	inc	hl
   0200 56                  977 	ld	d,(hl)
   0201 1A                  978 	ld	a,(de)
   0202 2B                  979 	dec	hl
   0203 2B                  980 	dec	hl
   0204 77                  981 	ld	(hl),a
                            982 ;	genPointerGet
   0205 0A                  983 	ld	a,(bc)
   0206 4F                  984 	ld	c,a
                            985 ;	genIpush
                            986 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            987 ;	AOP_STK for _setupship_sloc1_1_0
   0207 7E                  988 	ld	a,(hl)
   0208 F5                  989 	push	af
   0209 33                  990 	inc	sp
                            991 ;	genIpush
   020A 79                  992 	ld	a,c
   020B F5                  993 	push	af
   020C 33                  994 	inc	sp
                            995 ;	genIpush
   020D 21 38 05            996 	ld	hl,#_ship
   0210 E5                  997 	push	hl
                            998 ;	genCall
   0211 CD 00 00            999 	call	_movegamecharacter
   0214 E8 04              1000 	lda	sp,4(sp)
                           1001 ;	genLabel
   0216                    1002 00101$:
                           1003 ;	genEndFunction
   0216 E8 03              1004 	lda	sp,3(sp)
   0218 C9                 1005 	ret
   0219                    1006 ___setupship_end:
                           1007 ;	main.c 273
                           1008 ;	genLabel
                           1009 ;	genFunction
                           1010 ;	---------------------------------
                           1011 ; Function setupshield
                           1012 ; ---------------------------------
   0219                    1013 ___setupshield_start:
   0219                    1014 _setupshield:
                           1015 	
                           1016 ;	main.c 274
                           1017 ;	genPlus
                           1018 ;	genPlusIncr
   0219 21 4E 05           1019 	ld	hl,#_shield + 2
                           1020 ;	genAssign (pointer)
   021C 36 50              1021 	ld	(hl),#0x50
                           1022 ;	main.c 275
                           1023 ;	genPlus
                           1024 ;	genPlusIncr
   021E 23                 1025 	inc	hl
                           1026 ;	genAssign (pointer)
   021F 36 58              1027 	ld	(hl),#0x58
                           1028 ;	main.c 276
                           1029 ;	genPlus
                           1030 ;	genPlusIncr
   0221 23                 1031 	inc	hl
                           1032 ;	genAssign (pointer)
   0222 36 44              1033 	ld	(hl),#0x44
                           1034 ;	main.c 277
                           1035 ;	genPlus
                           1036 ;	genPlusIncr
   0224 23                 1037 	inc	hl
                           1038 ;	genAssign (pointer)
   0225 36 44              1039 	ld	(hl),#0x44
                           1040 ;	main.c 279
                           1041 ;	genIpush
                           1042 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0227 21 04 1C           1043 	ld	hl,#0x1C04
   022A E5                 1044 	push	hl
                           1045 ;	genCall
   022B CD 00 00           1046 	call	_set_sprite_tile
   022E E8 02              1047 	lda	sp,2(sp)
                           1048 ;	main.c 280
                           1049 ;	genAssign (pointer)
   0230 11 4C 05           1050 	ld	de,#_shield
   0233 3E 04              1051 	ld	a,#0x04
   0235 12                 1052 	ld	(de),a
                           1053 ;	main.c 281
                           1054 ;	genIpush
                           1055 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0236 21 05 1C           1056 	ld	hl,#0x1C05
   0239 E5                 1057 	push	hl
                           1058 ;	genCall
   023A CD 00 00           1059 	call	_set_sprite_tile
   023D E8 02              1060 	lda	sp,2(sp)
                           1061 ;	main.c 282
                           1062 ;	genPlus
                           1063 ;	genPlusIncr
   023F 21 4D 05           1064 	ld	hl,#_shield + 1
                           1065 ;	genAssign (pointer)
   0242 36 05              1066 	ld	(hl),#0x05
                           1067 ;	main.c 284
                           1068 ;	genIpush
                           1069 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0244 2B                 1070 	dec	hl
   0245 E5                 1071 	push	hl
                           1072 ;	genCall
   0246 CD 26 01           1073 	call	_moveshield
   0249 E8 02              1074 	lda	sp,2(sp)
                           1075 ;	genLabel
   024B                    1076 00101$:
                           1077 ;	genEndFunction
                           1078 	
   024B C9                 1079 	ret
   024C                    1080 ___setupshield_end:
                           1081 ;	main.c 287
                           1082 ;	genLabel
                           1083 ;	genFunction
                           1084 ;	---------------------------------
                           1085 ; Function rotatesprite
                           1086 ; ---------------------------------
   024C                    1087 ___rotatesprite_start:
   024C                    1088 _rotatesprite:
                           1089 	
                           1090 ;	main.c 288
                           1091 ;	genCmpEq
                           1092 ;	AOP_STK for 
                           1093 ; genCmpEq: left 1, right 1, result 0
   024C F8 02              1094 	lda	hl,2(sp)
   024E 7E                 1095 	ld	a,(hl)
   024F B7                 1096 	or	a,a
   0250 C2 AF 02           1097 	jp	nz,00110$
   0253 18 03              1098 	jr	00119$
   0255                    1099 00118$:
   0255 C3 AF 02           1100 	jp	00110$
   0258                    1101 00119$:
                           1102 ;	main.c 289
                           1103 ;	genIpush
                           1104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0258 21 00 00           1105 	ld	hl,#0x0000
   025B E5                 1106 	push	hl
                           1107 ;	genCall
   025C CD 00 00           1108 	call	_set_sprite_tile
   025F E8 02              1109 	lda	sp,2(sp)
                           1110 ;	main.c 290
                           1111 ;	genIpush
                           1112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0261 21 01 01           1113 	ld	hl,#0x0101
   0264 E5                 1114 	push	hl
                           1115 ;	genCall
   0265 CD 00 00           1116 	call	_set_sprite_tile
   0268 E8 02              1117 	lda	sp,2(sp)
                           1118 ;	main.c 291
                           1119 ;	genIpush
                           1120 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   026A 21 02 02           1121 	ld	hl,#0x0202
   026D E5                 1122 	push	hl
                           1123 ;	genCall
   026E CD 00 00           1124 	call	_set_sprite_tile
   0271 E8 02              1125 	lda	sp,2(sp)
                           1126 ;	main.c 292
                           1127 ;	genIpush
                           1128 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0273 21 03 03           1129 	ld	hl,#0x0303
   0276 E5                 1130 	push	hl
                           1131 ;	genCall
   0277 CD 00 00           1132 	call	_set_sprite_tile
   027A E8 02              1133 	lda	sp,2(sp)
                           1134 ;	main.c 294
                           1135 ;	genPlus
                           1136 ;	genPlusIncr
   027C 21 4E 05           1137 	ld	hl,#_shield + 2
                           1138 ;	genAssign (pointer)
   027F 36 50              1139 	ld	(hl),#0x50
                           1140 ;	main.c 295
                           1141 ;	genPlus
                           1142 ;	genPlusIncr
   0281 23                 1143 	inc	hl
                           1144 ;	genAssign (pointer)
   0282 36 58              1145 	ld	(hl),#0x58
                           1146 ;	main.c 296
                           1147 ;	genPlus
                           1148 ;	genPlusIncr
   0284 23                 1149 	inc	hl
                           1150 ;	genAssign (pointer)
   0285 36 44              1151 	ld	(hl),#0x44
                           1152 ;	main.c 297
                           1153 ;	genPlus
                           1154 ;	genPlusIncr
   0287 23                 1155 	inc	hl
                           1156 ;	genAssign (pointer)
   0288 36 44              1157 	ld	(hl),#0x44
                           1158 ;	main.c 299
                           1159 ;	genPlus
                           1160 ;	genPlusIncr
   028A 23                 1161 	inc	hl
   028B 23                 1162 	inc	hl
                           1163 ;	genAssign (pointer)
   028C 36 03              1164 	ld	(hl),#0x03
                           1165 ;	main.c 300
                           1166 ;	genPlus
                           1167 ;	genPlusIncr
   028E 2B                 1168 	dec	hl
                           1169 ;	genAssign (pointer)
   028F 36 10              1170 	ld	(hl),#0x10
                           1171 ;	main.c 302
                           1172 ;	genIpush
                           1173 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0291 21 04 1C           1174 	ld	hl,#0x1C04
   0294 E5                 1175 	push	hl
                           1176 ;	genCall
   0295 CD 00 00           1177 	call	_set_sprite_tile
   0298 E8 02              1178 	lda	sp,2(sp)
                           1179 ;	main.c 303
                           1180 ;	genIpush
                           1181 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   029A 21 05 1C           1182 	ld	hl,#0x1C05
   029D E5                 1183 	push	hl
                           1184 ;	genCall
   029E CD 00 00           1185 	call	_set_sprite_tile
   02A1 E8 02              1186 	lda	sp,2(sp)
                           1187 ;	main.c 305
                           1188 ;	genIpush
                           1189 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02A3 21 4C 05           1190 	ld	hl,#_shield
   02A6 E5                 1191 	push	hl
                           1192 ;	genCall
   02A7 CD 26 01           1193 	call	_moveshield
   02AA E8 02              1194 	lda	sp,2(sp)
                           1195 ;	genGoto
   02AC C3 D8 03           1196 	jp	00112$
                           1197 ;	genLabel
   02AF                    1198 00110$:
                           1199 ;	main.c 307
                           1200 ;	genCmpEq
                           1201 ;	AOP_STK for 
                           1202 ; genCmpEq: left 1, right 1, result 0
   02AF F8 02              1203 	lda	hl,2(sp)
   02B1 7E                 1204 	ld	a,(hl)
   02B2 FE 01              1205 	cp	a,#0x01
   02B4 C2 13 03           1206 	jp	nz,00107$
   02B7 18 03              1207 	jr	00121$
   02B9                    1208 00120$:
   02B9 C3 13 03           1209 	jp	00107$
   02BC                    1210 00121$:
                           1211 ;	main.c 308
                           1212 ;	genIpush
                           1213 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02BC 21 00 06           1214 	ld	hl,#0x0600
   02BF E5                 1215 	push	hl
                           1216 ;	genCall
   02C0 CD 00 00           1217 	call	_set_sprite_tile
   02C3 E8 02              1218 	lda	sp,2(sp)
                           1219 ;	main.c 309
                           1220 ;	genIpush
                           1221 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02C5 21 01 04           1222 	ld	hl,#0x0401
   02C8 E5                 1223 	push	hl
                           1224 ;	genCall
   02C9 CD 00 00           1225 	call	_set_sprite_tile
   02CC E8 02              1226 	lda	sp,2(sp)
                           1227 ;	main.c 310
                           1228 ;	genIpush
                           1229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02CE 21 02 07           1230 	ld	hl,#0x0702
   02D1 E5                 1231 	push	hl
                           1232 ;	genCall
   02D2 CD 00 00           1233 	call	_set_sprite_tile
   02D5 E8 02              1234 	lda	sp,2(sp)
                           1235 ;	main.c 311
                           1236 ;	genIpush
                           1237 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02D7 21 03 05           1238 	ld	hl,#0x0503
   02DA E5                 1239 	push	hl
                           1240 ;	genCall
   02DB CD 00 00           1241 	call	_set_sprite_tile
   02DE E8 02              1242 	lda	sp,2(sp)
                           1243 ;	main.c 313
                           1244 ;	genPlus
                           1245 ;	genPlusIncr
   02E0 21 4E 05           1246 	ld	hl,#_shield + 2
                           1247 ;	genAssign (pointer)
   02E3 36 64              1248 	ld	(hl),#0x64
                           1249 ;	main.c 314
                           1250 ;	genPlus
                           1251 ;	genPlusIncr
   02E5 23                 1252 	inc	hl
                           1253 ;	genAssign (pointer)
   02E6 36 64              1254 	ld	(hl),#0x64
                           1255 ;	main.c 315
                           1256 ;	genPlus
                           1257 ;	genPlusIncr
   02E8 23                 1258 	inc	hl
                           1259 ;	genAssign (pointer)
   02E9 36 50              1260 	ld	(hl),#0x50
                           1261 ;	main.c 316
                           1262 ;	genPlus
                           1263 ;	genPlusIncr
   02EB 23                 1264 	inc	hl
                           1265 ;	genAssign (pointer)
   02EC 36 58              1266 	ld	(hl),#0x58
                           1267 ;	main.c 318
                           1268 ;	genPlus
                           1269 ;	genPlusIncr
   02EE 23                 1270 	inc	hl
   02EF 23                 1271 	inc	hl
                           1272 ;	genAssign (pointer)
   02F0 36 10              1273 	ld	(hl),#0x10
                           1274 ;	main.c 319
                           1275 ;	genPlus
                           1276 ;	genPlusIncr
   02F2 2B                 1277 	dec	hl
                           1278 ;	genAssign (pointer)
   02F3 36 03              1279 	ld	(hl),#0x03
                           1280 ;	main.c 321
                           1281 ;	genIpush
                           1282 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02F5 21 04 1F           1283 	ld	hl,#0x1F04
   02F8 E5                 1284 	push	hl
                           1285 ;	genCall
   02F9 CD 00 00           1286 	call	_set_sprite_tile
   02FC E8 02              1287 	lda	sp,2(sp)
                           1288 ;	main.c 322
                           1289 ;	genIpush
                           1290 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02FE 21 05 1F           1291 	ld	hl,#0x1F05
   0301 E5                 1292 	push	hl
                           1293 ;	genCall
   0302 CD 00 00           1294 	call	_set_sprite_tile
   0305 E8 02              1295 	lda	sp,2(sp)
                           1296 ;	main.c 324
                           1297 ;	genIpush
                           1298 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0307 21 4C 05           1299 	ld	hl,#_shield
   030A E5                 1300 	push	hl
                           1301 ;	genCall
   030B CD 26 01           1302 	call	_moveshield
   030E E8 02              1303 	lda	sp,2(sp)
                           1304 ;	genGoto
   0310 C3 D8 03           1305 	jp	00112$
                           1306 ;	genLabel
   0313                    1307 00107$:
                           1308 ;	main.c 326
                           1309 ;	genCmpEq
                           1310 ;	AOP_STK for 
                           1311 ; genCmpEq: left 1, right 1, result 0
   0313 F8 02              1312 	lda	hl,2(sp)
   0315 7E                 1313 	ld	a,(hl)
   0316 FE 02              1314 	cp	a,#0x02
   0318 C2 77 03           1315 	jp	nz,00104$
   031B 18 03              1316 	jr	00123$
   031D                    1317 00122$:
   031D C3 77 03           1318 	jp	00104$
   0320                    1319 00123$:
                           1320 ;	main.c 327
                           1321 ;	genIpush
                           1322 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0320 21 00 0B           1323 	ld	hl,#0x0B00
   0323 E5                 1324 	push	hl
                           1325 ;	genCall
   0324 CD 00 00           1326 	call	_set_sprite_tile
   0327 E8 02              1327 	lda	sp,2(sp)
                           1328 ;	main.c 328
                           1329 ;	genIpush
                           1330 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0329 21 01 0A           1331 	ld	hl,#0x0A01
   032C E5                 1332 	push	hl
                           1333 ;	genCall
   032D CD 00 00           1334 	call	_set_sprite_tile
   0330 E8 02              1335 	lda	sp,2(sp)
                           1336 ;	main.c 329
                           1337 ;	genIpush
                           1338 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0332 21 02 09           1339 	ld	hl,#0x0902
   0335 E5                 1340 	push	hl
                           1341 ;	genCall
   0336 CD 00 00           1342 	call	_set_sprite_tile
   0339 E8 02              1343 	lda	sp,2(sp)
                           1344 ;	main.c 330
                           1345 ;	genIpush
                           1346 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   033B 21 03 08           1347 	ld	hl,#0x0803
   033E E5                 1348 	push	hl
                           1349 ;	genCall
   033F CD 00 00           1350 	call	_set_sprite_tile
   0342 E8 02              1351 	lda	sp,2(sp)
                           1352 ;	main.c 332
                           1353 ;	genPlus
                           1354 ;	genPlusIncr
   0344 21 4E 05           1355 	ld	hl,#_shield + 2
                           1356 ;	genAssign (pointer)
   0347 36 50              1357 	ld	(hl),#0x50
                           1358 ;	main.c 333
                           1359 ;	genPlus
                           1360 ;	genPlusIncr
   0349 23                 1361 	inc	hl
                           1362 ;	genAssign (pointer)
   034A 36 58              1363 	ld	(hl),#0x58
                           1364 ;	main.c 334
                           1365 ;	genPlus
                           1366 ;	genPlusIncr
   034C 23                 1367 	inc	hl
                           1368 ;	genAssign (pointer)
   034D 36 64              1369 	ld	(hl),#0x64
                           1370 ;	main.c 335
                           1371 ;	genPlus
                           1372 ;	genPlusIncr
   034F 23                 1373 	inc	hl
                           1374 ;	genAssign (pointer)
   0350 36 64              1375 	ld	(hl),#0x64
                           1376 ;	main.c 337
                           1377 ;	genPlus
                           1378 ;	genPlusIncr
   0352 23                 1379 	inc	hl
   0353 23                 1380 	inc	hl
                           1381 ;	genAssign (pointer)
   0354 36 03              1382 	ld	(hl),#0x03
                           1383 ;	main.c 338
                           1384 ;	genPlus
                           1385 ;	genPlusIncr
   0356 2B                 1386 	dec	hl
                           1387 ;	genAssign (pointer)
   0357 36 10              1388 	ld	(hl),#0x10
                           1389 ;	main.c 340
                           1390 ;	genIpush
                           1391 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0359 21 04 1E           1392 	ld	hl,#0x1E04
   035C E5                 1393 	push	hl
                           1394 ;	genCall
   035D CD 00 00           1395 	call	_set_sprite_tile
   0360 E8 02              1396 	lda	sp,2(sp)
                           1397 ;	main.c 341
                           1398 ;	genIpush
                           1399 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0362 21 05 1E           1400 	ld	hl,#0x1E05
   0365 E5                 1401 	push	hl
                           1402 ;	genCall
   0366 CD 00 00           1403 	call	_set_sprite_tile
   0369 E8 02              1404 	lda	sp,2(sp)
                           1405 ;	main.c 343
                           1406 ;	genIpush
                           1407 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   036B 21 4C 05           1408 	ld	hl,#_shield
   036E E5                 1409 	push	hl
                           1410 ;	genCall
   036F CD 26 01           1411 	call	_moveshield
   0372 E8 02              1412 	lda	sp,2(sp)
                           1413 ;	genGoto
   0374 C3 D8 03           1414 	jp	00112$
                           1415 ;	genLabel
   0377                    1416 00104$:
                           1417 ;	main.c 345
                           1418 ;	genCmpEq
                           1419 ;	AOP_STK for 
                           1420 ; genCmpEq: left 1, right 1, result 0
   0377 F8 02              1421 	lda	hl,2(sp)
   0379 7E                 1422 	ld	a,(hl)
   037A FE 03              1423 	cp	a,#0x03
   037C C2 D8 03           1424 	jp	nz,00112$
   037F 18 03              1425 	jr	00125$
   0381                    1426 00124$:
   0381 C3 D8 03           1427 	jp	00112$
   0384                    1428 00125$:
                           1429 ;	main.c 346
                           1430 ;	genIpush
                           1431 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0384 21 00 0D           1432 	ld	hl,#0x0D00
   0387 E5                 1433 	push	hl
                           1434 ;	genCall
   0388 CD 00 00           1435 	call	_set_sprite_tile
   038B E8 02              1436 	lda	sp,2(sp)
                           1437 ;	main.c 347
                           1438 ;	genIpush
                           1439 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   038D 21 01 0F           1440 	ld	hl,#0x0F01
   0390 E5                 1441 	push	hl
                           1442 ;	genCall
   0391 CD 00 00           1443 	call	_set_sprite_tile
   0394 E8 02              1444 	lda	sp,2(sp)
                           1445 ;	main.c 348
                           1446 ;	genIpush
                           1447 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0396 21 02 0C           1448 	ld	hl,#0x0C02
   0399 E5                 1449 	push	hl
                           1450 ;	genCall
   039A CD 00 00           1451 	call	_set_sprite_tile
   039D E8 02              1452 	lda	sp,2(sp)
                           1453 ;	main.c 349
                           1454 ;	genIpush
                           1455 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   039F 21 03 0E           1456 	ld	hl,#0x0E03
   03A2 E5                 1457 	push	hl
                           1458 ;	genCall
   03A3 CD 00 00           1459 	call	_set_sprite_tile
   03A6 E8 02              1460 	lda	sp,2(sp)
                           1461 ;	main.c 351
                           1462 ;	genPlus
                           1463 ;	genPlusIncr
   03A8 21 4E 05           1464 	ld	hl,#_shield + 2
                           1465 ;	genAssign (pointer)
   03AB 36 44              1466 	ld	(hl),#0x44
                           1467 ;	main.c 352
                           1468 ;	genPlus
                           1469 ;	genPlusIncr
   03AD 23                 1470 	inc	hl
                           1471 ;	genAssign (pointer)
   03AE 36 44              1472 	ld	(hl),#0x44
                           1473 ;	main.c 353
                           1474 ;	genPlus
                           1475 ;	genPlusIncr
   03B0 23                 1476 	inc	hl
                           1477 ;	genAssign (pointer)
   03B1 36 50              1478 	ld	(hl),#0x50
                           1479 ;	main.c 354
                           1480 ;	genPlus
                           1481 ;	genPlusIncr
   03B3 23                 1482 	inc	hl
                           1483 ;	genAssign (pointer)
   03B4 36 58              1484 	ld	(hl),#0x58
                           1485 ;	main.c 356
                           1486 ;	genPlus
                           1487 ;	genPlusIncr
   03B6 23                 1488 	inc	hl
   03B7 23                 1489 	inc	hl
                           1490 ;	genAssign (pointer)
   03B8 36 10              1491 	ld	(hl),#0x10
                           1492 ;	main.c 357
                           1493 ;	genPlus
                           1494 ;	genPlusIncr
   03BA 2B                 1495 	dec	hl
                           1496 ;	genAssign (pointer)
   03BB 36 03              1497 	ld	(hl),#0x03
                           1498 ;	main.c 359
                           1499 ;	genIpush
                           1500 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03BD 21 04 1D           1501 	ld	hl,#0x1D04
   03C0 E5                 1502 	push	hl
                           1503 ;	genCall
   03C1 CD 00 00           1504 	call	_set_sprite_tile
   03C4 E8 02              1505 	lda	sp,2(sp)
                           1506 ;	main.c 360
                           1507 ;	genIpush
                           1508 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03C6 21 05 1D           1509 	ld	hl,#0x1D05
   03C9 E5                 1510 	push	hl
                           1511 ;	genCall
   03CA CD 00 00           1512 	call	_set_sprite_tile
   03CD E8 02              1513 	lda	sp,2(sp)
                           1514 ;	main.c 362
                           1515 ;	genIpush
                           1516 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   03CF 21 4C 05           1517 	ld	hl,#_shield
   03D2 E5                 1518 	push	hl
                           1519 ;	genCall
   03D3 CD 26 01           1520 	call	_moveshield
   03D6 E8 02              1521 	lda	sp,2(sp)
                           1522 ;	genLabel
   03D8                    1523 00112$:
                           1524 ;	genEndFunction
                           1525 	
   03D8 C9                 1526 	ret
   03D9                    1527 ___rotatesprite_end:
                           1528 ;	main.c 366
                           1529 ;	genLabel
                           1530 ;	genFunction
                           1531 ;	---------------------------------
                           1532 ; Function rotatearrow
                           1533 ; ---------------------------------
   03D9                    1534 ___rotatearrow_start:
   03D9                    1535 _rotatearrow:
   03D9 E8 FD              1536 	lda	sp,-3(sp)
                           1537 ;	main.c 367
                           1538 ;	genCmpEq
                           1539 ;	AOP_STK for 
                           1540 ; genCmpEq: left 1, right 1, result 0
   03DB F8 07              1541 	lda	hl,7(sp)
   03DD 7E                 1542 	ld	a,(hl)
   03DE B7                 1543 	or	a,a
   03DF C2 4A 04           1544 	jp	nz,00110$
   03E2 18 03              1545 	jr	00119$
   03E4                    1546 00118$:
   03E4 C3 4A 04           1547 	jp	00110$
   03E7                    1548 00119$:
                           1549 ;	main.c 368
                           1550 ;	genAssign
                           1551 ;	AOP_STK for 
   03E7 F8 05              1552 	lda	hl,5(sp)
   03E9 4E                 1553 	ld	c,(hl)
   03EA 23                 1554 	inc	hl
   03EB 46                 1555 	ld	b,(hl)
                           1556 ;	genPointerGet
                           1557 ;	AOP_STK for _rotatearrow_sloc0_1_0
   03EC 0A                 1558 	ld	a,(bc)
   03ED F8 02              1559 	lda	hl,2(sp)
   03EF 77                 1560 	ld	(hl),a
                           1561 ;	genIpush
                           1562 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03F0 C5                 1563 	push	bc
   03F1 3E 13              1564 	ld	a,#0x13
   03F3 F5                 1565 	push	af
   03F4 33                 1566 	inc	sp
                           1567 ;	genIpush
                           1568 ;	AOP_STK for _rotatearrow_sloc0_1_0
   03F5 7E                 1569 	ld	a,(hl)
   03F6 F5                 1570 	push	af
   03F7 33                 1571 	inc	sp
                           1572 ;	genCall
   03F8 CD 00 00           1573 	call	_set_sprite_tile
   03FB E8 02              1574 	lda	sp,2(sp)
   03FD C1                 1575 	pop	bc
                           1576 ;	main.c 369
                           1577 ;	genPlus
                           1578 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1579 ;	genPlusIncr
                           1580 ;	Can't optimise plus by inc, falling back to the normal way
   03FE 21 01 00           1581 	ld	hl,#0x0001
   0401 09                 1582 	add	hl,bc
   0402 7D                 1583 	ld	a,l
   0403 54                 1584 	ld	d,h
   0404 F8 00              1585 	lda	hl,0(sp)
                           1586 ;	genPointerGet
                           1587 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1588 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0406 22                 1589 	ld	(hl+),a
   0407 72                 1590 	ld	(hl),d
   0408 5F                 1591 	ld	e,a
   0409 1A                 1592 	ld	a,(de)
   040A 23                 1593 	inc	hl
   040B 77                 1594 	ld	(hl),a
                           1595 ;	genIpush
                           1596 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   040C C5                 1597 	push	bc
   040D 3E 12              1598 	ld	a,#0x12
   040F F5                 1599 	push	af
   0410 33                 1600 	inc	sp
                           1601 ;	genIpush
                           1602 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0411 7E                 1603 	ld	a,(hl)
   0412 F5                 1604 	push	af
   0413 33                 1605 	inc	sp
                           1606 ;	genCall
   0414 CD 00 00           1607 	call	_set_sprite_tile
   0417 E8 02              1608 	lda	sp,2(sp)
   0419 C1                 1609 	pop	bc
                           1610 ;	main.c 370
                           1611 ;	genPlus
                           1612 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1613 ;	genPlusIncr
                           1614 ;	Can't optimise plus by inc, falling back to the normal way
   041A 21 02 00           1615 	ld	hl,#0x0002
   041D 09                 1616 	add	hl,bc
   041E 7D                 1617 	ld	a,l
   041F 54                 1618 	ld	d,h
   0420 F8 00              1619 	lda	hl,0(sp)
                           1620 ;	genPointerGet
                           1621 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1622 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0422 22                 1623 	ld	(hl+),a
   0423 72                 1624 	ld	(hl),d
   0424 5F                 1625 	ld	e,a
   0425 1A                 1626 	ld	a,(de)
   0426 23                 1627 	inc	hl
   0427 77                 1628 	ld	(hl),a
                           1629 ;	genIpush
                           1630 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0428 C5                 1631 	push	bc
   0429 3E 11              1632 	ld	a,#0x11
   042B F5                 1633 	push	af
   042C 33                 1634 	inc	sp
                           1635 ;	genIpush
                           1636 ;	AOP_STK for _rotatearrow_sloc0_1_0
   042D 7E                 1637 	ld	a,(hl)
   042E F5                 1638 	push	af
   042F 33                 1639 	inc	sp
                           1640 ;	genCall
   0430 CD 00 00           1641 	call	_set_sprite_tile
   0433 E8 02              1642 	lda	sp,2(sp)
   0435 C1                 1643 	pop	bc
                           1644 ;	main.c 371
                           1645 ;	genPlus
                           1646 ;	genPlusIncr
   0436 03                 1647 	inc	bc
   0437 03                 1648 	inc	bc
   0438 03                 1649 	inc	bc
                           1650 ;	genPointerGet
   0439 0A                 1651 	ld	a,(bc)
   043A 4F                 1652 	ld	c,a
                           1653 ;	genIpush
                           1654 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   043B 3E 10              1655 	ld	a,#0x10
   043D F5                 1656 	push	af
   043E 33                 1657 	inc	sp
                           1658 ;	genIpush
   043F 79                 1659 	ld	a,c
   0440 F5                 1660 	push	af
   0441 33                 1661 	inc	sp
                           1662 ;	genCall
   0442 CD 00 00           1663 	call	_set_sprite_tile
   0445 E8 02              1664 	lda	sp,2(sp)
                           1665 ;	genGoto
   0447 C3 97 05           1666 	jp	00112$
                           1667 ;	genLabel
   044A                    1668 00110$:
                           1669 ;	main.c 373
                           1670 ;	genCmpEq
                           1671 ;	AOP_STK for 
                           1672 ; genCmpEq: left 1, right 1, result 0
   044A F8 07              1673 	lda	hl,7(sp)
   044C 7E                 1674 	ld	a,(hl)
   044D FE 01              1675 	cp	a,#0x01
   044F C2 BA 04           1676 	jp	nz,00107$
   0452 18 03              1677 	jr	00121$
   0454                    1678 00120$:
   0454 C3 BA 04           1679 	jp	00107$
   0457                    1680 00121$:
                           1681 ;	main.c 374
                           1682 ;	genAssign
                           1683 ;	AOP_STK for 
   0457 F8 05              1684 	lda	hl,5(sp)
   0459 4E                 1685 	ld	c,(hl)
   045A 23                 1686 	inc	hl
   045B 46                 1687 	ld	b,(hl)
                           1688 ;	genPointerGet
                           1689 ;	AOP_STK for _rotatearrow_sloc1_1_0
   045C 0A                 1690 	ld	a,(bc)
   045D F8 00              1691 	lda	hl,0(sp)
   045F 77                 1692 	ld	(hl),a
                           1693 ;	genIpush
                           1694 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0460 C5                 1695 	push	bc
   0461 3E 15              1696 	ld	a,#0x15
   0463 F5                 1697 	push	af
   0464 33                 1698 	inc	sp
                           1699 ;	genIpush
                           1700 ;	AOP_STK for _rotatearrow_sloc1_1_0
   0465 7E                 1701 	ld	a,(hl)
   0466 F5                 1702 	push	af
   0467 33                 1703 	inc	sp
                           1704 ;	genCall
   0468 CD 00 00           1705 	call	_set_sprite_tile
   046B E8 02              1706 	lda	sp,2(sp)
   046D C1                 1707 	pop	bc
                           1708 ;	main.c 375
                           1709 ;	genPlus
                           1710 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1711 ;	genPlusIncr
                           1712 ;	Can't optimise plus by inc, falling back to the normal way
   046E 21 01 00           1713 	ld	hl,#0x0001
   0471 09                 1714 	add	hl,bc
   0472 7D                 1715 	ld	a,l
   0473 54                 1716 	ld	d,h
   0474 F8 00              1717 	lda	hl,0(sp)
                           1718 ;	genPointerGet
                           1719 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1720 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0476 22                 1721 	ld	(hl+),a
   0477 72                 1722 	ld	(hl),d
   0478 5F                 1723 	ld	e,a
   0479 1A                 1724 	ld	a,(de)
   047A 23                 1725 	inc	hl
   047B 77                 1726 	ld	(hl),a
                           1727 ;	genIpush
                           1728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   047C C5                 1729 	push	bc
   047D 3E 17              1730 	ld	a,#0x17
   047F F5                 1731 	push	af
   0480 33                 1732 	inc	sp
                           1733 ;	genIpush
                           1734 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0481 7E                 1735 	ld	a,(hl)
   0482 F5                 1736 	push	af
   0483 33                 1737 	inc	sp
                           1738 ;	genCall
   0484 CD 00 00           1739 	call	_set_sprite_tile
   0487 E8 02              1740 	lda	sp,2(sp)
   0489 C1                 1741 	pop	bc
                           1742 ;	main.c 376
                           1743 ;	genPlus
                           1744 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1745 ;	genPlusIncr
                           1746 ;	Can't optimise plus by inc, falling back to the normal way
   048A 21 02 00           1747 	ld	hl,#0x0002
   048D 09                 1748 	add	hl,bc
   048E 7D                 1749 	ld	a,l
   048F 54                 1750 	ld	d,h
   0490 F8 00              1751 	lda	hl,0(sp)
                           1752 ;	genPointerGet
                           1753 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1754 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0492 22                 1755 	ld	(hl+),a
   0493 72                 1756 	ld	(hl),d
   0494 5F                 1757 	ld	e,a
   0495 1A                 1758 	ld	a,(de)
   0496 23                 1759 	inc	hl
   0497 77                 1760 	ld	(hl),a
                           1761 ;	genIpush
                           1762 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0498 C5                 1763 	push	bc
   0499 3E 14              1764 	ld	a,#0x14
   049B F5                 1765 	push	af
   049C 33                 1766 	inc	sp
                           1767 ;	genIpush
                           1768 ;	AOP_STK for _rotatearrow_sloc0_1_0
   049D 7E                 1769 	ld	a,(hl)
   049E F5                 1770 	push	af
   049F 33                 1771 	inc	sp
                           1772 ;	genCall
   04A0 CD 00 00           1773 	call	_set_sprite_tile
   04A3 E8 02              1774 	lda	sp,2(sp)
   04A5 C1                 1775 	pop	bc
                           1776 ;	main.c 377
                           1777 ;	genPlus
                           1778 ;	genPlusIncr
   04A6 03                 1779 	inc	bc
   04A7 03                 1780 	inc	bc
   04A8 03                 1781 	inc	bc
                           1782 ;	genPointerGet
   04A9 0A                 1783 	ld	a,(bc)
   04AA 4F                 1784 	ld	c,a
                           1785 ;	genIpush
                           1786 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   04AB 3E 16              1787 	ld	a,#0x16
   04AD F5                 1788 	push	af
   04AE 33                 1789 	inc	sp
                           1790 ;	genIpush
   04AF 79                 1791 	ld	a,c
   04B0 F5                 1792 	push	af
   04B1 33                 1793 	inc	sp
                           1794 ;	genCall
   04B2 CD 00 00           1795 	call	_set_sprite_tile
   04B5 E8 02              1796 	lda	sp,2(sp)
                           1797 ;	genGoto
   04B7 C3 97 05           1798 	jp	00112$
                           1799 ;	genLabel
   04BA                    1800 00107$:
                           1801 ;	main.c 379
                           1802 ;	genCmpEq
                           1803 ;	AOP_STK for 
                           1804 ; genCmpEq: left 1, right 1, result 0
   04BA F8 07              1805 	lda	hl,7(sp)
   04BC 7E                 1806 	ld	a,(hl)
   04BD FE 02              1807 	cp	a,#0x02
   04BF C2 2A 05           1808 	jp	nz,00104$
   04C2 18 03              1809 	jr	00123$
   04C4                    1810 00122$:
   04C4 C3 2A 05           1811 	jp	00104$
   04C7                    1812 00123$:
                           1813 ;	main.c 380
                           1814 ;	genAssign
                           1815 ;	AOP_STK for 
   04C7 F8 05              1816 	lda	hl,5(sp)
   04C9 4E                 1817 	ld	c,(hl)
   04CA 23                 1818 	inc	hl
   04CB 46                 1819 	ld	b,(hl)
                           1820 ;	genPointerGet
                           1821 ;	AOP_STK for _rotatearrow_sloc1_1_0
   04CC 0A                 1822 	ld	a,(bc)
   04CD F8 00              1823 	lda	hl,0(sp)
   04CF 77                 1824 	ld	(hl),a
                           1825 ;	genIpush
                           1826 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   04D0 C5                 1827 	push	bc
   04D1 3E 18              1828 	ld	a,#0x18
   04D3 F5                 1829 	push	af
   04D4 33                 1830 	inc	sp
                           1831 ;	genIpush
                           1832 ;	AOP_STK for _rotatearrow_sloc1_1_0
   04D5 7E                 1833 	ld	a,(hl)
   04D6 F5                 1834 	push	af
   04D7 33                 1835 	inc	sp
                           1836 ;	genCall
   04D8 CD 00 00           1837 	call	_set_sprite_tile
   04DB E8 02              1838 	lda	sp,2(sp)
   04DD C1                 1839 	pop	bc
                           1840 ;	main.c 381
                           1841 ;	genPlus
                           1842 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1843 ;	genPlusIncr
                           1844 ;	Can't optimise plus by inc, falling back to the normal way
   04DE 21 01 00           1845 	ld	hl,#0x0001
   04E1 09                 1846 	add	hl,bc
   04E2 7D                 1847 	ld	a,l
   04E3 54                 1848 	ld	d,h
   04E4 F8 00              1849 	lda	hl,0(sp)
                           1850 ;	genPointerGet
                           1851 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1852 ;	AOP_STK for _rotatearrow_sloc0_1_0
   04E6 22                 1853 	ld	(hl+),a
   04E7 72                 1854 	ld	(hl),d
   04E8 5F                 1855 	ld	e,a
   04E9 1A                 1856 	ld	a,(de)
   04EA 23                 1857 	inc	hl
   04EB 77                 1858 	ld	(hl),a
                           1859 ;	genIpush
                           1860 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   04EC C5                 1861 	push	bc
   04ED 3E 19              1862 	ld	a,#0x19
   04EF F5                 1863 	push	af
   04F0 33                 1864 	inc	sp
                           1865 ;	genIpush
                           1866 ;	AOP_STK for _rotatearrow_sloc0_1_0
   04F1 7E                 1867 	ld	a,(hl)
   04F2 F5                 1868 	push	af
   04F3 33                 1869 	inc	sp
                           1870 ;	genCall
   04F4 CD 00 00           1871 	call	_set_sprite_tile
   04F7 E8 02              1872 	lda	sp,2(sp)
   04F9 C1                 1873 	pop	bc
                           1874 ;	main.c 382
                           1875 ;	genPlus
                           1876 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1877 ;	genPlusIncr
                           1878 ;	Can't optimise plus by inc, falling back to the normal way
   04FA 21 02 00           1879 	ld	hl,#0x0002
   04FD 09                 1880 	add	hl,bc
   04FE 7D                 1881 	ld	a,l
   04FF 54                 1882 	ld	d,h
   0500 F8 00              1883 	lda	hl,0(sp)
                           1884 ;	genPointerGet
                           1885 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1886 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0502 22                 1887 	ld	(hl+),a
   0503 72                 1888 	ld	(hl),d
   0504 5F                 1889 	ld	e,a
   0505 1A                 1890 	ld	a,(de)
   0506 23                 1891 	inc	hl
   0507 77                 1892 	ld	(hl),a
                           1893 ;	genIpush
                           1894 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0508 C5                 1895 	push	bc
   0509 3E 13              1896 	ld	a,#0x13
   050B F5                 1897 	push	af
   050C 33                 1898 	inc	sp
                           1899 ;	genIpush
                           1900 ;	AOP_STK for _rotatearrow_sloc0_1_0
   050D 7E                 1901 	ld	a,(hl)
   050E F5                 1902 	push	af
   050F 33                 1903 	inc	sp
                           1904 ;	genCall
   0510 CD 00 00           1905 	call	_set_sprite_tile
   0513 E8 02              1906 	lda	sp,2(sp)
   0515 C1                 1907 	pop	bc
                           1908 ;	main.c 383
                           1909 ;	genPlus
                           1910 ;	genPlusIncr
   0516 03                 1911 	inc	bc
   0517 03                 1912 	inc	bc
   0518 03                 1913 	inc	bc
                           1914 ;	genPointerGet
   0519 0A                 1915 	ld	a,(bc)
   051A 4F                 1916 	ld	c,a
                           1917 ;	genIpush
                           1918 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   051B 3E 12              1919 	ld	a,#0x12
   051D F5                 1920 	push	af
   051E 33                 1921 	inc	sp
                           1922 ;	genIpush
   051F 79                 1923 	ld	a,c
   0520 F5                 1924 	push	af
   0521 33                 1925 	inc	sp
                           1926 ;	genCall
   0522 CD 00 00           1927 	call	_set_sprite_tile
   0525 E8 02              1928 	lda	sp,2(sp)
                           1929 ;	genGoto
   0527 C3 97 05           1930 	jp	00112$
                           1931 ;	genLabel
   052A                    1932 00104$:
                           1933 ;	main.c 385
                           1934 ;	genCmpEq
                           1935 ;	AOP_STK for 
                           1936 ; genCmpEq: left 1, right 1, result 0
   052A F8 07              1937 	lda	hl,7(sp)
   052C 7E                 1938 	ld	a,(hl)
   052D FE 03              1939 	cp	a,#0x03
   052F C2 97 05           1940 	jp	nz,00112$
   0532 18 03              1941 	jr	00125$
   0534                    1942 00124$:
   0534 C3 97 05           1943 	jp	00112$
   0537                    1944 00125$:
                           1945 ;	main.c 386
                           1946 ;	genAssign
                           1947 ;	AOP_STK for 
   0537 F8 05              1948 	lda	hl,5(sp)
   0539 4E                 1949 	ld	c,(hl)
   053A 23                 1950 	inc	hl
   053B 46                 1951 	ld	b,(hl)
                           1952 ;	genPointerGet
                           1953 ;	AOP_STK for _rotatearrow_sloc1_1_0
   053C 0A                 1954 	ld	a,(bc)
   053D F8 00              1955 	lda	hl,0(sp)
   053F 77                 1956 	ld	(hl),a
                           1957 ;	genIpush
                           1958 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0540 C5                 1959 	push	bc
   0541 3E 17              1960 	ld	a,#0x17
   0543 F5                 1961 	push	af
   0544 33                 1962 	inc	sp
                           1963 ;	genIpush
                           1964 ;	AOP_STK for _rotatearrow_sloc1_1_0
   0545 7E                 1965 	ld	a,(hl)
   0546 F5                 1966 	push	af
   0547 33                 1967 	inc	sp
                           1968 ;	genCall
   0548 CD 00 00           1969 	call	_set_sprite_tile
   054B E8 02              1970 	lda	sp,2(sp)
   054D C1                 1971 	pop	bc
                           1972 ;	main.c 387
                           1973 ;	genPlus
                           1974 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1975 ;	genPlusIncr
                           1976 ;	Can't optimise plus by inc, falling back to the normal way
   054E 21 01 00           1977 	ld	hl,#0x0001
   0551 09                 1978 	add	hl,bc
   0552 7D                 1979 	ld	a,l
   0553 54                 1980 	ld	d,h
   0554 F8 00              1981 	lda	hl,0(sp)
                           1982 ;	genPointerGet
                           1983 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           1984 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0556 22                 1985 	ld	(hl+),a
   0557 72                 1986 	ld	(hl),d
   0558 5F                 1987 	ld	e,a
   0559 1A                 1988 	ld	a,(de)
   055A 23                 1989 	inc	hl
   055B 77                 1990 	ld	(hl),a
                           1991 ;	genIpush
                           1992 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   055C C5                 1993 	push	bc
   055D 3E 1A              1994 	ld	a,#0x1A
   055F F5                 1995 	push	af
   0560 33                 1996 	inc	sp
                           1997 ;	genIpush
                           1998 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0561 7E                 1999 	ld	a,(hl)
   0562 F5                 2000 	push	af
   0563 33                 2001 	inc	sp
                           2002 ;	genCall
   0564 CD 00 00           2003 	call	_set_sprite_tile
   0567 E8 02              2004 	lda	sp,2(sp)
   0569 C1                 2005 	pop	bc
                           2006 ;	main.c 388
                           2007 ;	genPlus
                           2008 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           2009 ;	genPlusIncr
                           2010 ;	Can't optimise plus by inc, falling back to the normal way
   056A 21 02 00           2011 	ld	hl,#0x0002
   056D 09                 2012 	add	hl,bc
   056E 7D                 2013 	ld	a,l
   056F 54                 2014 	ld	d,h
   0570 F8 00              2015 	lda	hl,0(sp)
                           2016 ;	genPointerGet
                           2017 ;	AOP_STK for _rotatearrow_sloc1_1_0
                           2018 ;	AOP_STK for _rotatearrow_sloc0_1_0
   0572 22                 2019 	ld	(hl+),a
   0573 72                 2020 	ld	(hl),d
   0574 5F                 2021 	ld	e,a
   0575 1A                 2022 	ld	a,(de)
   0576 23                 2023 	inc	hl
   0577 77                 2024 	ld	(hl),a
                           2025 ;	genIpush
                           2026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0578 C5                 2027 	push	bc
   0579 3E 16              2028 	ld	a,#0x16
   057B F5                 2029 	push	af
   057C 33                 2030 	inc	sp
                           2031 ;	genIpush
                           2032 ;	AOP_STK for _rotatearrow_sloc0_1_0
   057D 7E                 2033 	ld	a,(hl)
   057E F5                 2034 	push	af
   057F 33                 2035 	inc	sp
                           2036 ;	genCall
   0580 CD 00 00           2037 	call	_set_sprite_tile
   0583 E8 02              2038 	lda	sp,2(sp)
   0585 C1                 2039 	pop	bc
                           2040 ;	main.c 389
                           2041 ;	genPlus
                           2042 ;	genPlusIncr
   0586 03                 2043 	inc	bc
   0587 03                 2044 	inc	bc
   0588 03                 2045 	inc	bc
                           2046 ;	genPointerGet
   0589 0A                 2047 	ld	a,(bc)
   058A 4F                 2048 	ld	c,a
                           2049 ;	genIpush
                           2050 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   058B 3E 1B              2051 	ld	a,#0x1B
   058D F5                 2052 	push	af
   058E 33                 2053 	inc	sp
                           2054 ;	genIpush
   058F 79                 2055 	ld	a,c
   0590 F5                 2056 	push	af
   0591 33                 2057 	inc	sp
                           2058 ;	genCall
   0592 CD 00 00           2059 	call	_set_sprite_tile
   0595 E8 02              2060 	lda	sp,2(sp)
                           2061 ;	genLabel
   0597                    2062 00112$:
                           2063 ;	genEndFunction
   0597 E8 03              2064 	lda	sp,3(sp)
   0599 C9                 2065 	ret
   059A                    2066 ___rotatearrow_end:
                           2067 ;	main.c 393
                           2068 ;	genLabel
                           2069 ;	genFunction
                           2070 ;	---------------------------------
                           2071 ; Function setuparrow
                           2072 ; ---------------------------------
   059A                    2073 ___setuparrow_start:
   059A                    2074 _setuparrow:
   059A E8 FC              2075 	lda	sp,-4(sp)
                           2076 ;	main.c 394
                           2077 ;	genPlus
                           2078 ;	genPlusIncr
   059C 01 48 05           2079 	ld	bc,#_arrow + 8
                           2080 ;	genCall
                           2081 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   059F C5                 2082 	push	bc
   05A0 CD 00 00           2083 	call	_rand
                           2084 ;	AOP_STK for _setuparrow_sloc0_1_0
   05A3 F8 05              2085 	lda	hl,5(sp)
   05A5 73                 2086 	ld	(hl),e
   05A6 C1                 2087 	pop	bc
                           2088 ;	genIpush
                           2089 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   05A7 C5                 2090 	push	bc
   05A8 3E 04              2091 	ld	a,#0x04
   05AA F5                 2092 	push	af
   05AB 33                 2093 	inc	sp
                           2094 ;	genIpush
                           2095 ;	AOP_STK for _setuparrow_sloc0_1_0
   05AC F8 06              2096 	lda	hl,6(sp)
   05AE 7E                 2097 	ld	a,(hl)
   05AF F5                 2098 	push	af
   05B0 33                 2099 	inc	sp
                           2100 ;	genCall
   05B1 CD 00 00           2101 	call	__moduchar_rrx_s
                           2102 ;	AOP_STK for _setuparrow_sloc0_1_0
   05B4 F8 07              2103 	lda	hl,7(sp)
   05B6 73                 2104 	ld	(hl),e
   05B7 E8 02              2105 	lda	sp,2(sp)
   05B9 C1                 2106 	pop	bc
                           2107 ;	genAssign (pointer)
                           2108 ;	AOP_STK for _setuparrow_sloc0_1_0
   05BA F8 03              2109 	lda	hl,3(sp)
   05BC 7E                 2110 	ld	a,(hl)
   05BD 02                 2111 	ld	(bc),a
                           2112 ;	main.c 395
                           2113 ;	genPointerGet
                           2114 ;	AOP_STK for _setuparrow_sloc1_1_0
   05BE 0A                 2115 	ld	a,(bc)
   05BF 2B                 2116 	dec	hl
                           2117 ;	genCmpEq
                           2118 ;	AOP_STK for _setuparrow_sloc0_1_0
                           2119 ; genCmpEq: left 1, right 1, result 0
   05C0 22                 2120 	ld	(hl+),a
   05C1 7E                 2121 	ld	a,(hl)
   05C2 B7                 2122 	or	a,a
   05C3 C2 D6 05           2123 	jp	nz,00110$
   05C6 18 03              2124 	jr	00119$
   05C8                    2125 00118$:
   05C8 C3 D6 05           2126 	jp	00110$
   05CB                    2127 00119$:
                           2128 ;	main.c 396
                           2129 ;	genPlus
                           2130 ;	genPlusIncr
   05CB 21 44 05           2131 	ld	hl,#_arrow + 4
                           2132 ;	genAssign (pointer)
   05CE 36 50              2133 	ld	(hl),#0x50
                           2134 ;	main.c 397
                           2135 ;	genPlus
                           2136 ;	genPlusIncr
   05D0 23                 2137 	inc	hl
                           2138 ;	genAssign (pointer)
   05D1 36 00              2139 	ld	(hl),#0x00
                           2140 ;	genGoto
   05D3 C3 1B 06           2141 	jp	00111$
                           2142 ;	genLabel
   05D6                    2143 00110$:
                           2144 ;	main.c 399
                           2145 ;	genCmpEq
                           2146 ;	AOP_STK for _setuparrow_sloc1_1_0
                           2147 ; genCmpEq: left 1, right 1, result 0
   05D6 F8 02              2148 	lda	hl,2(sp)
   05D8 7E                 2149 	ld	a,(hl)
   05D9 FE 01              2150 	cp	a,#0x01
   05DB C2 EE 05           2151 	jp	nz,00107$
   05DE 18 03              2152 	jr	00121$
   05E0                    2153 00120$:
   05E0 C3 EE 05           2154 	jp	00107$
   05E3                    2155 00121$:
                           2156 ;	main.c 400
                           2157 ;	genPlus
                           2158 ;	genPlusIncr
   05E3 21 44 05           2159 	ld	hl,#_arrow + 4
                           2160 ;	genAssign (pointer)
   05E6 36 B0              2161 	ld	(hl),#0xB0
                           2162 ;	main.c 401
                           2163 ;	genPlus
                           2164 ;	genPlusIncr
   05E8 23                 2165 	inc	hl
                           2166 ;	genAssign (pointer)
   05E9 36 50              2167 	ld	(hl),#0x50
                           2168 ;	genGoto
   05EB C3 1B 06           2169 	jp	00111$
                           2170 ;	genLabel
   05EE                    2171 00107$:
                           2172 ;	main.c 403
                           2173 ;	genCmpEq
                           2174 ;	AOP_STK for _setuparrow_sloc1_1_0
                           2175 ; genCmpEq: left 1, right 1, result 0
   05EE F8 02              2176 	lda	hl,2(sp)
   05F0 7E                 2177 	ld	a,(hl)
   05F1 FE 02              2178 	cp	a,#0x02
   05F3 C2 06 06           2179 	jp	nz,00104$
   05F6 18 03              2180 	jr	00123$
   05F8                    2181 00122$:
   05F8 C3 06 06           2182 	jp	00104$
   05FB                    2183 00123$:
                           2184 ;	main.c 404
                           2185 ;	genPlus
                           2186 ;	genPlusIncr
   05FB 21 44 05           2187 	ld	hl,#_arrow + 4
                           2188 ;	genAssign (pointer)
   05FE 36 50              2189 	ld	(hl),#0x50
                           2190 ;	main.c 405
                           2191 ;	genPlus
                           2192 ;	genPlusIncr
   0600 23                 2193 	inc	hl
                           2194 ;	genAssign (pointer)
   0601 36 90              2195 	ld	(hl),#0x90
                           2196 ;	genGoto
   0603 C3 1B 06           2197 	jp	00111$
                           2198 ;	genLabel
   0606                    2199 00104$:
                           2200 ;	main.c 407
                           2201 ;	genCmpEq
                           2202 ;	AOP_STK for _setuparrow_sloc1_1_0
                           2203 ; genCmpEq: left 1, right 1, result 0
   0606 F8 02              2204 	lda	hl,2(sp)
   0608 7E                 2205 	ld	a,(hl)
   0609 FE 03              2206 	cp	a,#0x03
   060B C2 1B 06           2207 	jp	nz,00111$
   060E 18 03              2208 	jr	00125$
   0610                    2209 00124$:
   0610 C3 1B 06           2210 	jp	00111$
   0613                    2211 00125$:
                           2212 ;	main.c 408
                           2213 ;	genPlus
                           2214 ;	genPlusIncr
   0613 21 44 05           2215 	ld	hl,#_arrow + 4
                           2216 ;	genAssign (pointer)
   0616 36 F8              2217 	ld	(hl),#0xF8
                           2218 ;	main.c 409
                           2219 ;	genPlus
                           2220 ;	genPlusIncr
   0618 23                 2221 	inc	hl
                           2222 ;	genAssign (pointer)
   0619 36 50              2223 	ld	(hl),#0x50
                           2224 ;	genLabel
   061B                    2225 00111$:
                           2226 ;	main.c 411
                           2227 ;	genPlus
                           2228 ;	genPlusIncr
   061B 21 46 05           2229 	ld	hl,#_arrow + 6
                           2230 ;	genAssign (pointer)
   061E 36 10              2231 	ld	(hl),#0x10
                           2232 ;	main.c 412
                           2233 ;	genPlus
                           2234 ;	genPlusIncr
   0620 23                 2235 	inc	hl
                           2236 ;	genAssign (pointer)
   0621 36 10              2237 	ld	(hl),#0x10
                           2238 ;	main.c 415
                           2239 ;	genIpush
                           2240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0623 C5                 2241 	push	bc
   0624 21 06 13           2242 	ld	hl,#0x1306
   0627 E5                 2243 	push	hl
                           2244 ;	genCall
   0628 CD 00 00           2245 	call	_set_sprite_tile
   062B E8 02              2246 	lda	sp,2(sp)
   062D C1                 2247 	pop	bc
                           2248 ;	main.c 416
                           2249 ;	genAssign (pointer)
   062E 11 40 05           2250 	ld	de,#_arrow
   0631 3E 06              2251 	ld	a,#0x06
   0633 12                 2252 	ld	(de),a
                           2253 ;	main.c 417
                           2254 ;	genIpush
                           2255 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0634 C5                 2256 	push	bc
   0635 21 07 12           2257 	ld	hl,#0x1207
   0638 E5                 2258 	push	hl
                           2259 ;	genCall
   0639 CD 00 00           2260 	call	_set_sprite_tile
   063C E8 02              2261 	lda	sp,2(sp)
   063E C1                 2262 	pop	bc
                           2263 ;	main.c 418
                           2264 ;	genPlus
                           2265 ;	genPlusIncr
   063F 21 41 05           2266 	ld	hl,#_arrow + 1
                           2267 ;	genAssign (pointer)
   0642 36 07              2268 	ld	(hl),#0x07
                           2269 ;	main.c 419
                           2270 ;	genIpush
                           2271 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0644 C5                 2272 	push	bc
   0645 21 08 11           2273 	ld	hl,#0x1108
   0648 E5                 2274 	push	hl
                           2275 ;	genCall
   0649 CD 00 00           2276 	call	_set_sprite_tile
   064C E8 02              2277 	lda	sp,2(sp)
   064E C1                 2278 	pop	bc
                           2279 ;	main.c 420
                           2280 ;	genPlus
                           2281 ;	genPlusIncr
   064F 21 42 05           2282 	ld	hl,#_arrow + 2
                           2283 ;	genAssign (pointer)
   0652 36 08              2284 	ld	(hl),#0x08
                           2285 ;	main.c 421
                           2286 ;	genIpush
                           2287 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0654 C5                 2288 	push	bc
   0655 21 09 10           2289 	ld	hl,#0x1009
   0658 E5                 2290 	push	hl
                           2291 ;	genCall
   0659 CD 00 00           2292 	call	_set_sprite_tile
   065C E8 02              2293 	lda	sp,2(sp)
   065E C1                 2294 	pop	bc
                           2295 ;	main.c 422
                           2296 ;	genPlus
                           2297 ;	genPlusIncr
   065F 21 43 05           2298 	ld	hl,#_arrow + 3
                           2299 ;	genAssign (pointer)
   0662 36 09              2300 	ld	(hl),#0x09
                           2301 ;	main.c 424
                           2302 ;	genPlus
                           2303 ;	AOP_STK for _setuparrow_sloc2_1_0
                           2304 ;	genPlusIncr
                           2305 ;	Can't optimise plus by inc, falling back to the normal way
   0664 11 40 05           2306 	ld	de,#_arrow
   0667 21 05 00           2307 	ld	hl,#0x0005
   066A 19                 2308 	add	hl,de
   066B 7D                 2309 	ld	a,l
   066C 54                 2310 	ld	d,h
   066D F8 00              2311 	lda	hl,0(sp)
                           2312 ;	genPointerGet
                           2313 ;	AOP_STK for _setuparrow_sloc2_1_0
                           2314 ;	AOP_STK for _setuparrow_sloc1_1_0
   066F 22                 2315 	ld	(hl+),a
   0670 72                 2316 	ld	(hl),d
   0671 5F                 2317 	ld	e,a
   0672 1A                 2318 	ld	a,(de)
   0673 23                 2319 	inc	hl
   0674 77                 2320 	ld	(hl),a
                           2321 ;	genPlus
                           2322 ;	AOP_STK for _setuparrow_sloc2_1_0
                           2323 ;	genPlusIncr
                           2324 ;	Can't optimise plus by inc, falling back to the normal way
   0675 11 40 05           2325 	ld	de,#_arrow
   0678 21 04 00           2326 	ld	hl,#0x0004
   067B 19                 2327 	add	hl,de
   067C 7D                 2328 	ld	a,l
   067D 54                 2329 	ld	d,h
   067E F8 00              2330 	lda	hl,0(sp)
                           2331 ;	genPointerGet
                           2332 ;	AOP_STK for _setuparrow_sloc2_1_0
                           2333 ;	AOP_STK for _setuparrow_sloc0_1_0
   0680 22                 2334 	ld	(hl+),a
   0681 72                 2335 	ld	(hl),d
   0682 5F                 2336 	ld	e,a
   0683 1A                 2337 	ld	a,(de)
   0684 23                 2338 	inc	hl
   0685 23                 2339 	inc	hl
   0686 77                 2340 	ld	(hl),a
                           2341 ;	genIpush
                           2342 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0687 C5                 2343 	push	bc
                           2344 ;	AOP_STK for _setuparrow_sloc1_1_0
   0688 2B                 2345 	dec	hl
   0689 7E                 2346 	ld	a,(hl)
   068A F5                 2347 	push	af
   068B 33                 2348 	inc	sp
                           2349 ;	genIpush
                           2350 ;	AOP_STK for _setuparrow_sloc0_1_0
   068C 23                 2351 	inc	hl
   068D 7E                 2352 	ld	a,(hl)
   068E F5                 2353 	push	af
   068F 33                 2354 	inc	sp
                           2355 ;	genIpush
   0690 21 40 05           2356 	ld	hl,#_arrow
   0693 E5                 2357 	push	hl
                           2358 ;	genCall
   0694 CD 93 00           2359 	call	_movearrowcharacter
   0697 E8 04              2360 	lda	sp,4(sp)
   0699 C1                 2361 	pop	bc
                           2362 ;	main.c 425
                           2363 ;	genPointerGet
   069A 0A                 2364 	ld	a,(bc)
                           2365 ;	genIpush
                           2366 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   069B 4F                 2367 	ld	c,a
   069C F5                 2368 	push	af
   069D 33                 2369 	inc	sp
                           2370 ;	genIpush
   069E 21 40 05           2371 	ld	hl,#_arrow
   06A1 E5                 2372 	push	hl
                           2373 ;	genCall
   06A2 CD D9 03           2374 	call	_rotatearrow
   06A5 E8 03              2375 	lda	sp,3(sp)
                           2376 ;	genLabel
   06A7                    2377 00112$:
                           2378 ;	genEndFunction
   06A7 E8 04              2379 	lda	sp,4(sp)
   06A9 C9                 2380 	ret
   06AA                    2381 ___setuparrow_end:
                           2382 ;	main.c 428
                           2383 ;	genLabel
                           2384 ;	genFunction
                           2385 ;	---------------------------------
                           2386 ; Function printscore
                           2387 ; ---------------------------------
   06AA                    2388 ___printscore_start:
   06AA                    2389 _printscore:
   06AA E8 FD              2390 	lda	sp,-3(sp)
                           2391 ;	main.c 429
                           2392 ;	genCmpLt
                           2393 ;	AOP_HL for _score
   06AC 21 4A 05           2394 	ld	hl,#_score
   06AF 7E                 2395 	ld	a,(hl)
   06B0 D6 0A              2396 	sub	a,#0x0A
   06B2 23                 2397 	inc	hl
   06B3 7E                 2398 	ld	a,(hl)
   06B4 DE 00              2399 	sbc	a,#0x00
   06B6 D2 DF 06           2400 	jp	nc,00105$
                           2401 ;	main.c 430
                           2402 ;	genPlus
                           2403 ;	AOP_HL for _score
                           2404 ;	genPlusIncr
                           2405 ;	Can't optimise plus by inc, falling back to the normal way
   06B9 2B                 2406 	dec	hl
   06BA 7E                 2407 	ld	a,(hl)
   06BB C6 20              2408 	add	a,#0x20
   06BD 4F                 2409 	ld	c,a
   06BE 23                 2410 	inc	hl
   06BF 7E                 2411 	ld	a,(hl)
   06C0 CE 00              2412 	adc	a,#0x00
   06C2 47                 2413 	ld	b,a
                           2414 ;	genCast
                           2415 ; Removed redundent load
                           2416 ;	genIpush
                           2417 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06C3 79                 2418 	ld	a,c
   06C4 F5                 2419 	push	af
   06C5 33                 2420 	inc	sp
                           2421 ;	genIpush
   06C6 3E 62              2422 	ld	a,#0x62
   06C8 F5                 2423 	push	af
   06C9 33                 2424 	inc	sp
                           2425 ;	genCall
   06CA CD 00 00           2426 	call	_set_sprite_tile
   06CD E8 02              2427 	lda	sp,2(sp)
                           2428 ;	main.c 431
                           2429 ;	genIpush
                           2430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06CF 21 A0 10           2431 	ld	hl,#0x10A0
   06D2 E5                 2432 	push	hl
                           2433 ;	genIpush
   06D3 3E 62              2434 	ld	a,#0x62
   06D5 F5                 2435 	push	af
   06D6 33                 2436 	inc	sp
                           2437 ;	genCall
   06D7 CD 00 00           2438 	call	_move_sprite
   06DA E8 03              2439 	lda	sp,3(sp)
                           2440 ;	genGoto
   06DC C3 F2 07           2441 	jp	00107$
                           2442 ;	genLabel
   06DF                    2443 00105$:
                           2444 ;	main.c 433
                           2445 ;	genCmpLt
                           2446 ;	AOP_HL for _score
   06DF 21 4A 05           2447 	ld	hl,#_score
   06E2 7E                 2448 	ld	a,(hl)
   06E3 D6 64              2449 	sub	a,#0x64
   06E5 23                 2450 	inc	hl
   06E6 7E                 2451 	ld	a,(hl)
   06E7 DE 00              2452 	sbc	a,#0x00
   06E9 D2 50 07           2453 	jp	nc,00102$
                           2454 ;	main.c 434
                           2455 ;	genIpush
                           2456 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06EC 21 0A 00           2457 	ld	hl,#0x000A
   06EF E5                 2458 	push	hl
                           2459 ;	genIpush
                           2460 ;	AOP_HL for _score
   06F0 21 4A 05           2461 	ld	hl,#_score
   06F3 2A                 2462 	ld	a,(hl+)
   06F4 66                 2463 	ld	h,(hl)
   06F5 6F                 2464 	ld	l,a
   06F6 E5                 2465 	push	hl
                           2466 ;	genCall
   06F7 CD 00 00           2467 	call	__divuint_rrx_s
   06FA 42                 2468 	ld	b,d
   06FB 4B                 2469 	ld	c,e
   06FC E8 04              2470 	lda	sp,4(sp)
                           2471 ;	genCast
                           2472 ;	AOP_STK for _printscore_ten_2_3
   06FE F8 02              2473 	lda	hl,2(sp)
   0700 71                 2474 	ld	(hl),c
                           2475 ;	main.c 435
                           2476 ;	genIpush
                           2477 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0701 21 0A 00           2478 	ld	hl,#0x000A
   0704 E5                 2479 	push	hl
                           2480 ;	genIpush
                           2481 ;	AOP_HL for _score
   0705 21 4A 05           2482 	ld	hl,#_score
   0708 2A                 2483 	ld	a,(hl+)
   0709 66                 2484 	ld	h,(hl)
   070A 6F                 2485 	ld	l,a
   070B E5                 2486 	push	hl
                           2487 ;	genCall
   070C CD 00 00           2488 	call	__moduint_rrx_s
   070F 4A                 2489 	ld	c,d
   0710 43                 2490 	ld	b,e
   0711 E8 04              2491 	lda	sp,4(sp)
                           2492 ;	genCast
                           2493 ; Removed redundent load
                           2494 ;	main.c 436
                           2495 ;	genPlus
                           2496 ;	genPlusIncr
                           2497 ;	Can't optimise plus by inc, falling back to the normal way
   0713 78                 2498 	ld	a,b
   0714 C6 20              2499 	add	a,#0x20
                           2500 ;	genIpush
                           2501 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0716 47                 2502 	ld	b,a
   0717 F5                 2503 	push	af
   0718 33                 2504 	inc	sp
                           2505 ;	genIpush
   0719 3E 62              2506 	ld	a,#0x62
   071B F5                 2507 	push	af
   071C 33                 2508 	inc	sp
                           2509 ;	genCall
   071D CD 00 00           2510 	call	_set_sprite_tile
   0720 E8 02              2511 	lda	sp,2(sp)
                           2512 ;	main.c 437
                           2513 ;	genIpush
                           2514 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0722 21 A0 10           2515 	ld	hl,#0x10A0
   0725 E5                 2516 	push	hl
                           2517 ;	genIpush
   0726 3E 62              2518 	ld	a,#0x62
   0728 F5                 2519 	push	af
   0729 33                 2520 	inc	sp
                           2521 ;	genCall
   072A CD 00 00           2522 	call	_move_sprite
   072D E8 03              2523 	lda	sp,3(sp)
                           2524 ;	main.c 438
                           2525 ;	genPlus
                           2526 ;	AOP_STK for _printscore_ten_2_3
                           2527 ;	genPlusIncr
                           2528 ;	Can't optimise plus by inc, falling back to the normal way
   072F F8 02              2529 	lda	hl,2(sp)
   0731 7E                 2530 	ld	a,(hl)
   0732 C6 20              2531 	add	a,#0x20
                           2532 ;	genIpush
                           2533 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0734 4F                 2534 	ld	c,a
   0735 F5                 2535 	push	af
   0736 33                 2536 	inc	sp
                           2537 ;	genIpush
   0737 3E 63              2538 	ld	a,#0x63
   0739 F5                 2539 	push	af
   073A 33                 2540 	inc	sp
                           2541 ;	genCall
   073B CD 00 00           2542 	call	_set_sprite_tile
   073E E8 02              2543 	lda	sp,2(sp)
                           2544 ;	main.c 439
                           2545 ;	genIpush
                           2546 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0740 21 98 10           2547 	ld	hl,#0x1098
   0743 E5                 2548 	push	hl
                           2549 ;	genIpush
   0744 3E 63              2550 	ld	a,#0x63
   0746 F5                 2551 	push	af
   0747 33                 2552 	inc	sp
                           2553 ;	genCall
   0748 CD 00 00           2554 	call	_move_sprite
   074B E8 03              2555 	lda	sp,3(sp)
                           2556 ;	genGoto
   074D C3 F2 07           2557 	jp	00107$
                           2558 ;	genLabel
   0750                    2559 00102$:
                           2560 ;	main.c 442
                           2561 ;	genIpush
                           2562 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0750 21 64 00           2563 	ld	hl,#0x0064
   0753 E5                 2564 	push	hl
                           2565 ;	genIpush
                           2566 ;	AOP_HL for _score
   0754 21 4A 05           2567 	ld	hl,#_score
   0757 2A                 2568 	ld	a,(hl+)
   0758 66                 2569 	ld	h,(hl)
   0759 6F                 2570 	ld	l,a
   075A E5                 2571 	push	hl
                           2572 ;	genCall
   075B CD 00 00           2573 	call	__divuint_rrx_s
   075E 42                 2574 	ld	b,d
   075F 4B                 2575 	ld	c,e
   0760 E8 04              2576 	lda	sp,4(sp)
                           2577 ;	genCast
                           2578 ;	AOP_STK for _printscore_hun_2_4
   0762 F8 01              2579 	lda	hl,1(sp)
   0764 71                 2580 	ld	(hl),c
                           2581 ;	main.c 443
                           2582 ;	genIpush
                           2583 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0765 21 0A 00           2584 	ld	hl,#0x000A
   0768 E5                 2585 	push	hl
                           2586 ;	genIpush
                           2587 ;	AOP_HL for _score
   0769 21 4A 05           2588 	ld	hl,#_score
   076C 2A                 2589 	ld	a,(hl+)
   076D 66                 2590 	ld	h,(hl)
   076E 6F                 2591 	ld	l,a
   076F E5                 2592 	push	hl
                           2593 ;	genCall
   0770 CD 00 00           2594 	call	__moduint_rrx_s
   0773 4A                 2595 	ld	c,d
   0774 43                 2596 	ld	b,e
   0775 E8 04              2597 	lda	sp,4(sp)
                           2598 ;	genIpush
                           2599 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0777 21 0A 00           2600 	ld	hl,#0x000A
   077A E5                 2601 	push	hl
                           2602 ;	genIpush
   077B 68                 2603 	ld	l,b
   077C 61                 2604 	ld	h,c
   077D E5                 2605 	push	hl
                           2606 ;	genCall
   077E CD 00 00           2607 	call	__divuint_rrx_s
   0781 42                 2608 	ld	b,d
   0782 4B                 2609 	ld	c,e
   0783 E8 04              2610 	lda	sp,4(sp)
                           2611 ;	genCast
                           2612 ;	AOP_STK for _printscore_ten_2_4
   0785 F8 00              2613 	lda	hl,0(sp)
   0787 71                 2614 	ld	(hl),c
                           2615 ;	main.c 444
                           2616 ;	genIpush
                           2617 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0788 21 64 00           2618 	ld	hl,#0x0064
   078B E5                 2619 	push	hl
                           2620 ;	genIpush
                           2621 ;	AOP_HL for _score
   078C 21 4A 05           2622 	ld	hl,#_score
   078F 2A                 2623 	ld	a,(hl+)
   0790 66                 2624 	ld	h,(hl)
   0791 6F                 2625 	ld	l,a
   0792 E5                 2626 	push	hl
                           2627 ;	genCall
   0793 CD 00 00           2628 	call	__moduint_rrx_s
   0796 4A                 2629 	ld	c,d
   0797 43                 2630 	ld	b,e
   0798 E8 04              2631 	lda	sp,4(sp)
                           2632 ;	genCast
                           2633 ; Removed redundent load
                           2634 ;	main.c 445
                           2635 ;	genPlus
                           2636 ;	genPlusIncr
                           2637 ;	Can't optimise plus by inc, falling back to the normal way
   079A 78                 2638 	ld	a,b
   079B C6 20              2639 	add	a,#0x20
                           2640 ;	genIpush
                           2641 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   079D 47                 2642 	ld	b,a
   079E F5                 2643 	push	af
   079F 33                 2644 	inc	sp
                           2645 ;	genIpush
   07A0 3E 62              2646 	ld	a,#0x62
   07A2 F5                 2647 	push	af
   07A3 33                 2648 	inc	sp
                           2649 ;	genCall
   07A4 CD 00 00           2650 	call	_set_sprite_tile
   07A7 E8 02              2651 	lda	sp,2(sp)
                           2652 ;	main.c 446
                           2653 ;	genIpush
                           2654 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07A9 21 A0 10           2655 	ld	hl,#0x10A0
   07AC E5                 2656 	push	hl
                           2657 ;	genIpush
   07AD 3E 62              2658 	ld	a,#0x62
   07AF F5                 2659 	push	af
   07B0 33                 2660 	inc	sp
                           2661 ;	genCall
   07B1 CD 00 00           2662 	call	_move_sprite
   07B4 E8 03              2663 	lda	sp,3(sp)
                           2664 ;	main.c 447
                           2665 ;	genPlus
                           2666 ;	AOP_STK for _printscore_ten_2_4
                           2667 ;	genPlusIncr
                           2668 ;	Can't optimise plus by inc, falling back to the normal way
   07B6 F8 00              2669 	lda	hl,0(sp)
   07B8 7E                 2670 	ld	a,(hl)
   07B9 C6 20              2671 	add	a,#0x20
                           2672 ;	genIpush
                           2673 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07BB 4F                 2674 	ld	c,a
   07BC F5                 2675 	push	af
   07BD 33                 2676 	inc	sp
                           2677 ;	genIpush
   07BE 3E 63              2678 	ld	a,#0x63
   07C0 F5                 2679 	push	af
   07C1 33                 2680 	inc	sp
                           2681 ;	genCall
   07C2 CD 00 00           2682 	call	_set_sprite_tile
   07C5 E8 02              2683 	lda	sp,2(sp)
                           2684 ;	main.c 448
                           2685 ;	genIpush
                           2686 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07C7 21 98 10           2687 	ld	hl,#0x1098
   07CA E5                 2688 	push	hl
                           2689 ;	genIpush
   07CB 3E 63              2690 	ld	a,#0x63
   07CD F5                 2691 	push	af
   07CE 33                 2692 	inc	sp
                           2693 ;	genCall
   07CF CD 00 00           2694 	call	_move_sprite
   07D2 E8 03              2695 	lda	sp,3(sp)
                           2696 ;	main.c 449
                           2697 ;	genPlus
                           2698 ;	AOP_STK for _printscore_hun_2_4
                           2699 ;	genPlusIncr
                           2700 ;	Can't optimise plus by inc, falling back to the normal way
   07D4 F8 01              2701 	lda	hl,1(sp)
   07D6 7E                 2702 	ld	a,(hl)
   07D7 C6 20              2703 	add	a,#0x20
                           2704 ;	genIpush
                           2705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D9 4F                 2706 	ld	c,a
   07DA F5                 2707 	push	af
   07DB 33                 2708 	inc	sp
                           2709 ;	genIpush
   07DC 3E 64              2710 	ld	a,#0x64
   07DE F5                 2711 	push	af
   07DF 33                 2712 	inc	sp
                           2713 ;	genCall
   07E0 CD 00 00           2714 	call	_set_sprite_tile
   07E3 E8 02              2715 	lda	sp,2(sp)
                           2716 ;	main.c 450
                           2717 ;	genIpush
                           2718 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07E5 21 90 10           2719 	ld	hl,#0x1090
   07E8 E5                 2720 	push	hl
                           2721 ;	genIpush
   07E9 3E 64              2722 	ld	a,#0x64
   07EB F5                 2723 	push	af
   07EC 33                 2724 	inc	sp
                           2725 ;	genCall
   07ED CD 00 00           2726 	call	_move_sprite
   07F0 E8 03              2727 	lda	sp,3(sp)
                           2728 ;	genLabel
   07F2                    2729 00107$:
                           2730 ;	genEndFunction
   07F2 E8 03              2731 	lda	sp,3(sp)
   07F4 C9                 2732 	ret
   07F5                    2733 ___printscore_end:
                           2734 ;	main.c 454
                           2735 ;	genLabel
                           2736 ;	genFunction
                           2737 ;	---------------------------------
                           2738 ; Function printGV
                           2739 ; ---------------------------------
   07F5                    2740 ___printGV_start:
   07F5                    2741 _printGV:
                           2742 	
                           2743 ;	main.c 455
                           2744 ;	genIpush
                           2745 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07F5 21 5A 2A           2746 	ld	hl,#0x2A5A
   07F8 E5                 2747 	push	hl
                           2748 ;	genCall
   07F9 CD 00 00           2749 	call	_set_sprite_tile
   07FC E8 02              2750 	lda	sp,2(sp)
                           2751 ;	main.c 456
                           2752 ;	genIpush
                           2753 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07FE 21 30 28           2754 	ld	hl,#0x2830
   0801 E5                 2755 	push	hl
                           2756 ;	genIpush
   0802 3E 5A              2757 	ld	a,#0x5A
   0804 F5                 2758 	push	af
   0805 33                 2759 	inc	sp
                           2760 ;	genCall
   0806 CD 00 00           2761 	call	_move_sprite
   0809 E8 03              2762 	lda	sp,3(sp)
                           2763 ;	main.c 457
                           2764 ;	genIpush
                           2765 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   080B 21 5B 2B           2766 	ld	hl,#0x2B5B
   080E E5                 2767 	push	hl
                           2768 ;	genCall
   080F CD 00 00           2769 	call	_set_sprite_tile
   0812 E8 02              2770 	lda	sp,2(sp)
                           2771 ;	main.c 458
                           2772 ;	genIpush
                           2773 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0814 21 38 28           2774 	ld	hl,#0x2838
   0817 E5                 2775 	push	hl
                           2776 ;	genIpush
   0818 3E 5B              2777 	ld	a,#0x5B
   081A F5                 2778 	push	af
   081B 33                 2779 	inc	sp
                           2780 ;	genCall
   081C CD 00 00           2781 	call	_move_sprite
   081F E8 03              2782 	lda	sp,3(sp)
                           2783 ;	main.c 459
                           2784 ;	genIpush
                           2785 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0821 21 5C 2C           2786 	ld	hl,#0x2C5C
   0824 E5                 2787 	push	hl
                           2788 ;	genCall
   0825 CD 00 00           2789 	call	_set_sprite_tile
   0828 E8 02              2790 	lda	sp,2(sp)
                           2791 ;	main.c 460
                           2792 ;	genIpush
                           2793 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   082A 21 40 28           2794 	ld	hl,#0x2840
   082D E5                 2795 	push	hl
                           2796 ;	genIpush
   082E 3E 5C              2797 	ld	a,#0x5C
   0830 F5                 2798 	push	af
   0831 33                 2799 	inc	sp
                           2800 ;	genCall
   0832 CD 00 00           2801 	call	_move_sprite
   0835 E8 03              2802 	lda	sp,3(sp)
                           2803 ;	main.c 461
                           2804 ;	genIpush
                           2805 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0837 21 5D 2D           2806 	ld	hl,#0x2D5D
   083A E5                 2807 	push	hl
                           2808 ;	genCall
   083B CD 00 00           2809 	call	_set_sprite_tile
   083E E8 02              2810 	lda	sp,2(sp)
                           2811 ;	main.c 462
                           2812 ;	genIpush
                           2813 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0840 21 48 28           2814 	ld	hl,#0x2848
   0843 E5                 2815 	push	hl
                           2816 ;	genIpush
   0844 3E 5D              2817 	ld	a,#0x5D
   0846 F5                 2818 	push	af
   0847 33                 2819 	inc	sp
                           2820 ;	genCall
   0848 CD 00 00           2821 	call	_move_sprite
   084B E8 03              2822 	lda	sp,3(sp)
                           2823 ;	main.c 463
                           2824 ;	genIpush
                           2825 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   084D 21 5E 2E           2826 	ld	hl,#0x2E5E
   0850 E5                 2827 	push	hl
                           2828 ;	genCall
   0851 CD 00 00           2829 	call	_set_sprite_tile
   0854 E8 02              2830 	lda	sp,2(sp)
                           2831 ;	main.c 464
                           2832 ;	genIpush
                           2833 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0856 21 60 28           2834 	ld	hl,#0x2860
   0859 E5                 2835 	push	hl
                           2836 ;	genIpush
   085A 3E 5E              2837 	ld	a,#0x5E
   085C F5                 2838 	push	af
   085D 33                 2839 	inc	sp
                           2840 ;	genCall
   085E CD 00 00           2841 	call	_move_sprite
   0861 E8 03              2842 	lda	sp,3(sp)
                           2843 ;	main.c 465
                           2844 ;	genIpush
                           2845 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0863 21 5F 2F           2846 	ld	hl,#0x2F5F
   0866 E5                 2847 	push	hl
                           2848 ;	genCall
   0867 CD 00 00           2849 	call	_set_sprite_tile
   086A E8 02              2850 	lda	sp,2(sp)
                           2851 ;	main.c 466
                           2852 ;	genIpush
                           2853 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086C 21 68 28           2854 	ld	hl,#0x2868
   086F E5                 2855 	push	hl
                           2856 ;	genIpush
   0870 3E 5F              2857 	ld	a,#0x5F
   0872 F5                 2858 	push	af
   0873 33                 2859 	inc	sp
                           2860 ;	genCall
   0874 CD 00 00           2861 	call	_move_sprite
   0877 E8 03              2862 	lda	sp,3(sp)
                           2863 ;	main.c 467
                           2864 ;	genIpush
                           2865 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0879 21 60 2D           2866 	ld	hl,#0x2D60
   087C E5                 2867 	push	hl
                           2868 ;	genCall
   087D CD 00 00           2869 	call	_set_sprite_tile
   0880 E8 02              2870 	lda	sp,2(sp)
                           2871 ;	main.c 468
                           2872 ;	genIpush
                           2873 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0882 21 70 28           2874 	ld	hl,#0x2870
   0885 E5                 2875 	push	hl
                           2876 ;	genIpush
   0886 3E 60              2877 	ld	a,#0x60
   0888 F5                 2878 	push	af
   0889 33                 2879 	inc	sp
                           2880 ;	genCall
   088A CD 00 00           2881 	call	_move_sprite
   088D E8 03              2882 	lda	sp,3(sp)
                           2883 ;	main.c 469
                           2884 ;	genIpush
                           2885 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   088F 21 61 30           2886 	ld	hl,#0x3061
   0892 E5                 2887 	push	hl
                           2888 ;	genCall
   0893 CD 00 00           2889 	call	_set_sprite_tile
   0896 E8 02              2890 	lda	sp,2(sp)
                           2891 ;	main.c 470
                           2892 ;	genIpush
                           2893 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0898 21 78 28           2894 	ld	hl,#0x2878
   089B E5                 2895 	push	hl
                           2896 ;	genIpush
   089C 3E 61              2897 	ld	a,#0x61
   089E F5                 2898 	push	af
   089F 33                 2899 	inc	sp
                           2900 ;	genCall
   08A0 CD 00 00           2901 	call	_move_sprite
   08A3 E8 03              2902 	lda	sp,3(sp)
                           2903 ;	genLabel
   08A5                    2904 00101$:
                           2905 ;	genEndFunction
                           2906 	
   08A5 C9                 2907 	ret
   08A6                    2908 ___printGV_end:
                           2909 ;	main.c 473
                           2910 ;	genLabel
                           2911 ;	genFunction
                           2912 ;	---------------------------------
                           2913 ; Function performantdelay
                           2914 ; ---------------------------------
   08A6                    2915 ___performantdelay_start:
   08A6                    2916 _performantdelay:
                           2917 	
                           2918 ;	main.c 475
                           2919 ;	genAssign
   08A6 0E 00              2920 	ld	c,#0x00
                           2921 ;	genLabel
   08A8                    2922 00101$:
                           2923 ;	genCmpLt
                           2924 ;	AOP_STK for 
   08A8 79                 2925 	ld	a,c
   08A9 F8 02              2926 	lda	hl,2(sp)
   08AB 96                 2927 	sub	a,(hl)
   08AC D2 B9 08           2928 	jp	nc,00105$
                           2929 ;	main.c 476
                           2930 ;	genCall
                           2931 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   08AF C5                 2932 	push	bc
   08B0 CD 00 00           2933 	call	_wait_vbl_done
   08B3 E1                 2934 	pop	hl
   08B4 4D                 2935 	ld	c,l
                           2936 ;	main.c 475
                           2937 ;	genPlus
                           2938 ;	genPlusIncr
                           2939 ; Removed redundent load
   08B5 0C                 2940 	inc	c
                           2941 ;	genGoto
   08B6 C3 A8 08           2942 	jp	00101$
                           2943 ;	genLabel
   08B9                    2944 00105$:
                           2945 ;	genEndFunction
                           2946 	
   08B9 C9                 2947 	ret
   08BA                    2948 ___performantdelay_end:
                           2949 ;	main.c 480
                           2950 ;	genLabel
                           2951 ;	genFunction
                           2952 ;	---------------------------------
                           2953 ; Function fadeout
                           2954 ; ---------------------------------
   08BA                    2955 ___fadeout_start:
   08BA                    2956 _fadeout:
   08BA E8 FF              2957 	lda	sp,-1(sp)
                           2958 ;	main.c 482
                           2959 ;	genAssign
                           2960 ;	AOP_STK for _fadeout_i_1_1
   08BC F8 00              2961 	lda	hl,0(sp)
   08BE 36 00              2962 	ld	(hl),#0x00
                           2963 ;	genLabel
   08C0                    2964 00106$:
                           2965 ;	genCmpLt
                           2966 ;	AOP_STK for _fadeout_i_1_1
   08C0 F8 00              2967 	lda	hl,0(sp)
   08C2 7E                 2968 	ld	a,(hl)
   08C3 FE 04              2969 	cp	#0x04
   08C5 D2 17 09           2970 	jp	nc,00110$
                           2971 ;	main.c 483
                           2972 ;	genCmpGt
                           2973 ;	AOP_STK for _fadeout_i_1_1
   08C8 3E 03              2974 	ld	a,#0x03
   08CA 96                 2975 	sub	a,(hl)
   08CB DA 08 09           2976 	jp	c,00105$
                           2977 ;	genJumpTab
                           2978 ;	AOP_STK for _fadeout_i_1_1
   08CE 5E                 2979 	ld	e,(hl)
   08CF 16 00              2980 	ld	d,#0x00
   08D1 21 D8 08           2981 	ld	hl,#00115$
   08D4 19                 2982 	add	hl,de
   08D5 19                 2983 	add	hl,de
   08D6 19                 2984 	add	hl,de
   08D7 E9                 2985 	jp	(hl)
   08D8                    2986 00115$:
   08D8 C3 E4 08           2987 	jp	00101$
   08DB C3 F0 08           2988 	jp	00102$
   08DE C3 F9 08           2989 	jp	00103$
   08E1 C3 02 09           2990 	jp	00104$
                           2991 ;	main.c 485
                           2992 ;	genLabel
   08E4                    2993 00101$:
                           2994 ;	genAssign
   08E4 06 47              2995 	ld	b,#0x47
   08E6 0E FF              2996 	ld	c,#0xFF
                           2997 ;	genAssign (pointer)
   08E8 58                 2998 	ld	e,b
   08E9 51                 2999 	ld	d,c
   08EA 3E E4              3000 	ld	a,#0xE4
   08EC 12                 3001 	ld	(de),a
                           3002 ;	main.c 486
                           3003 ;	genGoto
   08ED C3 08 09           3004 	jp	00105$
                           3005 ;	main.c 488
                           3006 ;	genLabel
   08F0                    3007 00102$:
                           3008 ;	genAssign
   08F0 01 47 FF           3009 	ld	bc,#0xFF47
                           3010 ;	genAssign (pointer)
   08F3 3E F9              3011 	ld	a,#0xF9
   08F5 02                 3012 	ld	(bc),a
                           3013 ;	main.c 489
                           3014 ;	genGoto
   08F6 C3 08 09           3015 	jp	00105$
                           3016 ;	main.c 491
                           3017 ;	genLabel
   08F9                    3018 00103$:
                           3019 ;	genAssign
   08F9 01 47 FF           3020 	ld	bc,#0xFF47
                           3021 ;	genAssign (pointer)
   08FC 3E FE              3022 	ld	a,#0xFE
   08FE 02                 3023 	ld	(bc),a
                           3024 ;	main.c 492
                           3025 ;	genGoto
   08FF C3 08 09           3026 	jp	00105$
                           3027 ;	main.c 494
                           3028 ;	genLabel
   0902                    3029 00104$:
                           3030 ;	genAssign
   0902 01 47 FF           3031 	ld	bc,#0xFF47
                           3032 ;	genAssign (pointer)
   0905 3E FF              3033 	ld	a,#0xFF
   0907 02                 3034 	ld	(bc),a
                           3035 ;	main.c 496
                           3036 ;	genLabel
   0908                    3037 00105$:
                           3038 ;	main.c 497
                           3039 ;	genIpush
                           3040 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0908 3E 0A              3041 	ld	a,#0x0A
   090A F5                 3042 	push	af
   090B 33                 3043 	inc	sp
                           3044 ;	genCall
   090C CD A6 08           3045 	call	_performantdelay
   090F E8 01              3046 	lda	sp,1(sp)
                           3047 ;	main.c 482
                           3048 ;	genPlus
                           3049 ;	AOP_STK for _fadeout_i_1_1
                           3050 ;	genPlusIncr
   0911 F8 00              3051 	lda	hl,0(sp)
   0913 34                 3052 	inc	(hl)
                           3053 ;	genGoto
   0914 C3 C0 08           3054 	jp	00106$
                           3055 ;	genLabel
   0917                    3056 00110$:
                           3057 ;	genEndFunction
   0917 E8 01              3058 	lda	sp,1(sp)
   0919 C9                 3059 	ret
   091A                    3060 ___fadeout_end:
                           3061 ;	main.c 501
                           3062 ;	genLabel
                           3063 ;	genFunction
                           3064 ;	---------------------------------
                           3065 ; Function fadein
                           3066 ; ---------------------------------
   091A                    3067 ___fadein_start:
   091A                    3068 _fadein:
   091A E8 FF              3069 	lda	sp,-1(sp)
                           3070 ;	main.c 503
                           3071 ;	genAssign
                           3072 ;	AOP_STK for _fadein_i_1_1
   091C F8 00              3073 	lda	hl,0(sp)
   091E 36 00              3074 	ld	(hl),#0x00
                           3075 ;	genLabel
   0920                    3076 00105$:
                           3077 ;	genCmpLt
                           3078 ;	AOP_STK for _fadein_i_1_1
   0920 F8 00              3079 	lda	hl,0(sp)
   0922 7E                 3080 	ld	a,(hl)
   0923 FE 03              3081 	cp	#0x03
   0925 D2 6A 09           3082 	jp	nc,00109$
                           3083 ;	main.c 504
                           3084 ;	genCmpEq
                           3085 ;	AOP_STK for _fadein_i_1_1
                           3086 ; genCmpEq: left 1, right 1, result 0
   0928 7E                 3087 	ld	a,(hl)
   0929 B7                 3088 	or	a,a
   092A CA 40 09           3089 	jp	z,00101$
   092D                    3090 00116$:
                           3091 ;	genCmpEq
                           3092 ;	AOP_STK for _fadein_i_1_1
                           3093 ; genCmpEq: left 1, right 1, result 0
   092D F8 00              3094 	lda	hl,0(sp)
   092F 7E                 3095 	ld	a,(hl)
   0930 FE 01              3096 	cp	a,#0x01
   0932 CA 4C 09           3097 	jp	z,00102$
   0935                    3098 00117$:
                           3099 ;	genCmpEq
                           3100 ;	AOP_STK for _fadein_i_1_1
                           3101 ; genCmpEq: left 1, right 1, result 0
   0935 F8 00              3102 	lda	hl,0(sp)
   0937 7E                 3103 	ld	a,(hl)
   0938 FE 02              3104 	cp	a,#0x02
   093A CA 55 09           3105 	jp	z,00103$
   093D                    3106 00118$:
                           3107 ;	genGoto
   093D C3 5B 09           3108 	jp	00104$
                           3109 ;	main.c 506
                           3110 ;	genLabel
   0940                    3111 00101$:
                           3112 ;	genAssign
   0940 06 47              3113 	ld	b,#0x47
   0942 0E FF              3114 	ld	c,#0xFF
                           3115 ;	genAssign (pointer)
   0944 58                 3116 	ld	e,b
   0945 51                 3117 	ld	d,c
   0946 3E FE              3118 	ld	a,#0xFE
   0948 12                 3119 	ld	(de),a
                           3120 ;	main.c 507
                           3121 ;	genGoto
   0949 C3 5B 09           3122 	jp	00104$
                           3123 ;	main.c 509
                           3124 ;	genLabel
   094C                    3125 00102$:
                           3126 ;	genAssign
   094C 01 47 FF           3127 	ld	bc,#0xFF47
                           3128 ;	genAssign (pointer)
   094F 3E F9              3129 	ld	a,#0xF9
   0951 02                 3130 	ld	(bc),a
                           3131 ;	main.c 510
                           3132 ;	genGoto
   0952 C3 5B 09           3133 	jp	00104$
                           3134 ;	main.c 512
                           3135 ;	genLabel
   0955                    3136 00103$:
                           3137 ;	genAssign
   0955 01 47 FF           3138 	ld	bc,#0xFF47
                           3139 ;	genAssign (pointer)
   0958 3E E4              3140 	ld	a,#0xE4
   095A 02                 3141 	ld	(bc),a
                           3142 ;	main.c 514
                           3143 ;	genLabel
   095B                    3144 00104$:
                           3145 ;	main.c 515
                           3146 ;	genIpush
                           3147 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   095B 3E 0A              3148 	ld	a,#0x0A
   095D F5                 3149 	push	af
   095E 33                 3150 	inc	sp
                           3151 ;	genCall
   095F CD A6 08           3152 	call	_performantdelay
   0962 E8 01              3153 	lda	sp,1(sp)
                           3154 ;	main.c 503
                           3155 ;	genPlus
                           3156 ;	AOP_STK for _fadein_i_1_1
                           3157 ;	genPlusIncr
   0964 F8 00              3158 	lda	hl,0(sp)
   0966 34                 3159 	inc	(hl)
                           3160 ;	genGoto
   0967 C3 20 09           3161 	jp	00105$
                           3162 ;	genLabel
   096A                    3163 00109$:
                           3164 ;	genEndFunction
   096A E8 01              3165 	lda	sp,1(sp)
   096C C9                 3166 	ret
   096D                    3167 ___fadein_end:
                           3168 ;	main.c 519
                           3169 ;	genLabel
                           3170 ;	genFunction
                           3171 ;	---------------------------------
                           3172 ; Function checkcollisions
                           3173 ; ---------------------------------
   096D                    3174 ___checkcollisions_start:
   096D                    3175 _checkcollisions:
   096D E8 F6              3176 	lda	sp,-10(sp)
                           3177 ;	main.c 520
                           3178 ;	genAssign
                           3179 ;	AOP_STK for 
   096F F8 0C              3180 	lda	hl,12(sp)
   0971 4E                 3181 	ld	c,(hl)
   0972 23                 3182 	inc	hl
   0973 46                 3183 	ld	b,(hl)
                           3184 ;	genPlus
                           3185 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3186 ;	genPlusIncr
                           3187 ;	Can't optimise plus by inc, falling back to the normal way
   0974 21 04 00           3188 	ld	hl,#0x0004
   0977 09                 3189 	add	hl,bc
   0978 7D                 3190 	ld	a,l
   0979 54                 3191 	ld	d,h
   097A F8 08              3192 	lda	hl,8(sp)
                           3193 ;	genPointerGet
                           3194 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3195 ;	AOP_STK for _checkcollisions_sloc1_1_0
   097C 22                 3196 	ld	(hl+),a
   097D 72                 3197 	ld	(hl),d
   097E 5F                 3198 	ld	e,a
   097F 1A                 3199 	ld	a,(de)
   0980 2B                 3200 	dec	hl
   0981 2B                 3201 	dec	hl
   0982 77                 3202 	ld	(hl),a
                           3203 ;	genAssign
                           3204 ;	AOP_STK for 
                           3205 ;	AOP_STK for _checkcollisions_sloc0_1_0
   0983 F8 0E              3206 	lda	hl,14(sp)
   0985 2A                 3207 	ld	a,(hl+)
   0986 5E                 3208 	ld	e,(hl)
   0987 F8 08              3209 	lda	hl,8(sp)
   0989 22                 3210 	ld	(hl+),a
   098A 73                 3211 	ld	(hl),e
                           3212 ;	genPlus
                           3213 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3214 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3215 ;	genPlusIncr
                           3216 ;	Can't optimise plus by inc, falling back to the normal way
   098B 2B                 3217 	dec	hl
   098C 5E                 3218 	ld	e,(hl)
   098D 23                 3219 	inc	hl
   098E 56                 3220 	ld	d,(hl)
   098F 21 04 00           3221 	ld	hl,#0x0004
   0992 19                 3222 	add	hl,de
   0993 7D                 3223 	ld	a,l
   0994 54                 3224 	ld	d,h
   0995 F8 05              3225 	lda	hl,5(sp)
                           3226 ;	genPointerGet
                           3227 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3228 ;	AOP_STK for _checkcollisions_sloc3_1_0
   0997 22                 3229 	ld	(hl+),a
   0998 72                 3230 	ld	(hl),d
   0999 5F                 3231 	ld	e,a
   099A 1A                 3232 	ld	a,(de)
   099B 2B                 3233 	dec	hl
   099C 2B                 3234 	dec	hl
   099D 77                 3235 	ld	(hl),a
                           3236 ;	genCmpLt
                           3237 ;	AOP_STK for _checkcollisions_sloc1_1_0
                           3238 ;	AOP_STK for _checkcollisions_sloc3_1_0
                           3239 ;	AOP_STK for _checkcollisions_sloc2_1_0
   099E F8 07              3240 	lda	hl,7(sp)
   09A0 7E                 3241 	ld	a,(hl)
   09A1 F8 04              3242 	lda	hl,4(sp)
   09A3 96                 3243 	sub	a,(hl)
   09A4 3E 00              3244 	ld	a,#0x00
   09A6 17                 3245 	rla
   09A7 23                 3246 	inc	hl
   09A8 77                 3247 	ld	(hl),a
                           3248 ;	genNot
                           3249 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3250 ;	AOP_STK for _checkcollisions_sloc4_1_0
   09A9 AF                 3251 	xor	a,a
   09AA B6                 3252 	or	a,(hl)
   09AB D6 01              3253 	sub	a,#0x01
   09AD 3E 00              3254 	ld	a,#0x00
   09AF 17                 3255 	rla
   09B0 2B                 3256 	dec	hl
   09B1 2B                 3257 	dec	hl
   09B2 77                 3258 	ld	(hl),a
                           3259 ;	genPlus
                           3260 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3261 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3262 ;	genPlusIncr
                           3263 ;	Can't optimise plus by inc, falling back to the normal way
   09B3 F8 08              3264 	lda	hl,8(sp)
   09B5 5E                 3265 	ld	e,(hl)
   09B6 23                 3266 	inc	hl
   09B7 56                 3267 	ld	d,(hl)
   09B8 21 06 00           3268 	ld	hl,#0x0006
   09BB 19                 3269 	add	hl,de
   09BC 7D                 3270 	ld	a,l
   09BD 54                 3271 	ld	d,h
   09BE F8 05              3272 	lda	hl,5(sp)
                           3273 ;	genPointerGet
                           3274 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3275 ;	AOP_STK for _checkcollisions_sloc5_1_0
   09C0 22                 3276 	ld	(hl+),a
   09C1 72                 3277 	ld	(hl),d
   09C2 5F                 3278 	ld	e,a
   09C3 1A                 3279 	ld	a,(de)
   09C4 F8 02              3280 	lda	hl,2(sp)
                           3281 ;	genPlus
                           3282 ;	AOP_STK for _checkcollisions_sloc3_1_0
                           3283 ;	AOP_STK for _checkcollisions_sloc5_1_0
                           3284 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3285 ;	Can't optimise plus by inc, falling back to the normal way
   09C6 22                 3286 	ld	(hl+),a
   09C7 23                 3287 	inc	hl
   09C8 7E                 3288 	ld	a,(hl)
   09C9 2B                 3289 	dec	hl
   09CA 2B                 3290 	dec	hl
   09CB 86                 3291 	add	a,(hl)
   09CC F8 05              3292 	lda	hl,5(sp)
   09CE 77                 3293 	ld	(hl),a
                           3294 ;	genCmpGt
                           3295 ;	AOP_STK for _checkcollisions_sloc1_1_0
                           3296 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3297 ;	AOP_STK for _checkcollisions_sloc5_1_0
   09CF 2A                 3298 	ld	a,(hl+)
   09D0 23                 3299 	inc	hl
   09D1 96                 3300 	sub	a,(hl)
   09D2 3E 00              3301 	ld	a,#0x00
   09D4 17                 3302 	rla
   09D5 F8 02              3303 	lda	hl,2(sp)
   09D7 77                 3304 	ld	(hl),a
                           3305 ;	genNot
                           3306 ;	AOP_STK for _checkcollisions_sloc5_1_0
                           3307 ;	AOP_STK for _checkcollisions_sloc2_1_0
   09D8 AF                 3308 	xor	a,a
   09D9 B6                 3309 	or	a,(hl)
   09DA D6 01              3310 	sub	a,#0x01
   09DC 3E 00              3311 	ld	a,#0x00
   09DE 17                 3312 	rla
   09DF F8 05              3313 	lda	hl,5(sp)
   09E1 77                 3314 	ld	(hl),a
                           3315 ;	genAndOp
                           3316 ;	AOP_STK for _checkcollisions_sloc4_1_0
                           3317 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3318 ;	AOP_STK for _checkcollisions_sloc5_1_0
   09E2 AF                 3319 	xor	a,a
   09E3 2B                 3320 	dec	hl
   09E4 2B                 3321 	dec	hl
   09E5 B6                 3322 	or	a,(hl)
   09E6 28 04              3323 	jr	z,00103$
   09E8 AF                 3324 	xor	a,a
   09E9 23                 3325 	inc	hl
   09EA 23                 3326 	inc	hl
   09EB B6                 3327 	or	a,(hl)
   09EC                    3328 00103$:
   09EC 28 02              3329 	jr	z,00104$
   09EE 3E 01              3330 	ld	a,#0x01
   09F0                    3331 00104$:
   09F0 F8 02              3332 	lda	hl,2(sp)
   09F2 77                 3333 	ld	(hl),a
                           3334 ;	genPlus
                           3335 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3336 ;	genPlusIncr
                           3337 ;	Can't optimise plus by inc, falling back to the normal way
   09F3 21 05 00           3338 	ld	hl,#0x0005
   09F6 09                 3339 	add	hl,bc
   09F7 7D                 3340 	ld	a,l
   09F8 54                 3341 	ld	d,h
   09F9 F8 05              3342 	lda	hl,5(sp)
                           3343 ;	genPointerGet
                           3344 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3345 ;	AOP_STK for _checkcollisions_sloc4_1_0
   09FB 22                 3346 	ld	(hl+),a
   09FC 72                 3347 	ld	(hl),d
   09FD 5F                 3348 	ld	e,a
   09FE 1A                 3349 	ld	a,(de)
   09FF F8 03              3350 	lda	hl,3(sp)
   0A01 77                 3351 	ld	(hl),a
                           3352 ;	genPlus
                           3353 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3354 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3355 ;	genPlusIncr
                           3356 ;	Can't optimise plus by inc, falling back to the normal way
   0A02 F8 08              3357 	lda	hl,8(sp)
   0A04 5E                 3358 	ld	e,(hl)
   0A05 23                 3359 	inc	hl
   0A06 56                 3360 	ld	d,(hl)
   0A07 21 05 00           3361 	ld	hl,#0x0005
   0A0A 19                 3362 	add	hl,de
   0A0B 7D                 3363 	ld	a,l
   0A0C 54                 3364 	ld	d,h
   0A0D F8 05              3365 	lda	hl,5(sp)
                           3366 ;	genPointerGet
                           3367 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3368 ;	AOP_STK for _checkcollisions_sloc6_1_0
   0A0F 22                 3369 	ld	(hl+),a
   0A10 72                 3370 	ld	(hl),d
   0A11 5F                 3371 	ld	e,a
   0A12 1A                 3372 	ld	a,(de)
   0A13 F8 01              3373 	lda	hl,1(sp)
                           3374 ;	genCmpLt
                           3375 ;	AOP_STK for _checkcollisions_sloc4_1_0
                           3376 ;	AOP_STK for _checkcollisions_sloc6_1_0
                           3377 ;	AOP_STK for _checkcollisions_sloc2_1_0
   0A15 22                 3378 	ld	(hl+),a
   0A16 23                 3379 	inc	hl
   0A17 7E                 3380 	ld	a,(hl)
   0A18 2B                 3381 	dec	hl
   0A19 2B                 3382 	dec	hl
   0A1A 96                 3383 	sub	a,(hl)
   0A1B 3E 00              3384 	ld	a,#0x00
   0A1D 17                 3385 	rla
   0A1E F8 05              3386 	lda	hl,5(sp)
   0A20 77                 3387 	ld	(hl),a
                           3388 ;	genNot
                           3389 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3390 ;	AOP_STK for _checkcollisions_sloc7_1_0
   0A21 AF                 3391 	xor	a,a
   0A22 B6                 3392 	or	a,(hl)
   0A23 D6 01              3393 	sub	a,#0x01
   0A25 3E 00              3394 	ld	a,#0x00
   0A27 17                 3395 	rla
   0A28 F8 00              3396 	lda	hl,0(sp)
   0A2A 77                 3397 	ld	(hl),a
                           3398 ;	genPlus
                           3399 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3400 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3401 ;	genPlusIncr
                           3402 ;	Can't optimise plus by inc, falling back to the normal way
   0A2B F8 08              3403 	lda	hl,8(sp)
   0A2D 5E                 3404 	ld	e,(hl)
   0A2E 23                 3405 	inc	hl
   0A2F 56                 3406 	ld	d,(hl)
   0A30 21 07 00           3407 	ld	hl,#0x0007
   0A33 19                 3408 	add	hl,de
   0A34 7D                 3409 	ld	a,l
   0A35 54                 3410 	ld	d,h
   0A36 F8 05              3411 	lda	hl,5(sp)
                           3412 ;	genPointerGet
                           3413 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3414 ;	AOP_STK for _checkcollisions_sloc0_1_0
   0A38 22                 3415 	ld	(hl+),a
   0A39 72                 3416 	ld	(hl),d
   0A3A 5F                 3417 	ld	e,a
   0A3B 1A                 3418 	ld	a,(de)
   0A3C 23                 3419 	inc	hl
   0A3D 23                 3420 	inc	hl
   0A3E 77                 3421 	ld	(hl),a
                           3422 ;	genPlus
                           3423 ;	AOP_STK for _checkcollisions_sloc6_1_0
                           3424 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3425 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3426 ;	Can't optimise plus by inc, falling back to the normal way
   0A3F F8 01              3427 	lda	hl,1(sp)
   0A41 7E                 3428 	ld	a,(hl)
   0A42 F8 08              3429 	lda	hl,8(sp)
   0A44 86                 3430 	add	a,(hl)
   0A45 F8 05              3431 	lda	hl,5(sp)
                           3432 ;	genCmpGt
                           3433 ;	AOP_STK for _checkcollisions_sloc4_1_0
                           3434 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3435 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3436 ; Removed redundent load
   0A47 32                 3437 	ld      (hl-),a
   0A48 2B                 3438 	dec	hl
   0A49 96                 3439 	sub	a,(hl)
   0A4A 3E 00              3440 	ld	a,#0x00
   0A4C 17                 3441 	rla
   0A4D F8 08              3442 	lda	hl,8(sp)
   0A4F 77                 3443 	ld	(hl),a
                           3444 ;	genNot
                           3445 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3446 ;	AOP_STK for _checkcollisions_sloc2_1_0
   0A50 AF                 3447 	xor	a,a
   0A51 B6                 3448 	or	a,(hl)
   0A52 D6 01              3449 	sub	a,#0x01
   0A54 3E 00              3450 	ld	a,#0x00
   0A56 17                 3451 	rla
   0A57 F8 05              3452 	lda	hl,5(sp)
   0A59 77                 3453 	ld	(hl),a
                           3454 ;	genAndOp
                           3455 ;	AOP_STK for _checkcollisions_sloc7_1_0
                           3456 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3457 ;	AOP_STK for _checkcollisions_sloc0_1_0
   0A5A AF                 3458 	xor	a,a
   0A5B F8 00              3459 	lda	hl,0(sp)
   0A5D B6                 3460 	or	a,(hl)
   0A5E 28 04              3461 	jr	z,00105$
   0A60 AF                 3462 	xor	a,a
   0A61 F8 05              3463 	lda	hl,5(sp)
   0A63 B6                 3464 	or	a,(hl)
   0A64                    3465 00105$:
   0A64 28 02              3466 	jr	z,00106$
   0A66 3E 01              3467 	ld	a,#0x01
   0A68                    3468 00106$:
   0A68 F8 08              3469 	lda	hl,8(sp)
   0A6A 77                 3470 	ld	(hl),a
                           3471 ;	genAndOp
                           3472 ;	AOP_STK for _checkcollisions_sloc5_1_0
                           3473 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3474 ;	AOP_STK for _checkcollisions_sloc7_1_0
   0A6B AF                 3475 	xor	a,a
   0A6C F8 02              3476 	lda	hl,2(sp)
   0A6E B6                 3477 	or	a,(hl)
   0A6F 28 04              3478 	jr	z,00107$
   0A71 AF                 3479 	xor	a,a
   0A72 F8 08              3480 	lda	hl,8(sp)
   0A74 B6                 3481 	or	a,(hl)
   0A75                    3482 00107$:
   0A75 28 02              3483 	jr	z,00108$
   0A77 3E 01              3484 	ld	a,#0x01
   0A79                    3485 00108$:
   0A79 F8 00              3486 	lda	hl,0(sp)
   0A7B 77                 3487 	ld	(hl),a
                           3488 ;	main.c 521
                           3489 ;	genCmpLt
                           3490 ;	AOP_STK for _checkcollisions_sloc3_1_0
                           3491 ;	AOP_STK for _checkcollisions_sloc1_1_0
                           3492 ;	AOP_STK for _checkcollisions_sloc5_1_0
   0A7C F8 04              3493 	lda	hl,4(sp)
   0A7E 7E                 3494 	ld	a,(hl)
   0A7F F8 07              3495 	lda	hl,7(sp)
   0A81 96                 3496 	sub	a,(hl)
   0A82 3E 00              3497 	ld	a,#0x00
   0A84 17                 3498 	rla
   0A85 F8 02              3499 	lda	hl,2(sp)
   0A87 77                 3500 	ld	(hl),a
                           3501 ;	genNot
                           3502 ;	AOP_STK for _checkcollisions_sloc5_1_0
                           3503 ;	AOP_STK for _checkcollisions_sloc2_1_0
   0A88 AF                 3504 	xor	a,a
   0A89 B6                 3505 	or	a,(hl)
   0A8A D6 01              3506 	sub	a,#0x01
   0A8C 3E 00              3507 	ld	a,#0x00
   0A8E 17                 3508 	rla
   0A8F F8 05              3509 	lda	hl,5(sp)
   0A91 77                 3510 	ld	(hl),a
                           3511 ;	genPlus
                           3512 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3513 ;	genPlusIncr
                           3514 ;	Can't optimise plus by inc, falling back to the normal way
   0A92 21 06 00           3515 	ld	hl,#0x0006
   0A95 09                 3516 	add	hl,bc
   0A96 7D                 3517 	ld	a,l
   0A97 54                 3518 	ld	d,h
   0A98 F8 08              3519 	lda	hl,8(sp)
                           3520 ;	genPointerGet
                           3521 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3522 ;	AOP_STK for _checkcollisions_sloc5_1_0
   0A9A 22                 3523 	ld	(hl+),a
   0A9B 72                 3524 	ld	(hl),d
   0A9C 5F                 3525 	ld	e,a
   0A9D 1A                 3526 	ld	a,(de)
   0A9E F8 02              3527 	lda	hl,2(sp)
   0AA0 77                 3528 	ld	(hl),a
                           3529 ;	genPlus
                           3530 ;	AOP_STK for _checkcollisions_sloc1_1_0
                           3531 ;	AOP_STK for _checkcollisions_sloc5_1_0
                           3532 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3533 ;	Can't optimise plus by inc, falling back to the normal way
   0AA1 F8 07              3534 	lda	hl,7(sp)
   0AA3 7E                 3535 	ld	a,(hl)
   0AA4 F8 02              3536 	lda	hl,2(sp)
   0AA6 86                 3537 	add	a,(hl)
   0AA7 F8 08              3538 	lda	hl,8(sp)
                           3539 ;	genCmpGt
                           3540 ;	AOP_STK for _checkcollisions_sloc3_1_0
                           3541 ;	AOP_STK for _checkcollisions_sloc0_1_0
                           3542 ;	AOP_STK for _checkcollisions_sloc5_1_0
   0AA9 77                 3543 	ld      (hl),a
                           3544 ; Removed redundent load
   0AAA F8 04              3545 	lda	hl,4(sp)
   0AAC 96                 3546 	sub	a,(hl)
   0AAD 3E 00              3547 	ld	a,#0x00
   0AAF 17                 3548 	rla
   0AB0 2B                 3549 	dec	hl
   0AB1 2B                 3550 	dec	hl
   0AB2 77                 3551 	ld	(hl),a
                           3552 ;	genNot
                           3553 ;	AOP_STK for _checkcollisions_sloc5_1_0
                           3554 ;	AOP_STK for _checkcollisions_sloc3_1_0
   0AB3 AF                 3555 	xor	a,a
   0AB4 B6                 3556 	or	a,(hl)
   0AB5 D6 01              3557 	sub	a,#0x01
   0AB7 3E 00              3558 	ld	a,#0x00
   0AB9 17                 3559 	rla
   0ABA 23                 3560 	inc	hl
   0ABB 23                 3561 	inc	hl
   0ABC 77                 3562 	ld	(hl),a
                           3563 ;	genAndOp
                           3564 ;	AOP_STK for _checkcollisions_sloc2_1_0
                           3565 ;	AOP_STK for _checkcollisions_sloc3_1_0
                           3566 ;	AOP_STK for _checkcollisions_sloc5_1_0
   0ABD AF                 3567 	xor	a,a
   0ABE 23                 3568 	inc	hl
   0ABF B6                 3569 	or	a,(hl)
   0AC0 28 03              3570 	jr	z,00109$
   0AC2 AF                 3571 	xor	a,a
   0AC3 2B                 3572 	dec	hl
   0AC4 B6                 3573 	or	a,(hl)
   0AC5                    3574 00109$:
   0AC5 28 02              3575 	jr	z,00110$
   0AC7 3E 01              3576 	ld	a,#0x01
   0AC9                    3577 00110$:
   0AC9 F8 02              3578 	lda	hl,2(sp)
                           3579 ;	genCmpLt
                           3580 ;	AOP_STK for _checkcollisions_sloc6_1_0
                           3581 ;	AOP_STK for _checkcollisions_sloc4_1_0
                           3582 ;	AOP_STK for _checkcollisions_sloc3_1_0
   0ACB 32                 3583 	ld      (hl-),a
   0ACC 2A                 3584 	ld	a,(hl+)
   0ACD 23                 3585 	inc	hl
   0ACE 96                 3586 	sub	a,(hl)
   0ACF 3E 00              3587 	ld	a,#0x00
   0AD1 17                 3588 	rla
   0AD2 23                 3589 	inc	hl
   0AD3 77                 3590 	ld	(hl),a
                           3591 ;	genNot
                           3592 ;	AOP_STK for _checkcollisions_sloc3_1_0
                           3593 ;	AOP_STK for _checkcollisions_sloc2_1_0
   0AD4 AF                 3594 	xor	a,a
   0AD5 B6                 3595 	or	a,(hl)
   0AD6 D6 01              3596 	sub	a,#0x01
   0AD8 3E 00              3597 	ld	a,#0x00
   0ADA 17                 3598 	rla
   0ADB 23                 3599 	inc	hl
   0ADC 77                 3600 	ld	(hl),a
                           3601 ;	genPlus
                           3602 ;	genPlusIncr
                           3603 ;	Can't optimise plus by inc, falling back to the normal way
   0ADD 79                 3604 	ld	a,c
   0ADE C6 07              3605 	add	a,#0x07
   0AE0 4F                 3606 	ld	c,a
   0AE1 78                 3607 	ld	a,b
   0AE2 CE 00              3608 	adc	a,#0x00
   0AE4 47                 3609 	ld	b,a
                           3610 ;	genPointerGet
   0AE5 0A                 3611 	ld	a,(bc)
   0AE6 4F                 3612 	ld	c,a
                           3613 ;	genPlus
                           3614 ;	AOP_STK for _checkcollisions_sloc4_1_0
                           3615 ;	Can't optimise plus by inc, falling back to the normal way
   0AE7 2B                 3616 	dec	hl
   0AE8 2B                 3617 	dec	hl
   0AE9 7E                 3618 	ld	a,(hl)
   0AEA 81                 3619 	add	a,c
                           3620 ;	genCmpGt
                           3621 ;	AOP_STK for _checkcollisions_sloc6_1_0
   0AEB 4F                 3622 	ld	c,a
   0AEC 2B                 3623 	dec	hl
   0AED 2B                 3624 	dec	hl
   0AEE 96                 3625 	sub	a,(hl)
   0AEF 3E 00              3626 	ld	a,#0x00
   0AF1 17                 3627 	rla
   0AF2 4F                 3628 	ld	c,a
                           3629 ;	genNot
   0AF3 AF                 3630 	xor	a,a
   0AF4 B1                 3631 	or	a,c
   0AF5 D6 01              3632 	sub	a,#0x01
   0AF7 3E 00              3633 	ld	a,#0x00
   0AF9 17                 3634 	rla
   0AFA 4F                 3635 	ld	c,a
                           3636 ;	genAndOp
                           3637 ;	AOP_STK for _checkcollisions_sloc2_1_0
   0AFB AF                 3638 	xor	a,a
   0AFC F8 05              3639 	lda	hl,5(sp)
   0AFE B6                 3640 	or	a,(hl)
   0AFF 28 02              3641 	jr	z,00111$
   0B01 AF                 3642 	xor	a,a
   0B02 B1                 3643 	or	a,c
   0B03                    3644 00111$:
   0B03 28 02              3645 	jr	z,00112$
   0B05 3E 01              3646 	ld	a,#0x01
   0B07                    3647 00112$:
   0B07 4F                 3648 	ld	c,a
                           3649 ;	genAndOp
                           3650 ;	AOP_STK for _checkcollisions_sloc5_1_0
   0B08 AF                 3651 	xor	a,a
   0B09 F8 02              3652 	lda	hl,2(sp)
   0B0B B6                 3653 	or	a,(hl)
   0B0C 28 02              3654 	jr	z,00113$
   0B0E AF                 3655 	xor	a,a
   0B0F B1                 3656 	or	a,c
   0B10                    3657 00113$:
   0B10 28 02              3658 	jr	z,00114$
   0B12 3E 01              3659 	ld	a,#0x01
   0B14                    3660 00114$:
   0B14 4F                 3661 	ld	c,a
                           3662 ;	genOrOp
                           3663 ;	AOP_STK for _checkcollisions_sloc7_1_0
   0B15 AF                 3664 	xor	a,a
   0B16 F8 00              3665 	lda	hl,0(sp)
   0B18 B6                 3666 	or	a,(hl)
   0B19 20 02              3667 	jr	nz,00115$
   0B1B AF                 3668 	xor	a,a
   0B1C B1                 3669 	or	a,c
   0B1D                    3670 00115$:
   0B1D 28 02              3671 	jr	z,00116$
   0B1F 3E 01              3672 	ld	a,#0x01
   0B21                    3673 00116$:
   0B21 4F                 3674 	ld	c,a
                           3675 ;	genRet
   0B22 59                 3676 	ld	e,c
                           3677 ;	genLabel
   0B23                    3678 00101$:
                           3679 ;	genEndFunction
   0B23 E8 0A              3680 	lda	sp,10(sp)
   0B25 C9                 3681 	ret
   0B26                    3682 ___checkcollisions_end:
                           3683 ;	main.c 524
                           3684 ;	genLabel
                           3685 ;	genFunction
                           3686 ;	---------------------------------
                           3687 ; Function checkcollisions2
                           3688 ; ---------------------------------
   0B26                    3689 ___checkcollisions2_start:
   0B26                    3690 _checkcollisions2:
   0B26 E8 F4              3691 	lda	sp,-12(sp)
                           3692 ;	main.c 525
                           3693 ;	genAssign
                           3694 ;	AOP_STK for 
   0B28 F8 0E              3695 	lda	hl,14(sp)
   0B2A 4E                 3696 	ld	c,(hl)
   0B2B 23                 3697 	inc	hl
   0B2C 46                 3698 	ld	b,(hl)
                           3699 ;	genPlus
                           3700 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3701 ;	genPlusIncr
                           3702 ;	Can't optimise plus by inc, falling back to the normal way
   0B2D 21 02 00           3703 	ld	hl,#0x0002
   0B30 09                 3704 	add	hl,bc
   0B31 7D                 3705 	ld	a,l
   0B32 54                 3706 	ld	d,h
   0B33 F8 0A              3707 	lda	hl,10(sp)
   0B35 22                 3708 	ld	(hl+),a
   0B36 72                 3709 	ld	(hl),d
                           3710 ;	genAssign
                           3711 ;	AOP_STK for 
                           3712 ;	AOP_STK for _checkcollisions2_sloc1_1_0
   0B37 F8 10              3713 	lda	hl,16(sp)
   0B39 2A                 3714 	ld	a,(hl+)
   0B3A 5E                 3715 	ld	e,(hl)
   0B3B F8 08              3716 	lda	hl,8(sp)
   0B3D 22                 3717 	ld	(hl+),a
   0B3E 73                 3718 	ld	(hl),e
                           3719 ;	genPlus
                           3720 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3721 ;	AOP_STK for _checkcollisions2_sloc2_1_0
                           3722 ;	genPlusIncr
                           3723 ;	Can't optimise plus by inc, falling back to the normal way
   0B3F 2B                 3724 	dec	hl
   0B40 5E                 3725 	ld	e,(hl)
   0B41 23                 3726 	inc	hl
   0B42 56                 3727 	ld	d,(hl)
   0B43 21 04 00           3728 	ld	hl,#0x0004
   0B46 19                 3729 	add	hl,de
   0B47 7D                 3730 	ld	a,l
   0B48 54                 3731 	ld	d,h
   0B49 F8 06              3732 	lda	hl,6(sp)
                           3733 ;	genPointerGet
                           3734 ;	AOP_STK for _checkcollisions2_sloc2_1_0
                           3735 ;	AOP_STK for _checkcollisions2_sloc3_1_0
   0B4B 22                 3736 	ld	(hl+),a
   0B4C 72                 3737 	ld	(hl),d
   0B4D 5F                 3738 	ld	e,a
   0B4E 1A                 3739 	ld	a,(de)
   0B4F 2B                 3740 	dec	hl
   0B50 2B                 3741 	dec	hl
   0B51 77                 3742 	ld	(hl),a
                           3743 ;	genPointerGet
                           3744 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3745 ;	AOP_STK for _checkcollisions2_sloc2_1_0
   0B52 F8 0A              3746 	lda	hl,10(sp)
   0B54 5E                 3747 	ld	e,(hl)
   0B55 23                 3748 	inc	hl
   0B56 56                 3749 	ld	d,(hl)
   0B57 1A                 3750 	ld	a,(de)
   0B58 F8 06              3751 	lda	hl,6(sp)
                           3752 ;	genCmpLt
                           3753 ;	AOP_STK for _checkcollisions2_sloc2_1_0
                           3754 ;	AOP_STK for _checkcollisions2_sloc3_1_0
                           3755 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3756 ; Removed redundent load
   0B5A 32                 3757 	ld      (hl-),a
   0B5B 96                 3758 	sub	a,(hl)
   0B5C 3E 00              3759 	ld	a,#0x00
   0B5E 17                 3760 	rla
   0B5F F8 0A              3761 	lda	hl,10(sp)
   0B61 77                 3762 	ld	(hl),a
                           3763 ;	genNot
                           3764 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3765 ;	AOP_STK for _checkcollisions2_sloc4_1_0
   0B62 AF                 3766 	xor	a,a
   0B63 B6                 3767 	or	a,(hl)
   0B64 D6 01              3768 	sub	a,#0x01
   0B66 3E 00              3769 	ld	a,#0x00
   0B68 17                 3770 	rla
   0B69 F8 04              3771 	lda	hl,4(sp)
   0B6B 77                 3772 	ld	(hl),a
                           3773 ;	genPlus
                           3774 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3775 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3776 ;	genPlusIncr
                           3777 ;	Can't optimise plus by inc, falling back to the normal way
   0B6C F8 08              3778 	lda	hl,8(sp)
   0B6E 5E                 3779 	ld	e,(hl)
   0B6F 23                 3780 	inc	hl
   0B70 56                 3781 	ld	d,(hl)
   0B71 21 06 00           3782 	ld	hl,#0x0006
   0B74 19                 3783 	add	hl,de
   0B75 7D                 3784 	ld	a,l
   0B76 54                 3785 	ld	d,h
   0B77 F8 0A              3786 	lda	hl,10(sp)
                           3787 ;	genPointerGet
                           3788 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3789 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0B79 22                 3790 	ld	(hl+),a
   0B7A 72                 3791 	ld	(hl),d
   0B7B 5F                 3792 	ld	e,a
   0B7C 1A                 3793 	ld	a,(de)
   0B7D F8 03              3794 	lda	hl,3(sp)
                           3795 ;	genPlus
                           3796 ;	AOP_STK for _checkcollisions2_sloc3_1_0
                           3797 ;	AOP_STK for _checkcollisions2_sloc5_1_0
                           3798 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3799 ;	Can't optimise plus by inc, falling back to the normal way
   0B7F 22                 3800 	ld	(hl+),a
   0B80 23                 3801 	inc	hl
   0B81 7E                 3802 	ld	a,(hl)
   0B82 2B                 3803 	dec	hl
   0B83 2B                 3804 	dec	hl
   0B84 86                 3805 	add	a,(hl)
   0B85 F8 0A              3806 	lda	hl,10(sp)
                           3807 ;	genCmpGt
                           3808 ;	AOP_STK for _checkcollisions2_sloc2_1_0
                           3809 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3810 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0B87 77                 3811 	ld      (hl),a
                           3812 ; Removed redundent load
   0B88 F8 06              3813 	lda	hl,6(sp)
   0B8A 96                 3814 	sub	a,(hl)
   0B8B 3E 00              3815 	ld	a,#0x00
   0B8D 17                 3816 	rla
   0B8E F8 03              3817 	lda	hl,3(sp)
   0B90 77                 3818 	ld	(hl),a
                           3819 ;	genNot
                           3820 ;	AOP_STK for _checkcollisions2_sloc5_1_0
                           3821 ;	AOP_STK for _checkcollisions2_sloc0_1_0
   0B91 AF                 3822 	xor	a,a
   0B92 B6                 3823 	or	a,(hl)
   0B93 D6 01              3824 	sub	a,#0x01
   0B95 3E 00              3825 	ld	a,#0x00
   0B97 17                 3826 	rla
   0B98 F8 0A              3827 	lda	hl,10(sp)
   0B9A 77                 3828 	ld	(hl),a
                           3829 ;	genAndOp
                           3830 ;	AOP_STK for _checkcollisions2_sloc4_1_0
                           3831 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3832 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0B9B AF                 3833 	xor	a,a
   0B9C F8 04              3834 	lda	hl,4(sp)
   0B9E B6                 3835 	or	a,(hl)
   0B9F 28 04              3836 	jr	z,00103$
   0BA1 AF                 3837 	xor	a,a
   0BA2 F8 0A              3838 	lda	hl,10(sp)
   0BA4 B6                 3839 	or	a,(hl)
   0BA5                    3840 00103$:
   0BA5 28 02              3841 	jr	z,00104$
   0BA7 3E 01              3842 	ld	a,#0x01
   0BA9                    3843 00104$:
   0BA9 F8 03              3844 	lda	hl,3(sp)
   0BAB 77                 3845 	ld	(hl),a
                           3846 ;	genPlus
                           3847 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3848 ;	genPlusIncr
                           3849 ;	Can't optimise plus by inc, falling back to the normal way
   0BAC 21 04 00           3850 	ld	hl,#0x0004
   0BAF 09                 3851 	add	hl,bc
   0BB0 7D                 3852 	ld	a,l
   0BB1 54                 3853 	ld	d,h
   0BB2 F8 0A              3854 	lda	hl,10(sp)
   0BB4 22                 3855 	ld	(hl+),a
   0BB5 72                 3856 	ld	(hl),d
                           3857 ;	genPlus
                           3858 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3859 ;	AOP_STK for _checkcollisions2_sloc6_1_0
                           3860 ;	genPlusIncr
                           3861 ;	Can't optimise plus by inc, falling back to the normal way
   0BB6 F8 08              3862 	lda	hl,8(sp)
   0BB8 5E                 3863 	ld	e,(hl)
   0BB9 23                 3864 	inc	hl
   0BBA 56                 3865 	ld	d,(hl)
   0BBB 21 05 00           3866 	ld	hl,#0x0005
   0BBE 19                 3867 	add	hl,de
   0BBF 7D                 3868 	ld	a,l
   0BC0 54                 3869 	ld	d,h
   0BC1 F8 01              3870 	lda	hl,1(sp)
                           3871 ;	genPointerGet
                           3872 ;	AOP_STK for _checkcollisions2_sloc6_1_0
                           3873 ;	AOP_STK for _checkcollisions2_sloc4_1_0
   0BC3 22                 3874 	ld	(hl+),a
   0BC4 72                 3875 	ld	(hl),d
   0BC5 5F                 3876 	ld	e,a
   0BC6 1A                 3877 	ld	a,(de)
   0BC7 23                 3878 	inc	hl
   0BC8 23                 3879 	inc	hl
   0BC9 77                 3880 	ld	(hl),a
                           3881 ;	genPointerGet
                           3882 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3883 ;	AOP_STK for _checkcollisions2_sloc6_1_0
   0BCA F8 0A              3884 	lda	hl,10(sp)
   0BCC 5E                 3885 	ld	e,(hl)
   0BCD 23                 3886 	inc	hl
   0BCE 56                 3887 	ld	d,(hl)
   0BCF 1A                 3888 	ld	a,(de)
   0BD0 F8 01              3889 	lda	hl,1(sp)
                           3890 ;	genCmpLt
                           3891 ;	AOP_STK for _checkcollisions2_sloc6_1_0
                           3892 ;	AOP_STK for _checkcollisions2_sloc4_1_0
                           3893 ;	AOP_STK for _checkcollisions2_sloc0_1_0
   0BD2 77                 3894 	ld      (hl),a
                           3895 ; Removed redundent load
   0BD3 F8 04              3896 	lda	hl,4(sp)
   0BD5 96                 3897 	sub	a,(hl)
   0BD6 3E 00              3898 	ld	a,#0x00
   0BD8 17                 3899 	rla
   0BD9 F8 0A              3900 	lda	hl,10(sp)
   0BDB 77                 3901 	ld	(hl),a
                           3902 ;	genNot
                           3903 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3904 ;	AOP_STK for _checkcollisions2_sloc7_1_0
   0BDC AF                 3905 	xor	a,a
   0BDD B6                 3906 	or	a,(hl)
   0BDE D6 01              3907 	sub	a,#0x01
   0BE0 3E 00              3908 	ld	a,#0x00
   0BE2 17                 3909 	rla
   0BE3 F8 00              3910 	lda	hl,0(sp)
   0BE5 77                 3911 	ld	(hl),a
                           3912 ;	genPlus
                           3913 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3914 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3915 ;	genPlusIncr
                           3916 ;	Can't optimise plus by inc, falling back to the normal way
   0BE6 F8 08              3917 	lda	hl,8(sp)
   0BE8 5E                 3918 	ld	e,(hl)
   0BE9 23                 3919 	inc	hl
   0BEA 56                 3920 	ld	d,(hl)
   0BEB 21 07 00           3921 	ld	hl,#0x0007
   0BEE 19                 3922 	add	hl,de
   0BEF 7D                 3923 	ld	a,l
   0BF0 54                 3924 	ld	d,h
   0BF1 F8 0A              3925 	lda	hl,10(sp)
                           3926 ;	genPointerGet
                           3927 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3928 ;	AOP_STK for _checkcollisions2_sloc1_1_0
   0BF3 22                 3929 	ld	(hl+),a
   0BF4 72                 3930 	ld	(hl),d
   0BF5 5F                 3931 	ld	e,a
   0BF6 1A                 3932 	ld	a,(de)
   0BF7 F8 08              3933 	lda	hl,8(sp)
   0BF9 77                 3934 	ld	(hl),a
                           3935 ;	genPlus
                           3936 ;	AOP_STK for _checkcollisions2_sloc4_1_0
                           3937 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3938 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3939 ;	Can't optimise plus by inc, falling back to the normal way
   0BFA F8 04              3940 	lda	hl,4(sp)
   0BFC 7E                 3941 	ld	a,(hl)
   0BFD F8 08              3942 	lda	hl,8(sp)
   0BFF 86                 3943 	add	a,(hl)
   0C00 23                 3944 	inc	hl
   0C01 23                 3945 	inc	hl
                           3946 ;	genCmpGt
                           3947 ;	AOP_STK for _checkcollisions2_sloc6_1_0
                           3948 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3949 ;	AOP_STK for _checkcollisions2_sloc1_1_0
   0C02 77                 3950 	ld      (hl),a
                           3951 ; Removed redundent load
   0C03 F8 01              3952 	lda	hl,1(sp)
   0C05 96                 3953 	sub	a,(hl)
   0C06 3E 00              3954 	ld	a,#0x00
   0C08 17                 3955 	rla
   0C09 F8 08              3956 	lda	hl,8(sp)
   0C0B 77                 3957 	ld	(hl),a
                           3958 ;	genNot
                           3959 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3960 ;	AOP_STK for _checkcollisions2_sloc0_1_0
   0C0C AF                 3961 	xor	a,a
   0C0D B6                 3962 	or	a,(hl)
   0C0E D6 01              3963 	sub	a,#0x01
   0C10 3E 00              3964 	ld	a,#0x00
   0C12 17                 3965 	rla
   0C13 23                 3966 	inc	hl
   0C14 23                 3967 	inc	hl
   0C15 77                 3968 	ld	(hl),a
                           3969 ;	genAndOp
                           3970 ;	AOP_STK for _checkcollisions2_sloc7_1_0
                           3971 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           3972 ;	AOP_STK for _checkcollisions2_sloc1_1_0
   0C16 AF                 3973 	xor	a,a
   0C17 F8 00              3974 	lda	hl,0(sp)
   0C19 B6                 3975 	or	a,(hl)
   0C1A 28 04              3976 	jr	z,00105$
   0C1C AF                 3977 	xor	a,a
   0C1D F8 0A              3978 	lda	hl,10(sp)
   0C1F B6                 3979 	or	a,(hl)
   0C20                    3980 00105$:
   0C20 28 02              3981 	jr	z,00106$
   0C22 3E 01              3982 	ld	a,#0x01
   0C24                    3983 00106$:
   0C24 F8 08              3984 	lda	hl,8(sp)
   0C26 77                 3985 	ld	(hl),a
                           3986 ;	genAndOp
                           3987 ;	AOP_STK for _checkcollisions2_sloc5_1_0
                           3988 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           3989 ;	AOP_STK for _checkcollisions2_sloc7_1_0
   0C27 AF                 3990 	xor	a,a
   0C28 F8 03              3991 	lda	hl,3(sp)
   0C2A B6                 3992 	or	a,(hl)
   0C2B 28 04              3993 	jr	z,00107$
   0C2D AF                 3994 	xor	a,a
   0C2E F8 08              3995 	lda	hl,8(sp)
   0C30 B6                 3996 	or	a,(hl)
   0C31                    3997 00107$:
   0C31 28 02              3998 	jr	z,00108$
   0C33 3E 01              3999 	ld	a,#0x01
   0C35                    4000 00108$:
   0C35 F8 00              4001 	lda	hl,0(sp)
   0C37 77                 4002 	ld	(hl),a
                           4003 ;	main.c 526
                           4004 ;	genCmpLt
                           4005 ;	AOP_STK for _checkcollisions2_sloc3_1_0
                           4006 ;	AOP_STK for _checkcollisions2_sloc2_1_0
                           4007 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0C38 F8 05              4008 	lda	hl,5(sp)
   0C3A 2A                 4009 	ld	a,(hl+)
   0C3B 96                 4010 	sub	a,(hl)
   0C3C 3E 00              4011 	ld	a,#0x00
   0C3E 17                 4012 	rla
   0C3F F8 03              4013 	lda	hl,3(sp)
   0C41 77                 4014 	ld	(hl),a
                           4015 ;	genNot
                           4016 ;	AOP_STK for _checkcollisions2_sloc5_1_0
                           4017 ;	AOP_STK for _checkcollisions2_sloc1_1_0
   0C42 AF                 4018 	xor	a,a
   0C43 B6                 4019 	or	a,(hl)
   0C44 D6 01              4020 	sub	a,#0x01
   0C46 3E 00              4021 	ld	a,#0x00
   0C48 17                 4022 	rla
   0C49 F8 08              4023 	lda	hl,8(sp)
   0C4B 77                 4024 	ld	(hl),a
                           4025 ;	genPlus
                           4026 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           4027 ;	genPlusIncr
                           4028 ;	Can't optimise plus by inc, falling back to the normal way
   0C4C 21 06 00           4029 	ld	hl,#0x0006
   0C4F 09                 4030 	add	hl,bc
   0C50 7D                 4031 	ld	a,l
   0C51 54                 4032 	ld	d,h
   0C52 F8 0A              4033 	lda	hl,10(sp)
                           4034 ;	genPointerGet
                           4035 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           4036 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0C54 22                 4037 	ld	(hl+),a
   0C55 72                 4038 	ld	(hl),d
   0C56 5F                 4039 	ld	e,a
   0C57 1A                 4040 	ld	a,(de)
   0C58 F8 03              4041 	lda	hl,3(sp)
   0C5A 77                 4042 	ld	(hl),a
                           4043 ;	genPlus
                           4044 ;	AOP_STK for _checkcollisions2_sloc2_1_0
                           4045 ;	AOP_STK for _checkcollisions2_sloc5_1_0
                           4046 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           4047 ;	Can't optimise plus by inc, falling back to the normal way
   0C5B F8 06              4048 	lda	hl,6(sp)
   0C5D 7E                 4049 	ld	a,(hl)
   0C5E F8 03              4050 	lda	hl,3(sp)
   0C60 86                 4051 	add	a,(hl)
   0C61 F8 0A              4052 	lda	hl,10(sp)
                           4053 ;	genCmpGt
                           4054 ;	AOP_STK for _checkcollisions2_sloc3_1_0
                           4055 ;	AOP_STK for _checkcollisions2_sloc0_1_0
                           4056 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0C63 77                 4057 	ld      (hl),a
                           4058 ; Removed redundent load
   0C64 F8 05              4059 	lda	hl,5(sp)
   0C66 96                 4060 	sub	a,(hl)
   0C67 3E 00              4061 	ld	a,#0x00
   0C69 17                 4062 	rla
   0C6A 2B                 4063 	dec	hl
   0C6B 2B                 4064 	dec	hl
   0C6C 77                 4065 	ld	(hl),a
                           4066 ;	genNot
                           4067 ;	AOP_STK for _checkcollisions2_sloc5_1_0
                           4068 ;	AOP_STK for _checkcollisions2_sloc3_1_0
   0C6D AF                 4069 	xor	a,a
   0C6E B6                 4070 	or	a,(hl)
   0C6F D6 01              4071 	sub	a,#0x01
   0C71 3E 00              4072 	ld	a,#0x00
   0C73 17                 4073 	rla
   0C74 23                 4074 	inc	hl
   0C75 23                 4075 	inc	hl
   0C76 77                 4076 	ld	(hl),a
                           4077 ;	genAndOp
                           4078 ;	AOP_STK for _checkcollisions2_sloc1_1_0
                           4079 ;	AOP_STK for _checkcollisions2_sloc3_1_0
                           4080 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0C77 AF                 4081 	xor	a,a
   0C78 F8 08              4082 	lda	hl,8(sp)
   0C7A B6                 4083 	or	a,(hl)
   0C7B 28 04              4084 	jr	z,00109$
   0C7D AF                 4085 	xor	a,a
   0C7E F8 05              4086 	lda	hl,5(sp)
   0C80 B6                 4087 	or	a,(hl)
   0C81                    4088 00109$:
   0C81 28 02              4089 	jr	z,00110$
   0C83 3E 01              4090 	ld	a,#0x01
   0C85                    4091 00110$:
   0C85 F8 03              4092 	lda	hl,3(sp)
                           4093 ;	genCmpLt
                           4094 ;	AOP_STK for _checkcollisions2_sloc4_1_0
                           4095 ;	AOP_STK for _checkcollisions2_sloc6_1_0
                           4096 ;	AOP_STK for _checkcollisions2_sloc3_1_0
   0C87 22                 4097 	ld	(hl+),a
   0C88 7E                 4098 	ld	a,(hl)
   0C89 F8 01              4099 	lda	hl,1(sp)
   0C8B 96                 4100 	sub	a,(hl)
   0C8C 3E 00              4101 	ld	a,#0x00
   0C8E 17                 4102 	rla
   0C8F F8 05              4103 	lda	hl,5(sp)
   0C91 77                 4104 	ld	(hl),a
                           4105 ;	genNot
                           4106 ;	AOP_STK for _checkcollisions2_sloc3_1_0
                           4107 ;	AOP_STK for _checkcollisions2_sloc2_1_0
   0C92 AF                 4108 	xor	a,a
   0C93 B6                 4109 	or	a,(hl)
   0C94 D6 01              4110 	sub	a,#0x01
   0C96 3E 00              4111 	ld	a,#0x00
   0C98 17                 4112 	rla
   0C99 23                 4113 	inc	hl
   0C9A 77                 4114 	ld	(hl),a
                           4115 ;	genPlus
                           4116 ;	genPlusIncr
                           4117 ;	Can't optimise plus by inc, falling back to the normal way
   0C9B 79                 4118 	ld	a,c
   0C9C C6 07              4119 	add	a,#0x07
   0C9E 4F                 4120 	ld	c,a
   0C9F 78                 4121 	ld	a,b
   0CA0 CE 00              4122 	adc	a,#0x00
   0CA2 47                 4123 	ld	b,a
                           4124 ;	genPointerGet
   0CA3 0A                 4125 	ld	a,(bc)
   0CA4 4F                 4126 	ld	c,a
                           4127 ;	genPlus
                           4128 ;	AOP_STK for _checkcollisions2_sloc6_1_0
                           4129 ;	Can't optimise plus by inc, falling back to the normal way
   0CA5 F8 01              4130 	lda	hl,1(sp)
   0CA7 7E                 4131 	ld	a,(hl)
   0CA8 81                 4132 	add	a,c
                           4133 ;	genCmpGt
                           4134 ;	AOP_STK for _checkcollisions2_sloc4_1_0
   0CA9 4F                 4135 	ld	c,a
   0CAA F8 04              4136 	lda	hl,4(sp)
   0CAC 96                 4137 	sub	a,(hl)
   0CAD 3E 00              4138 	ld	a,#0x00
   0CAF 17                 4139 	rla
   0CB0 4F                 4140 	ld	c,a
                           4141 ;	genNot
   0CB1 AF                 4142 	xor	a,a
   0CB2 B1                 4143 	or	a,c
   0CB3 D6 01              4144 	sub	a,#0x01
   0CB5 3E 00              4145 	ld	a,#0x00
   0CB7 17                 4146 	rla
   0CB8 4F                 4147 	ld	c,a
                           4148 ;	genAndOp
                           4149 ;	AOP_STK for _checkcollisions2_sloc2_1_0
   0CB9 AF                 4150 	xor	a,a
   0CBA 23                 4151 	inc	hl
   0CBB 23                 4152 	inc	hl
   0CBC B6                 4153 	or	a,(hl)
   0CBD 28 02              4154 	jr	z,00111$
   0CBF AF                 4155 	xor	a,a
   0CC0 B1                 4156 	or	a,c
   0CC1                    4157 00111$:
   0CC1 28 02              4158 	jr	z,00112$
   0CC3 3E 01              4159 	ld	a,#0x01
   0CC5                    4160 00112$:
   0CC5 4F                 4161 	ld	c,a
                           4162 ;	genAndOp
                           4163 ;	AOP_STK for _checkcollisions2_sloc5_1_0
   0CC6 AF                 4164 	xor	a,a
   0CC7 F8 03              4165 	lda	hl,3(sp)
   0CC9 B6                 4166 	or	a,(hl)
   0CCA 28 02              4167 	jr	z,00113$
   0CCC AF                 4168 	xor	a,a
   0CCD B1                 4169 	or	a,c
   0CCE                    4170 00113$:
   0CCE 28 02              4171 	jr	z,00114$
   0CD0 3E 01              4172 	ld	a,#0x01
   0CD2                    4173 00114$:
   0CD2 4F                 4174 	ld	c,a
                           4175 ;	genOrOp
                           4176 ;	AOP_STK for _checkcollisions2_sloc7_1_0
   0CD3 AF                 4177 	xor	a,a
   0CD4 F8 00              4178 	lda	hl,0(sp)
   0CD6 B6                 4179 	or	a,(hl)
   0CD7 20 02              4180 	jr	nz,00115$
   0CD9 AF                 4181 	xor	a,a
   0CDA B1                 4182 	or	a,c
   0CDB                    4183 00115$:
   0CDB 28 02              4184 	jr	z,00116$
   0CDD 3E 01              4185 	ld	a,#0x01
   0CDF                    4186 00116$:
   0CDF 4F                 4187 	ld	c,a
                           4188 ;	genRet
   0CE0 59                 4189 	ld	e,c
                           4190 ;	genLabel
   0CE1                    4191 00101$:
                           4192 ;	genEndFunction
   0CE1 E8 0C              4193 	lda	sp,12(sp)
   0CE3 C9                 4194 	ret
   0CE4                    4195 ___checkcollisions2_end:
                           4196 ;	main.c 529
                           4197 ;	genLabel
                           4198 ;	genFunction
                           4199 ;	---------------------------------
                           4200 ; Function main
                           4201 ; ---------------------------------
   0CE4                    4202 ___main_start:
   0CE4                    4203 _main:
   0CE4 E8 FB              4204 	lda	sp,-5(sp)
                           4205 ;	main.c 531
                           4206 ;	genIpush
                           4207 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CE6 21 31 0F           4208 	ld	hl,#__str_0
   0CE9 E5                 4209 	push	hl
                           4210 ;	genCall
   0CEA CD 00 00           4211 	call	_printf
   0CED E8 02              4212 	lda	sp,2(sp)
                           4213 ;	main.c 532
                           4214 ;	genIpush
                           4215 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CEF 3E 40              4216 	ld	a,#0x40
   0CF1 F5                 4217 	push	af
   0CF2 33                 4218 	inc	sp
                           4219 ;	genCall
   0CF3 CD 00 00           4220 	call	_waitpad
   0CF6 E8 01              4221 	lda	sp,1(sp)
                           4222 ;	main.c 533
                           4223 ;	genCall
                           4224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CF8 CD 00 00           4225 	call	_waitpadup
                           4226 ;	main.c 534
                           4227 ;	genAssign
   0CFB 01 04 FF           4228 	ld	bc,#0xFF04
                           4229 ;	genPointerGet
   0CFE 0A                 4230 	ld	a,(bc)
   0CFF 4F                 4231 	ld	c,a
                           4232 ;	genCast
                           4233 ;	AOP_STK for _main_seed_1_1
   0D00 F8 03              4234 	lda	hl,3(sp)
   0D02 71                 4235 	ld	(hl),c
   0D03 23                 4236 	inc	hl
   0D04 36 00              4237 	ld	(hl),#0x00
                           4238 ;	main.c 535
                           4239 ;	genIpush
                           4240 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D06 21 40 0F           4241 	ld	hl,#__str_1
   0D09 E5                 4242 	push	hl
                           4243 ;	genCall
   0D0A CD 00 00           4244 	call	_printf
   0D0D E8 02              4245 	lda	sp,2(sp)
                           4246 ;	main.c 536
                           4247 ;	genIpush
                           4248 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D0F 3E 80              4249 	ld	a,#0x80
   0D11 F5                 4250 	push	af
   0D12 33                 4251 	inc	sp
                           4252 ;	genCall
   0D13 CD 00 00           4253 	call	_waitpad
   0D16 E8 01              4254 	lda	sp,1(sp)
                           4255 ;	main.c 537
                           4256 ;	genCall
                           4257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D18 CD 00 00           4258 	call	_waitpadup
                           4259 ;	main.c 538
                           4260 ;	genAssign
   0D1B 01 04 FF           4261 	ld	bc,#0xFF04
                           4262 ;	genPointerGet
   0D1E 0A                 4263 	ld	a,(bc)
   0D1F 4F                 4264 	ld	c,a
                           4265 ;	genCast
                           4266 ; Removed redundent load
   0D20 06 00              4267 	ld	b,#0x00
                           4268 ;	genLeftShift
   0D22 41                 4269 	ld	b,c
   0D23 0E 00              4270 	ld	c,#0x00
                           4271 ;	genOr
                           4272 ;	AOP_STK for _main_seed_1_1
   0D25 F8 03              4273 	lda	hl,3(sp)
   0D27 7E                 4274 	ld	a,(hl)
   0D28 B1                 4275 	or	a,c
   0D29 22                 4276 	ld	(hl+),a
   0D2A 7E                 4277 	ld	a,(hl)
   0D2B B0                 4278 	or	a,b
                           4279 ;	main.c 539
                           4280 ;	genIpush
                           4281 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4282 ;	AOP_STK for _main_seed_1_1
   0D2C 32                 4283 	ld      (hl-),a
   0D2D 2A                 4284 	ld	a,(hl+)
   0D2E 66                 4285 	ld	h,(hl)
   0D2F 6F                 4286 	ld	l,a
   0D30 E5                 4287 	push	hl
                           4288 ;	genCall
   0D31 CD 00 00           4289 	call	_initarand
   0D34 E8 02              4290 	lda	sp,2(sp)
                           4291 ;	main.c 541
                           4292 ;	genAssign
   0D36 01 40 FF           4293 	ld	bc,#0xFF40
                           4294 ;	genAssign
                           4295 ;	AOP_STK for _main_sloc0_1_0
   0D39 F8 01              4296 	lda	hl,1(sp)
   0D3B 36 40              4297 	ld	(hl),#0x40
   0D3D 23                 4298 	inc	hl
   0D3E 36 FF              4299 	ld	(hl),#0xFF
                           4300 ;	genPointerGet
                           4301 ;	AOP_STK for _main_sloc0_1_0
                           4302 ;	AOP_STK for _main_sloc1_1_0
   0D40 2B                 4303 	dec	hl
   0D41 5E                 4304 	ld	e,(hl)
   0D42 23                 4305 	inc	hl
   0D43 56                 4306 	ld	d,(hl)
   0D44 1A                 4307 	ld	a,(de)
   0D45 2B                 4308 	dec	hl
   0D46 2B                 4309 	dec	hl
                           4310 ;	genOr
                           4311 ;	AOP_STK for _main_sloc1_1_0
   0D47 77                 4312 	ld      (hl),a
                           4313 ; Removed redundent load
   0D48 F6 80              4314 	or	a,#0x80
                           4315 ;	genAssign (pointer)
   0D4A 02                 4316 	ld	(bc),a
                           4317 ;	main.c 542
                           4318 ;	genAssign
   0D4B 01 40 FF           4319 	ld	bc,#0xFF40
                           4320 ;	genAssign
                           4321 ;	AOP_STK for _main_sloc0_1_0
   0D4E 23                 4322 	inc	hl
   0D4F 36 40              4323 	ld	(hl),#0x40
   0D51 23                 4324 	inc	hl
   0D52 36 FF              4325 	ld	(hl),#0xFF
                           4326 ;	genPointerGet
                           4327 ;	AOP_STK for _main_sloc0_1_0
                           4328 ;	AOP_STK for _main_sloc1_1_0
   0D54 2B                 4329 	dec	hl
   0D55 5E                 4330 	ld	e,(hl)
   0D56 23                 4331 	inc	hl
   0D57 56                 4332 	ld	d,(hl)
   0D58 1A                 4333 	ld	a,(de)
   0D59 2B                 4334 	dec	hl
   0D5A 2B                 4335 	dec	hl
                           4336 ;	genOr
                           4337 ;	AOP_STK for _main_sloc1_1_0
   0D5B 77                 4338 	ld      (hl),a
                           4339 ; Removed redundent load
   0D5C F6 01              4340 	or	a,#0x01
                           4341 ;	genAssign (pointer)
   0D5E 02                 4342 	ld	(bc),a
                           4343 ;	main.c 543
                           4344 ;	genAssign
   0D5F 01 40 FF           4345 	ld	bc,#0xFF40
                           4346 ;	genAssign
                           4347 ;	AOP_STK for _main_sloc0_1_0
   0D62 23                 4348 	inc	hl
   0D63 36 40              4349 	ld	(hl),#0x40
   0D65 23                 4350 	inc	hl
   0D66 36 FF              4351 	ld	(hl),#0xFF
                           4352 ;	genPointerGet
                           4353 ;	AOP_STK for _main_sloc0_1_0
                           4354 ;	AOP_STK for _main_sloc1_1_0
   0D68 2B                 4355 	dec	hl
   0D69 5E                 4356 	ld	e,(hl)
   0D6A 23                 4357 	inc	hl
   0D6B 56                 4358 	ld	d,(hl)
   0D6C 1A                 4359 	ld	a,(de)
   0D6D 2B                 4360 	dec	hl
   0D6E 2B                 4361 	dec	hl
                           4362 ;	genOr
                           4363 ;	AOP_STK for _main_sloc1_1_0
   0D6F 77                 4364 	ld      (hl),a
                           4365 ; Removed redundent load
   0D70 F6 02              4366 	or	a,#0x02
                           4367 ;	genAssign (pointer)
   0D72 02                 4368 	ld	(bc),a
                           4369 ;	main.c 545
                           4370 ;	genCall
                           4371 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D73 CD BA 08           4372 	call	_fadeout
                           4373 ;	main.c 547
                           4374 ;	genIpush
                           4375 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D76 21 F8 01           4376 	ld	hl,#_ShipSprite
   0D79 E5                 4377 	push	hl
                           4378 ;	genIpush
   0D7A 21 00 10           4379 	ld	hl,#0x1000
   0D7D E5                 4380 	push	hl
                           4381 ;	genCall
   0D7E CD 00 00           4382 	call	_set_sprite_data
   0D81 E8 04              4383 	lda	sp,4(sp)
                           4384 ;	main.c 548
                           4385 ;	genIpush
                           4386 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D83 21 38 03           4387 	ld	hl,#_ArrowSprite
   0D86 E5                 4388 	push	hl
                           4389 ;	genIpush
   0D87 21 10 0C           4390 	ld	hl,#0x0C10
   0D8A E5                 4391 	push	hl
                           4392 ;	genCall
   0D8B CD 00 00           4393 	call	_set_sprite_data
   0D8E E8 04              4394 	lda	sp,4(sp)
                           4395 ;	main.c 549
                           4396 ;	genIpush
                           4397 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D90 21 F8 02           4398 	ld	hl,#_ShieldSprite
   0D93 E5                 4399 	push	hl
                           4400 ;	genIpush
   0D94 21 1C 04           4401 	ld	hl,#0x041C
   0D97 E5                 4402 	push	hl
                           4403 ;	genCall
   0D98 CD 00 00           4404 	call	_set_sprite_data
   0D9B E8 04              4405 	lda	sp,4(sp)
                           4406 ;	main.c 550
                           4407 ;	genIpush
                           4408 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D9D 21 F8 03           4409 	ld	hl,#_Num
   0DA0 E5                 4410 	push	hl
                           4411 ;	genIpush
   0DA1 21 20 0A           4412 	ld	hl,#0x0A20
   0DA4 E5                 4413 	push	hl
                           4414 ;	genCall
   0DA5 CD 00 00           4415 	call	_set_sprite_data
   0DA8 E8 04              4416 	lda	sp,4(sp)
                           4417 ;	main.c 551
                           4418 ;	genIpush
                           4419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DAA 21 98 04           4420 	ld	hl,#_GV
   0DAD E5                 4421 	push	hl
                           4422 ;	genIpush
   0DAE 21 2A 07           4423 	ld	hl,#0x072A
   0DB1 E5                 4424 	push	hl
                           4425 ;	genCall
   0DB2 CD 00 00           4426 	call	_set_sprite_data
   0DB5 E8 04              4427 	lda	sp,4(sp)
                           4428 ;	main.c 552
                           4429 ;	genCall
                           4430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DB7 CD 97 01           4431 	call	_setupship
                           4432 ;	main.c 553
                           4433 ;	genCall
                           4434 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DBA CD 9A 05           4435 	call	_setuparrow
                           4436 ;	main.c 554
                           4437 ;	genCall
                           4438 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DBD CD 19 02           4439 	call	_setupshield
                           4440 ;	main.c 556
                           4441 ;	genIpush
                           4442 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DC0 21 00 00           4443 	ld	hl,#_mymaptile
   0DC3 E5                 4444 	push	hl
                           4445 ;	genIpush
   0DC4 21 00 09           4446 	ld	hl,#0x0900
   0DC7 E5                 4447 	push	hl
                           4448 ;	genCall
   0DC8 CD 00 00           4449 	call	_set_bkg_data
   0DCB E8 04              4450 	lda	sp,4(sp)
                           4451 ;	main.c 557
                           4452 ;	genIpush
                           4453 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DCD 21 90 00           4454 	ld	hl,#_mymap
   0DD0 E5                 4455 	push	hl
                           4456 ;	genIpush
   0DD1 21 14 12           4457 	ld	hl,#0x1214
   0DD4 E5                 4458 	push	hl
                           4459 ;	genIpush
   0DD5 21 00 00           4460 	ld	hl,#0x0000
   0DD8 E5                 4461 	push	hl
                           4462 ;	genCall
   0DD9 CD 00 00           4463 	call	_set_bkg_tiles
   0DDC E8 06              4464 	lda	sp,6(sp)
                           4465 ;	main.c 559
                           4466 ;	genCall
                           4467 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DDE CD 1A 09           4468 	call	_fadein
                           4469 ;	main.c 561
                           4470 ;	genLabel
   0DE1                    4471 00120$:
                           4472 ;	genIpush
                           4473 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DE1 21 40 05           4474 	ld	hl,#_arrow
   0DE4 E5                 4475 	push	hl
                           4476 ;	genIpush
   0DE5 21 38 05           4477 	ld	hl,#_ship
   0DE8 E5                 4478 	push	hl
                           4479 ;	genCall
   0DE9 CD 6D 09           4480 	call	_checkcollisions
   0DEC 4B                 4481 	ld	c,e
   0DED E8 04              4482 	lda	sp,4(sp)
                           4483 ;	genIfx
   0DEF AF                 4484 	xor	a,a
   0DF0 B1                 4485 	or	a,c
   0DF1 C2 2B 0F           4486 	jp	nz,00122$
                           4487 ;	main.c 562
                           4488 ;	genCall
                           4489 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DF4 CD AA 06           4490 	call	_printscore
                           4491 ;	main.c 563
                           4492 ;	genCall
                           4493 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DF7 CD 00 00           4494 	call	_joypad
   0DFA 4B                 4495 	ld	c,e
                           4496 ;	genCmpEq
                           4497 ; genCmpEq: left 1, right 1, result 0
   0DFB 79                 4498 	ld	a,c
   0DFC FE 01              4499 	cp	a,#0x01
   0DFE CA 22 0E           4500 	jp	z,00102$
   0E01                    4501 00136$:
                           4502 ;	genCmpEq
                           4503 ; genCmpEq: left 1, right 1, result 0
   0E01 79                 4504 	ld	a,c
   0E02 FE 02              4505 	cp	a,#0x02
   0E04 CA 16 0E           4506 	jp	z,00101$
   0E07                    4507 00137$:
                           4508 ;	genCmpEq
                           4509 ; genCmpEq: left 1, right 1, result 0
   0E07 79                 4510 	ld	a,c
   0E08 FE 04              4511 	cp	a,#0x04
   0E0A CA 2E 0E           4512 	jp	z,00103$
   0E0D                    4513 00138$:
                           4514 ;	genCmpEq
                           4515 ; genCmpEq: left 1, right 1, result 0
   0E0D 79                 4516 	ld	a,c
   0E0E FE 08              4517 	cp	a,#0x08
   0E10 CA 3A 0E           4518 	jp	z,00104$
   0E13                    4519 00139$:
                           4520 ;	genGoto
   0E13 C3 43 0E           4521 	jp	00106$
                           4522 ;	main.c 565
                           4523 ;	genLabel
   0E16                    4524 00101$:
                           4525 ;	genIpush
                           4526 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E16 3E 03              4527 	ld	a,#0x03
   0E18 F5                 4528 	push	af
   0E19 33                 4529 	inc	sp
                           4530 ;	genCall
   0E1A CD 4C 02           4531 	call	_rotatesprite
   0E1D E8 01              4532 	lda	sp,1(sp)
                           4533 ;	main.c 566
                           4534 ;	genGoto
   0E1F C3 43 0E           4535 	jp	00106$
                           4536 ;	main.c 568
                           4537 ;	genLabel
   0E22                    4538 00102$:
                           4539 ;	genIpush
                           4540 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E22 3E 01              4541 	ld	a,#0x01
   0E24 F5                 4542 	push	af
   0E25 33                 4543 	inc	sp
                           4544 ;	genCall
   0E26 CD 4C 02           4545 	call	_rotatesprite
   0E29 E8 01              4546 	lda	sp,1(sp)
                           4547 ;	main.c 569
                           4548 ;	genGoto
   0E2B C3 43 0E           4549 	jp	00106$
                           4550 ;	main.c 571
                           4551 ;	genLabel
   0E2E                    4552 00103$:
                           4553 ;	genIpush
                           4554 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E2E 3E 00              4555 	ld	a,#0x00
   0E30 F5                 4556 	push	af
   0E31 33                 4557 	inc	sp
                           4558 ;	genCall
   0E32 CD 4C 02           4559 	call	_rotatesprite
   0E35 E8 01              4560 	lda	sp,1(sp)
                           4561 ;	main.c 572
                           4562 ;	genGoto
   0E37 C3 43 0E           4563 	jp	00106$
                           4564 ;	main.c 574
                           4565 ;	genLabel
   0E3A                    4566 00104$:
                           4567 ;	genIpush
                           4568 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E3A 3E 02              4569 	ld	a,#0x02
   0E3C F5                 4570 	push	af
   0E3D 33                 4571 	inc	sp
                           4572 ;	genCall
   0E3E CD 4C 02           4573 	call	_rotatesprite
   0E41 E8 01              4574 	lda	sp,1(sp)
                           4575 ;	main.c 578
                           4576 ;	genLabel
   0E43                    4577 00106$:
                           4578 ;	main.c 579
                           4579 ;	genIpush
                           4580 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0E43 3E 02              4581 	ld	a,#0x02
   0E45 F5                 4582 	push	af
   0E46 33                 4583 	inc	sp
                           4584 ;	genCall
   0E47 CD A6 08           4585 	call	_performantdelay
   0E4A E8 01              4586 	lda	sp,1(sp)
                           4587 ;	main.c 581
                           4588 ;	genPlus
                           4589 ;	genPlusIncr
   0E4C 01 48 05           4590 	ld	bc,#_arrow + 8
                           4591 ;	genPointerGet
   0E4F 0A                 4592 	ld	a,(bc)
                           4593 ;	genCmpEq
                           4594 ; genCmpEq: left 1, right 1, result 0
   0E50 4F                 4595 	ld	c,a
   0E51 B7                 4596 	or	a,a
   0E52 C2 77 0E           4597 	jp	nz,00116$
   0E55 18 03              4598 	jr	00141$
   0E57                    4599 00140$:
   0E57 C3 77 0E           4600 	jp	00116$
   0E5A                    4601 00141$:
                           4602 ;	main.c 582
                           4603 ;	genPlus
                           4604 ;	AOP_STK for _main_sloc0_1_0
                           4605 ;	genPlusIncr
                           4606 ;	Can't optimise plus by inc, falling back to the normal way
   0E5A 11 40 05           4607 	ld	de,#_arrow
   0E5D 21 05 00           4608 	ld	hl,#0x0005
   0E60 19                 4609 	add	hl,de
   0E61 7D                 4610 	ld	a,l
   0E62 54                 4611 	ld	d,h
   0E63 F8 01              4612 	lda	hl,1(sp)
                           4613 ;	genPointerGet
                           4614 ;	AOP_STK for _main_sloc0_1_0
   0E65 22                 4615 	ld	(hl+),a
   0E66 72                 4616 	ld	(hl),d
   0E67 5F                 4617 	ld	e,a
   0E68 1A                 4618 	ld	a,(de)
                           4619 ;	genPlus
                           4620 ;	AOP_HL for _speed
                           4621 ;	Can't optimise plus by inc, falling back to the normal way
   0E69 47                 4622 	ld	b,a
   0E6A 21 49 05           4623 	ld	hl,#_speed
   0E6D 86                 4624 	add	a,(hl)
                           4625 ;	genAssign (pointer)
                           4626 ;	AOP_STK for _main_sloc0_1_0
   0E6E F8 01              4627 	lda	hl,1(sp)
   0E70 5E                 4628 	ld	e,(hl)
   0E71 23                 4629 	inc	hl
   0E72 56                 4630 	ld	d,(hl)
   0E73 12                 4631 	ld	(de),a
                           4632 ;	genGoto
   0E74 C3 E2 0E           4633 	jp	00117$
                           4634 ;	genLabel
   0E77                    4635 00116$:
                           4636 ;	main.c 584
                           4637 ;	genCmpEq
                           4638 ; genCmpEq: left 1, right 1, result 0
   0E77 79                 4639 	ld	a,c
   0E78 FE 01              4640 	cp	a,#0x01
   0E7A C2 A1 0E           4641 	jp	nz,00113$
   0E7D 18 03              4642 	jr	00143$
   0E7F                    4643 00142$:
   0E7F C3 A1 0E           4644 	jp	00113$
   0E82                    4645 00143$:
                           4646 ;	main.c 585
                           4647 ;	genPlus
                           4648 ;	AOP_STK for _main_sloc0_1_0
                           4649 ;	genPlusIncr
                           4650 ;	Can't optimise plus by inc, falling back to the normal way
   0E82 11 40 05           4651 	ld	de,#_arrow
   0E85 21 04 00           4652 	ld	hl,#0x0004
   0E88 19                 4653 	add	hl,de
   0E89 7D                 4654 	ld	a,l
   0E8A 54                 4655 	ld	d,h
   0E8B F8 01              4656 	lda	hl,1(sp)
                           4657 ;	genPointerGet
                           4658 ;	AOP_STK for _main_sloc0_1_0
   0E8D 22                 4659 	ld	(hl+),a
   0E8E 72                 4660 	ld	(hl),d
   0E8F 5F                 4661 	ld	e,a
   0E90 1A                 4662 	ld	a,(de)
                           4663 ;	genMinus
                           4664 ;	AOP_HL for _speed
   0E91 47                 4665 	ld	b,a
   0E92 21 49 05           4666 	ld	hl,#_speed
   0E95 96                 4667 	sub	a,(hl)
   0E96 47                 4668 	ld	b,a
                           4669 ;	genAssign (pointer)
                           4670 ;	AOP_STK for _main_sloc0_1_0
   0E97 F8 01              4671 	lda	hl,1(sp)
   0E99 5E                 4672 	ld	e,(hl)
   0E9A 23                 4673 	inc	hl
   0E9B 56                 4674 	ld	d,(hl)
   0E9C 78                 4675 	ld	a,b
   0E9D 12                 4676 	ld	(de),a
                           4677 ;	genGoto
   0E9E C3 E2 0E           4678 	jp	00117$
                           4679 ;	genLabel
   0EA1                    4680 00113$:
                           4681 ;	main.c 587
                           4682 ;	genCmpEq
                           4683 ; genCmpEq: left 1, right 1, result 0
   0EA1 79                 4684 	ld	a,c
   0EA2 FE 02              4685 	cp	a,#0x02
   0EA4 C2 CB 0E           4686 	jp	nz,00110$
   0EA7 18 03              4687 	jr	00145$
   0EA9                    4688 00144$:
   0EA9 C3 CB 0E           4689 	jp	00110$
   0EAC                    4690 00145$:
                           4691 ;	main.c 588
                           4692 ;	genPlus
                           4693 ;	AOP_STK for _main_sloc0_1_0
                           4694 ;	genPlusIncr
                           4695 ;	Can't optimise plus by inc, falling back to the normal way
   0EAC 11 40 05           4696 	ld	de,#_arrow
   0EAF 21 05 00           4697 	ld	hl,#0x0005
   0EB2 19                 4698 	add	hl,de
   0EB3 7D                 4699 	ld	a,l
   0EB4 54                 4700 	ld	d,h
   0EB5 F8 01              4701 	lda	hl,1(sp)
                           4702 ;	genPointerGet
                           4703 ;	AOP_STK for _main_sloc0_1_0
   0EB7 22                 4704 	ld	(hl+),a
   0EB8 72                 4705 	ld	(hl),d
   0EB9 5F                 4706 	ld	e,a
   0EBA 1A                 4707 	ld	a,(de)
                           4708 ;	genMinus
                           4709 ;	AOP_HL for _speed
   0EBB 47                 4710 	ld	b,a
   0EBC 21 49 05           4711 	ld	hl,#_speed
   0EBF 96                 4712 	sub	a,(hl)
   0EC0 47                 4713 	ld	b,a
                           4714 ;	genAssign (pointer)
                           4715 ;	AOP_STK for _main_sloc0_1_0
   0EC1 F8 01              4716 	lda	hl,1(sp)
   0EC3 5E                 4717 	ld	e,(hl)
   0EC4 23                 4718 	inc	hl
   0EC5 56                 4719 	ld	d,(hl)
   0EC6 78                 4720 	ld	a,b
   0EC7 12                 4721 	ld	(de),a
                           4722 ;	genGoto
   0EC8 C3 E2 0E           4723 	jp	00117$
                           4724 ;	genLabel
   0ECB                    4725 00110$:
                           4726 ;	main.c 590
                           4727 ;	genCmpEq
                           4728 ; genCmpEq: left 1, right 1, result 0
   0ECB 79                 4729 	ld	a,c
   0ECC FE 03              4730 	cp	a,#0x03
   0ECE C2 E2 0E           4731 	jp	nz,00117$
   0ED1 18 03              4732 	jr	00147$
   0ED3                    4733 00146$:
   0ED3 C3 E2 0E           4734 	jp	00117$
   0ED6                    4735 00147$:
                           4736 ;	main.c 591
                           4737 ;	genPlus
                           4738 ;	genPlusIncr
   0ED6 01 44 05           4739 	ld	bc,#_arrow + 4
                           4740 ;	genPointerGet
                           4741 ;	AOP_STK for _main_sloc1_1_0
   0ED9 0A                 4742 	ld	a,(bc)
   0EDA F8 00              4743 	lda	hl,0(sp)
                           4744 ;	genPlus
                           4745 ;	AOP_STK for _main_sloc1_1_0
                           4746 ;	AOP_HL for _speed
                           4747 ;	Can't optimise plus by inc, falling back to the normal way
   0EDC 77                 4748 	ld      (hl),a
                           4749 ; Removed redundent load
   0EDD 21 49 05           4750 	ld	hl,#_speed
   0EE0 86                 4751 	add	a,(hl)
                           4752 ;	genAssign (pointer)
   0EE1 02                 4753 	ld	(bc),a
                           4754 ;	genLabel
   0EE2                    4755 00117$:
                           4756 ;	main.c 593
                           4757 ;	genPlus
                           4758 ;	genPlusIncr
   0EE2 01 45 05           4759 	ld	bc,#_arrow + 5
                           4760 ;	genPointerGet
   0EE5 0A                 4761 	ld	a,(bc)
   0EE6 4F                 4762 	ld	c,a
                           4763 ;	genPlus
                           4764 ;	AOP_STK for _main_sloc0_1_0
                           4765 ;	genPlusIncr
                           4766 ;	Can't optimise plus by inc, falling back to the normal way
   0EE7 11 40 05           4767 	ld	de,#_arrow
   0EEA 21 04 00           4768 	ld	hl,#0x0004
   0EED 19                 4769 	add	hl,de
   0EEE 7D                 4770 	ld	a,l
   0EEF 54                 4771 	ld	d,h
   0EF0 F8 01              4772 	lda	hl,1(sp)
                           4773 ;	genPointerGet
                           4774 ;	AOP_STK for _main_sloc0_1_0
   0EF2 22                 4775 	ld	(hl+),a
   0EF3 72                 4776 	ld	(hl),d
   0EF4 5F                 4777 	ld	e,a
   0EF5 1A                 4778 	ld	a,(de)
   0EF6 47                 4779 	ld	b,a
                           4780 ;	genIpush
                           4781 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0EF7 79                 4782 	ld	a,c
   0EF8 F5                 4783 	push	af
   0EF9 33                 4784 	inc	sp
                           4785 ;	genIpush
   0EFA 78                 4786 	ld	a,b
   0EFB F5                 4787 	push	af
   0EFC 33                 4788 	inc	sp
                           4789 ;	genIpush
   0EFD 21 40 05           4790 	ld	hl,#_arrow
   0F00 E5                 4791 	push	hl
                           4792 ;	genCall
   0F01 CD 93 00           4793 	call	_movearrowcharacter
   0F04 E8 04              4794 	lda	sp,4(sp)
                           4795 ;	main.c 594
                           4796 ;	genIpush
                           4797 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F06 21 40 05           4798 	ld	hl,#_arrow
   0F09 E5                 4799 	push	hl
                           4800 ;	genIpush
   0F0A 21 4C 05           4801 	ld	hl,#_shield
   0F0D E5                 4802 	push	hl
                           4803 ;	genCall
   0F0E CD 26 0B           4804 	call	_checkcollisions2
   0F11 4B                 4805 	ld	c,e
   0F12 E8 04              4806 	lda	sp,4(sp)
                           4807 ;	genIfx
   0F14 AF                 4808 	xor	a,a
   0F15 B1                 4809 	or	a,c
   0F16 CA E1 0D           4810 	jp	z,00120$
                           4811 ;	main.c 595
                           4812 ;	genPlus
                           4813 ;	AOP_HL for _speed
                           4814 ;	genPlusIncr
   0F19 21 49 05           4815 	ld	hl,#_speed
   0F1C 34                 4816 	inc	(hl)
                           4817 ;	main.c 596
                           4818 ;	genPlus
                           4819 ;	AOP_HL for _score
                           4820 ;	genPlusIncr
   0F1D 21 4A 05           4821 	ld	hl,#_score
   0F20 34                 4822 	inc	(hl)
   0F21 20 02              4823 	jr	nz,00148$
   0F23 23                 4824 	inc	hl
   0F24 34                 4825 	inc	(hl)
   0F25                    4826 00148$:
                           4827 ;	main.c 597
                           4828 ;	genCall
                           4829 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F25 CD 9A 05           4830 	call	_setuparrow
                           4831 ;	genGoto
   0F28 C3 E1 0D           4832 	jp	00120$
                           4833 ;	genLabel
   0F2B                    4834 00122$:
                           4835 ;	main.c 600
                           4836 ;	genCall
                           4837 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F2B CD F5 07           4838 	call	_printGV
                           4839 ;	genLabel
   0F2E                    4840 00123$:
                           4841 ;	genEndFunction
   0F2E E8 05              4842 	lda	sp,5(sp)
   0F30 C9                 4843 	ret
   0F31                    4844 ___main_end:
   0F31                    4845 __str_0:
   0F31 50 52 45 53 53 20  4846 	.ascii "PRESS SELECT "
        53 45 4C 45 43 54
        20
   0F3E 0A                 4847 	.db 0x0A
   0F3F 00                 4848 	.db 0x00
   0F40                    4849 __str_1:
   0F40 50 52 45 53 53 20  4850 	.ascii "PRESS START "
        53 54 41 52 54 20
   0F4C 0A                 4851 	.db 0x0A
   0F4D 00                 4852 	.db 0x00
                           4853 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  1 _ArrowSprite                       0338 GR
  1 _GV                                0498 GR
  1 _Num                               03F8 GR
  1 _ShieldSprite                      02F8 GR
  1 _ShipSprite                        01F8 GR
  0 ___checkcollisions2_end            0CE4 R
  0 ___checkcollisions2_start          0B26 R
  0 ___checkcollisions_end             0B26 R
  0 ___checkcollisions_start           096D R
  0 ___fadein_end                      096D R
  0 ___fadein_start                    091A R
  0 ___fadeout_end                     091A R
  0 ___fadeout_start                   08BA R
  0 ___main_end                        0F31 R
  0 ___main_start                      0CE4 R
  0 ___movearrowcharacter_end          0126 R
  0 ___movearrowcharacter_start        0093 R
  0 ___movegamecharacter_end           0093 R
  0 ___movegamecharacter_start         0000 R
  0 ___moveshield_end                  0197 R
  0 ___moveshield_start                0126 R
  0 ___performantdelay_end             08BA R
  0 ___performantdelay_start           08A6 R
  0 ___printGV_end                     08A6 R
  0 ___printGV_start                   07F5 R
  0 ___printscore_end                  07F5 R
  0 ___printscore_start                06AA R
  0 ___rotatearrow_end                 059A R
  0 ___rotatearrow_start               03D9 R
  0 ___rotatesprite_end                03D9 R
  0 ___rotatesprite_start              024C R
  0 ___setuparrow_end                  06AA R
  0 ___setuparrow_start                059A R
  0 ___setupshield_end                 024C R
  0 ___setupshield_start               0219 R
  0 ___setupship_end                   0219 R
  0 ___setupship_start                 0197 R
    __divuint_rrx_s                    **** GX
    __initrleblock                     **** GX
    __moduchar_rrx_s                   **** GX
    __moduint_rrx_s                    **** GX
  0 __str_0                            0F31 R
  0 __str_1                            0F40 R
  1 _arrow                             0540 GR
  0 _checkcollisions                   096D GR
  0 _checkcollisions2                  0B26 GR
  0 _fadein                            091A GR
  0 _fadeout                           08BA GR
    _initarand                         **** GX
    _joypad                            **** GX
  0 _main                              0CE4 GR
    _move_sprite                       **** GX
  0 _movearrowcharacter                0093 GR
  0 _movegamecharacter                 0000 GR
  0 _moveshield                        0126 GR
  1 _mymap                             0090 GR
  1 _mymaptile                         0000 GR
  0 _performantdelay                   08A6 GR
  0 _printGV                           07F5 GR
    _printf                            **** GX
  0 _printscore                        06AA GR
    _rand                              **** GX
  0 _rotatearrow                       03D9 GR
  0 _rotatesprite                      024C GR
  1 _score                             054A GR
    _set_bkg_data                      **** GX
    _set_bkg_tiles                     **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _setuparrow                        059A GR
  0 _setupshield                       0219 GR
  0 _setupship                         0197 GR
  1 _shield                            054C GR
  1 _ship                              0538 GR
  1 _speed                             0549 GR
    _wait_vbl_done                     **** GX
    _waitpad                           **** GX
    _waitpadup                         **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  F4E   flags 0
   1 _DATA                              size  554   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size  329   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
